//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://schemas.therefore.net/webservices/interop/v0001/types", ClrNamespace = "Therefore.WebAPI")]

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
namespace Therefore.WebAPI
{
    using System.Runtime.Serialization;
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveFolderParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveFolderParams : object
    {

        private int FolderNoField;

        private int FolderTypeField;

        private string NameField;

        private System.Nullable<int> ParentFolderNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FolderType
        {
            get
            {
                return this.FolderTypeField;
            }
            set
            {
                this.FolderTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentFolderNo
        {
            get
            {
                return this.ParentFolderNoField;
            }
            set
            {
                this.ParentFolderNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveFolderReponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveFolderReponse : object
    {

        private Therefore.WebAPI.WSFolder FolderField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSFolder Folder
        {
            get
            {
                return this.FolderField;
            }
            set
            {
                this.FolderField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFolder", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFolder : object
    {

        private int FolderNoField;

        private int FoldertypeField;

        private System.Guid GuidField;

        private string NameField;

        private int ParentFolderNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Foldertype
        {
            get
            {
                return this.FoldertypeField;
            }
            set
            {
                this.FoldertypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ParentFolderNo
        {
            get
            {
                return this.ParentFolderNoField;
            }
            set
            {
                this.ParentFolderNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFaultDetails : object
    {

        private Therefore.WebAPI.WSError WSErrorField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSError WSError
        {
            get
            {
                return this.WSErrorField;
            }
            set
            {
                this.WSErrorField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSError", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSError : object
    {

        private System.Nullable<long> ErrorCodeField;

        private string ErrorCodeHexField;

        private string ErrorCodeStringField;

        private string ErrorIdField;

        private string ErrorMessageField;

        private Therefore.WebAPI.Service.Contract.Exceptions.WSErrorSource ErrorSourceField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCodeHex
        {
            get
            {
                return this.ErrorCodeHexField;
            }
            set
            {
                this.ErrorCodeHexField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCodeString
        {
            get
            {
                return this.ErrorCodeStringField;
            }
            set
            {
                this.ErrorCodeStringField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorId
        {
            get
            {
                return this.ErrorIdField;
            }
            set
            {
                this.ErrorIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.Service.Contract.Exceptions.WSErrorSource ErrorSource
        {
            get
            {
                return this.ErrorSourceField;
            }
            set
            {
                this.ErrorSourceField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteFolderParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteFolderParams : object
    {

        private int FolderNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteFolderResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteFolderResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SetParentFolderParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetParentFolderParams : object
    {

        private int ObjectNoField;

        private int ObjectTypeField;

        private int ParentFolderNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ObjectNo
        {
            get
            {
                return this.ObjectNoField;
            }
            set
            {
                this.ObjectNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ObjectType
        {
            get
            {
                return this.ObjectTypeField;
            }
            set
            {
                this.ObjectTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ParentFolderNo
        {
            get
            {
                return this.ParentFolderNoField;
            }
            set
            {
                this.ParentFolderNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SetParentFolderResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetParentFolderResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "QueryDependentFieldsDirectParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class QueryDependentFieldsDirectParams : object
    {

        private int DataTypeNoField;

        private System.Nullable<int> maxRowsField;

        private Therefore.WebAPI.QueryConditionLists queryConditionsField;

        private Therefore.WebAPI.SelectColumnsList selectColumnsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DataTypeNo
        {
            get
            {
                return this.DataTypeNoField;
            }
            set
            {
                this.DataTypeNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> maxRows
        {
            get
            {
                return this.maxRowsField;
            }
            set
            {
                this.maxRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.QueryConditionLists queryConditions
        {
            get
            {
                return this.queryConditionsField;
            }
            set
            {
                this.queryConditionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.SelectColumnsList selectColumns
        {
            get
            {
                return this.selectColumnsField;
            }
            set
            {
                this.selectColumnsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "QueryConditionLists", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "WSQueryDependentFieldsDirectCondition")]
    public class QueryConditionLists : System.Collections.Generic.List<Therefore.WebAPI.WSQueryDependentFieldsDirectCondition>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "SelectColumnsList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "SelectColumn")]
    public class SelectColumnsList : System.Collections.Generic.List<string>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSQueryDependentFieldsDirectCondition", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSQueryDependentFieldsDirectCondition : object
    {

        private string ColNameField;

        private int ColumnTypeField;

        private string ConditionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColName
        {
            get
            {
                return this.ColNameField;
            }
            set
            {
                this.ColNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColumnType
        {
            get
            {
                return this.ColumnTypeField;
            }
            set
            {
                this.ColumnTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Condition
        {
            get
            {
                return this.ConditionField;
            }
            set
            {
                this.ConditionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "QueryDependentFieldsDirectResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class QueryDependentFieldsDirectResponse : object
    {

        private Therefore.WebAPI.WSQueryDependentFieldsQueryDirectResults QueryResultField;

        private bool AllRowsReturnedField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSQueryDependentFieldsQueryDirectResults QueryResult
        {
            get
            {
                return this.QueryResultField;
            }
            set
            {
                this.QueryResultField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public bool AllRowsReturned
        {
            get
            {
                return this.AllRowsReturnedField;
            }
            set
            {
                this.AllRowsReturnedField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSQueryDependentFieldsQueryDirectResults", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSQueryDependentFieldsQueryDirectResults : object
    {

        private string[] ColumnsField;

        private Therefore.WebAPI.WSDependentFieldsQueryResultRow[] ResultRowsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Columns
        {
            get
            {
                return this.ColumnsField;
            }
            set
            {
                this.ColumnsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSDependentFieldsQueryResultRow[] ResultRows
        {
            get
            {
                return this.ResultRowsField;
            }
            set
            {
                this.ResultRowsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSDependentFieldsQueryResultRow", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSDependentFieldsQueryResultRow : object
    {

        private Therefore.WebAPI.IndexValueList FieldValuesField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.IndexValueList FieldValues
        {
            get
            {
                return this.FieldValuesField;
            }
            set
            {
                this.FieldValuesField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "IndexValueList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "IndexValue")]
    public class IndexValueList : System.Collections.Generic.List<string>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetReferencedTableInfoParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetReferencedTableInfoParams : object
    {

        private int DataTypeNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DataTypeNo
        {
            get
            {
                return this.DataTypeNoField;
            }
            set
            {
                this.DataTypeNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetReferencedTableInfoResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetReferencedTableInfoResponse : object
    {

        private int FolderNoField;

        private string IndexColumnField;

        private string NameField;

        private string TableNameField;

        private int TypeGroupField;

        private int TypeNoField;

        private Therefore.WebAPI.WSRefTableColInfo[] ColumnsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndexColumn
        {
            get
            {
                return this.IndexColumnField;
            }
            set
            {
                this.IndexColumnField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName
        {
            get
            {
                return this.TableNameField;
            }
            set
            {
                this.TableNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeGroup
        {
            get
            {
                return this.TypeGroupField;
            }
            set
            {
                this.TypeGroupField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeNo
        {
            get
            {
                return this.TypeNoField;
            }
            set
            {
                this.TypeNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public Therefore.WebAPI.WSRefTableColInfo[] Columns
        {
            get
            {
                return this.ColumnsField;
            }
            set
            {
                this.ColumnsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSRefTableColInfo", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSRefTableColInfo : object
    {

        private string ColumnNameField;

        private int LengthField;

        private int TypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName
        {
            get
            {
                return this.ColumnNameField;
            }
            set
            {
                this.ColumnNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Length
        {
            get
            {
                return this.LengthField;
            }
            set
            {
                this.LengthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "VerifyReCaptchaParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class VerifyReCaptchaParams : object
    {

        private string tokenField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string token
        {
            get
            {
                return this.tokenField;
            }
            set
            {
                this.tokenField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "VerifyReCaptchaResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class VerifyReCaptchaResponse : object
    {

        private bool successField;

        private System.DateTime challenge_tsField;

        private string hostnameField;

        private double scoreField;

        private string actionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public System.DateTime challenge_ts
        {
            get
            {
                return this.challenge_tsField;
            }
            set
            {
                this.challenge_tsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string hostname
        {
            get
            {
                return this.hostnameField;
            }
            set
            {
                this.hostnameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public double score
        {
            get
            {
                return this.scoreField;
            }
            set
            {
                this.scoreField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public string action
        {
            get
            {
                return this.actionField;
            }
            set
            {
                this.actionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveEFormDraftParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveEFormDraftParams : object
    {

        private int FormNoField;

        private string SubmissionDataField;

        private int SubmissionNoField;

        private int VersionNoField;

        private string NameField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FormNo
        {
            get
            {
                return this.FormNoField;
            }
            set
            {
                this.FormNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string SubmissionData
        {
            get
            {
                return this.SubmissionDataField;
            }
            set
            {
                this.SubmissionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubmissionNo
        {
            get
            {
                return this.SubmissionNoField;
            }
            set
            {
                this.SubmissionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveEFormDraftResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveEFormDraftResponse : object
    {

        private int SubmissionNoField;

        private System.Guid SubmissionIdField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int SubmissionNo
        {
            get
            {
                return this.SubmissionNoField;
            }
            set
            {
                this.SubmissionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 1)]
        public System.Guid SubmissionId
        {
            get
            {
                return this.SubmissionIdField;
            }
            set
            {
                this.SubmissionIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SearchEFormSubmissionParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SearchEFormSubmissionParams : object
    {

        private Therefore.WebAPI.WSSubmissionType SearchSubmissionTypeField;

        private int MaxRowsField;

        private System.Nullable<System.Guid> SubmissionIdField;

        private System.Nullable<bool> FetchSubmissionField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSSubmissionType SearchSubmissionType
        {
            get
            {
                return this.SearchSubmissionTypeField;
            }
            set
            {
                this.SearchSubmissionTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 1)]
        public int MaxRows
        {
            get
            {
                return this.MaxRowsField;
            }
            set
            {
                this.MaxRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<System.Guid> SubmissionId
        {
            get
            {
                return this.SubmissionIdField;
            }
            set
            {
                this.SubmissionIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public System.Nullable<bool> FetchSubmission
        {
            get
            {
                return this.FetchSubmissionField;
            }
            set
            {
                this.FetchSubmissionField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSSubmissionType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSSubmissionType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Final = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Draft = 3,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SearchEFormSubmissionResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SearchEFormSubmissionResponse : object
    {

        private Therefore.WebAPI.WSEFormSubmission[] ResultsField;

        private bool AllRowsReturnedField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSEFormSubmission[] Results
        {
            get
            {
                return this.ResultsField;
            }
            set
            {
                this.ResultsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public bool AllRowsReturned
        {
            get
            {
                return this.AllRowsReturnedField;
            }
            set
            {
                this.AllRowsReturnedField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSEFormSubmission", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSEFormSubmission : object
    {

        private int SubmissionNoField;

        private int FormNoField;

        private int VersionNoField;

        private Therefore.WebAPI.WSSubmissionType SubmissionTypeField;

        private string CreatedByUserField;

        private int CreatedByUserNoField;

        private System.DateTime CreatedField;

        private System.Guid SubmissionIdField;

        private string NameField;

        private string SubmissionField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int SubmissionNo
        {
            get
            {
                return this.SubmissionNoField;
            }
            set
            {
                this.SubmissionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 1)]
        public int FormNo
        {
            get
            {
                return this.FormNoField;
            }
            set
            {
                this.FormNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 2)]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 3)]
        public Therefore.WebAPI.WSSubmissionType SubmissionType
        {
            get
            {
                return this.SubmissionTypeField;
            }
            set
            {
                this.SubmissionTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 4)]
        public string CreatedByUser
        {
            get
            {
                return this.CreatedByUserField;
            }
            set
            {
                this.CreatedByUserField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 5)]
        public int CreatedByUserNo
        {
            get
            {
                return this.CreatedByUserNoField;
            }
            set
            {
                this.CreatedByUserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 6)]
        public System.DateTime Created
        {
            get
            {
                return this.CreatedField;
            }
            set
            {
                this.CreatedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 7)]
        public System.Guid SubmissionId
        {
            get
            {
                return this.SubmissionIdField;
            }
            set
            {
                this.SubmissionIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 8)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public string Submission
        {
            get
            {
                return this.SubmissionField;
            }
            set
            {
                this.SubmissionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ClearLocalCacheParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ClearLocalCacheParams : object
    {

        private System.Nullable<Therefore.WebAPI.WSObjectType> ObjectTypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Therefore.WebAPI.WSObjectType> ObjectType
        {
            get
            {
                return this.ObjectTypeField;
            }
            set
            {
                this.ObjectTypeField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSObjectType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSObjectType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = -1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Server = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Document = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Category = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Field = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataType = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MediaPool = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Media = 7,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndexingProfile = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpoolType = 9,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Query = 10,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 11,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Group = 12,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaptureProfile = 13,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreProcessor = 14,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        COLDForm = 15,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryTemplate = 16,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Folder = 17,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoaderProfile = 18,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowProcess = 19,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowTask = 20,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowInstance = 21,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeyDict = 22,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        StoragePolicy = 23,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Device = 24,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        StorageArea = 25,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Count = 26,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseDefinition = 37,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Case = 38,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportDefinition = 41,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        eForm = 47,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        eFormSubmission = 48,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FormImage = 99,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Keyword = 100,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Migrate = 101,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connectors = 900,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        StorageCtgry = 901,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerMediaPools = 902,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        StorageAreaMedia = 903,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerDevices = 904,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerMedia = 905,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TheSystem = 1000,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        COLD = 1001,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeConnector = 1002,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotusConnector = 1003,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SAPConnector = 1004,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ClearLocalCacheResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ClearLocalCacheResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RenameObjectParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class RenameObjectParams : object
    {

        private Therefore.WebAPI.WSObjectType ObjectTypeField;

        private int ObjectNoField;

        private string NewNameField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSObjectType ObjectType
        {
            get
            {
                return this.ObjectTypeField;
            }
            set
            {
                this.ObjectTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 1)]
        public int ObjectNo
        {
            get
            {
                return this.ObjectNoField;
            }
            set
            {
                this.ObjectNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 2)]
        public string NewName
        {
            get
            {
                return this.NewNameField;
            }
            set
            {
                this.NewNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RenameObjectResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class RenameObjectResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteEFormDraftSubmissionParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteEFormDraftSubmissionParams : object
    {

        private int SubmissionNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int SubmissionNo
        {
            get
            {
                return this.SubmissionNoField;
            }
            set
            {
                this.SubmissionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteEFormDraftSubmissionResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteEFormDraftSubmissionResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CopyEFormParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CopyEFormParams : object
    {

        private string NewFormNameField;

        private int SourceFormNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string NewFormName
        {
            get
            {
                return this.NewFormNameField;
            }
            set
            {
                this.NewFormNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int SourceFormNo
        {
            get
            {
                return this.SourceFormNoField;
            }
            set
            {
                this.SourceFormNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CopyEFormResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CopyEFormResponse : object
    {

        private Therefore.WebAPI.WSEForm NewEFormField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSEForm NewEForm
        {
            get
            {
                return this.NewEFormField;
            }
            set
            {
                this.NewEFormField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSEForm", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSEForm : object
    {

        private int FormNoField;

        private int VersionNoField;

        private string NameField;

        private int FolderNoField;

        private int CreatedByUserNoField;

        private string CreatedByUserNameField;

        private System.DateTime CreatedField;

        private int IndexingProfileNoField;

        private System.Guid GuidField;

        private int DefaultSubmissionNoField;

        private string FormDefinitionField;

        private string DefaultSubmissionField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FormNo
        {
            get
            {
                return this.FormNoField;
            }
            set
            {
                this.FormNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 2)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 3)]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 4)]
        public int CreatedByUserNo
        {
            get
            {
                return this.CreatedByUserNoField;
            }
            set
            {
                this.CreatedByUserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 5)]
        public string CreatedByUserName
        {
            get
            {
                return this.CreatedByUserNameField;
            }
            set
            {
                this.CreatedByUserNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 6)]
        public System.DateTime Created
        {
            get
            {
                return this.CreatedField;
            }
            set
            {
                this.CreatedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public int IndexingProfileNo
        {
            get
            {
                return this.IndexingProfileNoField;
            }
            set
            {
                this.IndexingProfileNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 8)]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public int DefaultSubmissionNo
        {
            get
            {
                return this.DefaultSubmissionNoField;
            }
            set
            {
                this.DefaultSubmissionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 10)]
        public string FormDefinition
        {
            get
            {
                return this.FormDefinitionField;
            }
            set
            {
                this.FormDefinitionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 11)]
        public string DefaultSubmission
        {
            get
            {
                return this.DefaultSubmissionField;
            }
            set
            {
                this.DefaultSubmissionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HandleESignaturePushParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class HandleESignaturePushParams : object
    {

        private string UniqueIdField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string UniqueId
        {
            get
            {
                return this.UniqueIdField;
            }
            set
            {
                this.UniqueIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HandleESignaturePushResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class HandleESignaturePushResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetClientDiscoveryInfoParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetClientDiscoveryInfoParams : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetClientDiscoveryInfoResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetClientDiscoveryInfoResponse : object
    {

        private string WebApiUrlField;

        private Therefore.WebAPI.WSClientConnectionSettings[] ClientSettingsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebApiUrl
        {
            get
            {
                return this.WebApiUrlField;
            }
            set
            {
                this.WebApiUrlField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public Therefore.WebAPI.WSClientConnectionSettings[] ClientSettings
        {
            get
            {
                return this.ClientSettingsField;
            }
            set
            {
                this.ClientSettingsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSClientConnectionSettings", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSClientConnectionSettings : object
    {

        private string LocalAdfsUrlField;

        private string RemoteAdfsUrlField;

        private string LocalAdfsUriField;

        private string RemoteAdfsUriField;

        private Therefore.WebAPI.WSFederationProvider FederationProviderField;

        private string AuthenticationUrlField;

        private string ClientIdField;

        private string AdditionalParamsField;

        private string NameField;

        private string[] ScopesField;

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public string LocalAdfsUrl
        {
            get
            {
                return this.LocalAdfsUrlField;
            }
            set
            {
                this.LocalAdfsUrlField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public string RemoteAdfsUrl
        {
            get
            {
                return this.RemoteAdfsUrlField;
            }
            set
            {
                this.RemoteAdfsUrlField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 2)]
        public string LocalAdfsUri
        {
            get
            {
                return this.LocalAdfsUriField;
            }
            set
            {
                this.LocalAdfsUriField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 3)]
        public string RemoteAdfsUri
        {
            get
            {
                return this.RemoteAdfsUriField;
            }
            set
            {
                this.RemoteAdfsUriField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public Therefore.WebAPI.WSFederationProvider FederationProvider
        {
            get
            {
                return this.FederationProviderField;
            }
            set
            {
                this.FederationProviderField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 5)]
        public string AuthenticationUrl
        {
            get
            {
                return this.AuthenticationUrlField;
            }
            set
            {
                this.AuthenticationUrlField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 6)]
        public string ClientId
        {
            get
            {
                return this.ClientIdField;
            }
            set
            {
                this.ClientIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 7)]
        public string AdditionalParams
        {
            get
            {
                return this.AdditionalParamsField;
            }
            set
            {
                this.AdditionalParamsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 8)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 9)]
        public string[] Scopes
        {
            get
            {
                return this.ScopesField;
            }
            set
            {
                this.ScopesField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFederationProvider", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSFederationProvider : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Adfs = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AzureAd = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Okta = 3,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UploadSessionStartParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UploadSessionStartParams : object
    {

        private long FileSizeField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public long FileSize
        {
            get
            {
                return this.FileSizeField;
            }
            set
            {
                this.FileSizeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UploadSessionStartResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UploadSessionStartResponse : object
    {

        private System.Guid SessionIdField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SessionId
        {
            get
            {
                return this.SessionIdField;
            }
            set
            {
                this.SessionIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UploadSessionAppendChunkRawResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UploadSessionAppendChunkRawResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "MoveUserLicenseRequest", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class MoveUserLicenseRequest : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "MoveUserLicenseResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class MoveUserLicenseResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SignOutRequest", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SignOutRequest : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SignOutResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SignOutResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "AddDictionaryKeywordParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class AddDictionaryKeywordParams : object
    {

        private System.Nullable<int> ByDictionaryIDField;

        private System.Nullable<int> ByDictionaryTypeNoField;

        private bool IsKeywordDeactivatedField;

        private string KeywordNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ByDictionaryID
        {
            get
            {
                return this.ByDictionaryIDField;
            }
            set
            {
                this.ByDictionaryIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ByDictionaryTypeNo
        {
            get
            {
                return this.ByDictionaryTypeNoField;
            }
            set
            {
                this.ByDictionaryTypeNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsKeywordDeactivated
        {
            get
            {
                return this.IsKeywordDeactivatedField;
            }
            set
            {
                this.IsKeywordDeactivatedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string KeywordName
        {
            get
            {
                return this.KeywordNameField;
            }
            set
            {
                this.KeywordNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "AddDictionaryKeywordResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class AddDictionaryKeywordResponse : object
    {

        private int KeywordIDField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KeywordID
        {
            get
            {
                return this.KeywordIDField;
            }
            set
            {
                this.KeywordIDField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "AddStreamsToDocumentParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class AddStreamsToDocumentParams : object
    {

        private string CheckInCommentsField;

        private Therefore.WebAPI.WSConversionOptions ConversionOptionsField;

        private int DocNoField;

        private Therefore.WebAPI.WSStreamInfoWithData[] StreamsToUploadField;

        private Therefore.WebAPI.WSStreamInfoUploadSessionData[] FileUploadSessionsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckInComments
        {
            get
            {
                return this.CheckInCommentsField;
            }
            set
            {
                this.CheckInCommentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSConversionOptions ConversionOptions
        {
            get
            {
                return this.ConversionOptionsField;
            }
            set
            {
                this.ConversionOptionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSStreamInfoWithData[] StreamsToUpload
        {
            get
            {
                return this.StreamsToUploadField;
            }
            set
            {
                this.StreamsToUploadField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public Therefore.WebAPI.WSStreamInfoUploadSessionData[] FileUploadSessions
        {
            get
            {
                return this.FileUploadSessionsField;
            }
            set
            {
                this.FileUploadSessionsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSConversionOptions", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSConversionOptions : object
    {

        private Therefore.WebAPI.WSAnnotationMode AnnotationModeField;

        private string CertificateNameField;

        private Therefore.WebAPI.WSConversionType ConvertToField;

        private Therefore.WebAPI.WSSignatureMode SignatureModeField;

        private string TimeStampPwdField;

        private string TimeStampServerField;

        private string TimeStampUserField;

        private string MultipageStreamNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSAnnotationMode AnnotationMode
        {
            get
            {
                return this.AnnotationModeField;
            }
            set
            {
                this.AnnotationModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateName
        {
            get
            {
                return this.CertificateNameField;
            }
            set
            {
                this.CertificateNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSConversionType ConvertTo
        {
            get
            {
                return this.ConvertToField;
            }
            set
            {
                this.ConvertToField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSSignatureMode SignatureMode
        {
            get
            {
                return this.SignatureModeField;
            }
            set
            {
                this.SignatureModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeStampPwd
        {
            get
            {
                return this.TimeStampPwdField;
            }
            set
            {
                this.TimeStampPwdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeStampServer
        {
            get
            {
                return this.TimeStampServerField;
            }
            set
            {
                this.TimeStampServerField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeStampUser
        {
            get
            {
                return this.TimeStampUserField;
            }
            set
            {
                this.TimeStampUserField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public string MultipageStreamName
        {
            get
            {
                return this.MultipageStreamNameField;
            }
            set
            {
                this.MultipageStreamNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSStreamInfoWithData", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSStreamInfoWithData : object
    {

        private byte[] FileDataField;

        private string FileNameField;

        private System.Nullable<int> StreamNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public byte[] FileData
        {
            get
            {
                return this.FileDataField;
            }
            set
            {
                this.FileDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StreamNo
        {
            get
            {
                return this.StreamNoField;
            }
            set
            {
                this.StreamNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSStreamInfoUploadSessionData", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSStreamInfoUploadSessionData : object
    {

        private string FileNameField;

        private System.Nullable<int> StreamNoField;

        private System.Guid UploadSessionIdField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StreamNo
        {
            get
            {
                return this.StreamNoField;
            }
            set
            {
                this.StreamNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public System.Guid UploadSessionId
        {
            get
            {
                return this.UploadSessionIdField;
            }
            set
            {
                this.UploadSessionIdField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSAnnotationMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSAnnotationMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Merge = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hide = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSConversionType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSConversionType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleTIFF = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SinglePDF = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipageTIFF = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipagePDF = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchablePDF = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchablePDFA = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jpeg = 50,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSSignatureMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSSignatureMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoSignature = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignatureOnly = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignatureAndTimestamp = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "AddStreamsToDocumentResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class AddStreamsToDocumentResponse : object
    {

        private int StreamNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StreamNo
        {
            get
            {
                return this.StreamNoField;
            }
            set
            {
                this.StreamNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ClaimWorkflowInstanceParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ClaimWorkflowInstanceParams : object
    {

        private int InstanceNoField;

        private int TokenNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ClaimWorkflowInstanceResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ClaimWorkflowInstanceResponse : object
    {

        private string ClaimedByUserNameField;

        private bool IsAlreadyClaimedField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimedByUserName
        {
            get
            {
                return this.ClaimedByUserNameField;
            }
            set
            {
                this.ClaimedByUserNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlreadyClaimed
        {
            get
            {
                return this.IsAlreadyClaimedField;
            }
            set
            {
                this.IsAlreadyClaimedField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CloseCaseParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CloseCaseParams : object
    {

        private int CaseNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CloseCaseResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CloseCaseResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ReopenCaseParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReopenCaseParams : object
    {

        private int CaseNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ReopenCaseResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReopenCaseResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CompleteTaskParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CompleteTaskParams : object
    {

        private string CommentField;

        private Therefore.WebAPI.WSTaskDecision TaskDecisionField;

        private int TaskNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                this.CommentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSTaskDecision TaskDecision
        {
            get
            {
                return this.TaskDecisionField;
            }
            set
            {
                this.TaskDecisionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTaskDecision", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTaskDecision : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Positive = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Negative = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CompleteTaskResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CompleteTaskResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CreateCaseParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateCaseParams : object
    {

        private int CaseDefNoField;

        private Therefore.WebAPI.WSIndexDataItem[] IndexDataItemsField;

        private System.Nullable<bool> DoFillDependentFieldsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CaseDefNo
        {
            get
            {
                return this.CaseDefNoField;
            }
            set
            {
                this.CaseDefNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataItem[] IndexDataItems
        {
            get
            {
                return this.IndexDataItemsField;
            }
            set
            {
                this.IndexDataItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<bool> DoFillDependentFields
        {
            get
            {
                return this.DoFillDependentFieldsField;
            }
            set
            {
                this.DoFillDependentFieldsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataItem", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataItem : object
    {

        private Therefore.WebAPI.WSIndexDataDate DateIndexDataField;

        private Therefore.WebAPI.WSIndexDataInt IntIndexDataField;

        private Therefore.WebAPI.WSIndexDataLogical LogicalIndexDataField;

        private Therefore.WebAPI.WSIndexDataMoney MoneyIndexDataField;

        private Therefore.WebAPI.WSIndexDataMultipleKeyword MultipleKeywordDataField;

        private Therefore.WebAPI.WSIndexDataSingleKeyword SingleKeywordDataField;

        private Therefore.WebAPI.WSIndexDataString StringIndexDataField;

        private Therefore.WebAPI.WSIndexDataTable TableIndexDataField;

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        private Therefore.WebAPI.WSIndexDataDateTime DateTimeIndexDataField;

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataDate DateIndexData
        {
            get
            {
                return this.DateIndexDataField;
            }
            set
            {
                this.DateIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataInt IntIndexData
        {
            get
            {
                return this.IntIndexDataField;
            }
            set
            {
                this.IntIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataLogical LogicalIndexData
        {
            get
            {
                return this.LogicalIndexDataField;
            }
            set
            {
                this.LogicalIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataMoney MoneyIndexData
        {
            get
            {
                return this.MoneyIndexDataField;
            }
            set
            {
                this.MoneyIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataMultipleKeyword MultipleKeywordData
        {
            get
            {
                return this.MultipleKeywordDataField;
            }
            set
            {
                this.MultipleKeywordDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataSingleKeyword SingleKeywordData
        {
            get
            {
                return this.SingleKeywordDataField;
            }
            set
            {
                this.SingleKeywordDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataString StringIndexData
        {
            get
            {
                return this.StringIndexDataField;
            }
            set
            {
                this.StringIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataTable TableIndexData
        {
            get
            {
                return this.TableIndexDataField;
            }
            set
            {
                this.TableIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 8)]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 9)]
        public Therefore.WebAPI.WSIndexDataDateTime DateTimeIndexData
        {
            get
            {
                return this.DateTimeIndexDataField;
            }
            set
            {
                this.DateTimeIndexDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataDate", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataDate : Therefore.WebAPI.WSIndexDataBase
    {

        private System.Nullable<System.DateTime> DataValueField;

        private string DataISO8601ValueField;

        private string FieldNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataValue
        {
            get
            {
                return this.DataValueField;
            }
            set
            {
                this.DataValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public string DataISO8601Value
        {
            get
            {
                return this.DataISO8601ValueField;
            }
            set
            {
                this.DataISO8601ValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string FieldName
        {
            get
            {
                return this.FieldNameField;
            }
            set
            {
                this.FieldNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataInt", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataInt : Therefore.WebAPI.WSIndexDataBase
    {

        private System.Nullable<int> DataValueField;

        private string FieldNameField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public System.Nullable<int> DataValue
        {
            get
            {
                return this.DataValueField;
            }
            set
            {
                this.DataValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName
        {
            get
            {
                return this.FieldNameField;
            }
            set
            {
                this.FieldNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataLogical", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataLogical : Therefore.WebAPI.WSIndexDataBase
    {

        private System.Nullable<bool> DataValueField;

        private string FieldNameField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public System.Nullable<bool> DataValue
        {
            get
            {
                return this.DataValueField;
            }
            set
            {
                this.DataValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName
        {
            get
            {
                return this.FieldNameField;
            }
            set
            {
                this.FieldNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataMoney", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataMoney : Therefore.WebAPI.WSIndexDataBase
    {

        private System.Nullable<double> DataValueField;

        private string FieldNameField;

        private System.Nullable<decimal> DecimalDataValueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DataValue
        {
            get
            {
                return this.DataValueField;
            }
            set
            {
                this.DataValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName
        {
            get
            {
                return this.FieldNameField;
            }
            set
            {
                this.FieldNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<decimal> DecimalDataValue
        {
            get
            {
                return this.DecimalDataValueField;
            }
            set
            {
                this.DecimalDataValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataMultipleKeyword", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataMultipleKeyword : Therefore.WebAPI.WSIndexDataBase
    {

        private Therefore.WebAPI.KeywordList DataValueField;

        private string FieldNameField;

        private Therefore.WebAPI.KeywordNoList KeywordNosField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.KeywordList DataValue
        {
            get
            {
                return this.DataValueField;
            }
            set
            {
                this.DataValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName
        {
            get
            {
                return this.FieldNameField;
            }
            set
            {
                this.FieldNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.KeywordNoList KeywordNos
        {
            get
            {
                return this.KeywordNosField;
            }
            set
            {
                this.KeywordNosField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataSingleKeyword", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataSingleKeyword : Therefore.WebAPI.WSIndexDataBase
    {

        private string DataValueField;

        private string FieldNameField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string DataValue
        {
            get
            {
                return this.DataValueField;
            }
            set
            {
                this.DataValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName
        {
            get
            {
                return this.FieldNameField;
            }
            set
            {
                this.FieldNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataString", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataString : Therefore.WebAPI.WSIndexDataBase
    {

        private string DataValueField;

        private string FieldNameField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string DataValue
        {
            get
            {
                return this.DataValueField;
            }
            set
            {
                this.DataValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName
        {
            get
            {
                return this.FieldNameField;
            }
            set
            {
                this.FieldNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataTable", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataTable : Therefore.WebAPI.WSIndexDataBase
    {

        private Therefore.WebAPI.WSTableFieldDataRow[] DataValueField;

        private string FieldNameField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSTableFieldDataRow[] DataValue
        {
            get
            {
                return this.DataValueField;
            }
            set
            {
                this.DataValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName
        {
            get
            {
                return this.FieldNameField;
            }
            set
            {
                this.FieldNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSAccessMask", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSAccessMask : object
    {

        private ulong ValueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataDateTime", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataDateTime : Therefore.WebAPI.WSIndexDataBase
    {

        private System.Nullable<System.DateTime> DataValueField;

        private string DataISO8601ValueField;

        private string FieldNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataValue
        {
            get
            {
                return this.DataValueField;
            }
            set
            {
                this.DataValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public string DataISO8601Value
        {
            get
            {
                return this.DataISO8601ValueField;
            }
            set
            {
                this.DataISO8601ValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string FieldName
        {
            get
            {
                return this.FieldNameField;
            }
            set
            {
                this.FieldNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataBase", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Therefore.WebAPI.WSIndexDataInt))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Therefore.WebAPI.WSIndexDataLogical))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Therefore.WebAPI.WSIndexDataMoney))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Therefore.WebAPI.WSIndexDataMultipleKeyword))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Therefore.WebAPI.WSIndexDataSingleKeyword))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Therefore.WebAPI.WSIndexDataString))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Therefore.WebAPI.WSIndexDataTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Therefore.WebAPI.WSIndexDataDateTime))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Therefore.WebAPI.WSIndexDataDate))]
    public partial class WSIndexDataBase : object
    {

        private int FieldNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FieldNo
        {
            get
            {
                return this.FieldNoField;
            }
            set
            {
                this.FieldNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "KeywordList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "Keyword")]
    public class KeywordList : System.Collections.Generic.List<string>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "KeywordNoList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "KeywordNo")]
    public class KeywordNoList : System.Collections.Generic.List<int>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTableFieldDataRow", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTableFieldDataRow : object
    {

        private Therefore.WebAPI.WSTableFieldDataRowItem[] DataRowItemsField;

        private System.Nullable<int> RowNoField;

        private System.Nullable<bool> AccessIsEditableRowField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTableFieldDataRowItem[] DataRowItems
        {
            get
            {
                return this.DataRowItemsField;
            }
            set
            {
                this.DataRowItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RowNo
        {
            get
            {
                return this.RowNoField;
            }
            set
            {
                this.RowNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<bool> AccessIsEditableRow
        {
            get
            {
                return this.AccessIsEditableRowField;
            }
            set
            {
                this.AccessIsEditableRowField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTableFieldDataRowItem", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTableFieldDataRowItem : object
    {

        private Therefore.WebAPI.WSIndexDataDate DateIndexDataField;

        private Therefore.WebAPI.WSIndexDataInt IntIndexDataField;

        private Therefore.WebAPI.WSIndexDataLogical LogicalIndexDataField;

        private Therefore.WebAPI.WSIndexDataMoney MoneyIndexDataField;

        private Therefore.WebAPI.WSIndexDataSingleKeyword SingleKeywordDataField;

        private Therefore.WebAPI.WSIndexDataString StringIndexDataField;

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        private Therefore.WebAPI.WSIndexDataDateTime DateTimeIndexDataField;

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataDate DateIndexData
        {
            get
            {
                return this.DateIndexDataField;
            }
            set
            {
                this.DateIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataInt IntIndexData
        {
            get
            {
                return this.IntIndexDataField;
            }
            set
            {
                this.IntIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataLogical LogicalIndexData
        {
            get
            {
                return this.LogicalIndexDataField;
            }
            set
            {
                this.LogicalIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataMoney MoneyIndexData
        {
            get
            {
                return this.MoneyIndexDataField;
            }
            set
            {
                this.MoneyIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataSingleKeyword SingleKeywordData
        {
            get
            {
                return this.SingleKeywordDataField;
            }
            set
            {
                this.SingleKeywordDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataString StringIndexData
        {
            get
            {
                return this.StringIndexDataField;
            }
            set
            {
                this.StringIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 7)]
        public Therefore.WebAPI.WSIndexDataDateTime DateTimeIndexData
        {
            get
            {
                return this.DateTimeIndexDataField;
            }
            set
            {
                this.DateTimeIndexDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CreateCaseResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateCaseResponse : object
    {

        private int CaseNoField;

        private System.DateTime LastChangeTimeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PreprocessIndexDataParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class PreprocessIndexDataParams : object
    {

        private System.Nullable<int> CaseDefinitionNoField;

        private System.Nullable<int> CategoryNoField;

        private bool ExcludeReduntantForFillDependentFieldsField;

        private bool FillDependentFieldsField;

        private bool GetAutoAppendIxDataField;

        private Therefore.WebAPI.WSIndexDataToPut IndexDataField;

        private bool ResetToDefaultsField;

        private System.Nullable<bool> DoCalculateFieldsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CaseDefinitionNo
        {
            get
            {
                return this.CaseDefinitionNoField;
            }
            set
            {
                this.CaseDefinitionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcludeReduntantForFillDependentFields
        {
            get
            {
                return this.ExcludeReduntantForFillDependentFieldsField;
            }
            set
            {
                this.ExcludeReduntantForFillDependentFieldsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FillDependentFields
        {
            get
            {
                return this.FillDependentFieldsField;
            }
            set
            {
                this.FillDependentFieldsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetAutoAppendIxData
        {
            get
            {
                return this.GetAutoAppendIxDataField;
            }
            set
            {
                this.GetAutoAppendIxDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataToPut IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResetToDefaults
        {
            get
            {
                return this.ResetToDefaultsField;
            }
            set
            {
                this.ResetToDefaultsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public System.Nullable<bool> DoCalculateFields
        {
            get
            {
                return this.DoCalculateFieldsField;
            }
            set
            {
                this.DoCalculateFieldsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataToPut", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataToPut : object
    {

        private Therefore.WebAPI.WSIndexDataItem[] IndexDataItemsField;

        private System.DateTime LastChangeTimeField;

        private System.Nullable<bool> DoFillDependentFieldsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSIndexDataItem[] IndexDataItems
        {
            get
            {
                return this.IndexDataItemsField;
            }
            set
            {
                this.IndexDataItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<bool> DoFillDependentFields
        {
            get
            {
                return this.DoFillDependentFieldsField;
            }
            set
            {
                this.DoFillDependentFieldsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PreprocessIndexDataResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class PreprocessIndexDataResponse : object
    {

        private Therefore.WebAPI.WSIndexDataToGet IndexDataField;

        private Therefore.WebAPI.WSFieldCalculationResult CalculationResultField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataToGet IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public Therefore.WebAPI.WSFieldCalculationResult CalculationResult
        {
            get
            {
                return this.CalculationResultField;
            }
            set
            {
                this.CalculationResultField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataToGet", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataToGet : object
    {

        private int CategoryNoField;

        private string CtgryNameField;

        private int DocNoField;

        private Therefore.WebAPI.WSIndexDataItem[] IndexDataItemsField;

        private System.DateTime LastChangeTimeField;

        private string TitleField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CtgryName
        {
            get
            {
                return this.CtgryNameField;
            }
            set
            {
                this.CtgryNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSIndexDataItem[] IndexDataItems
        {
            get
            {
                return this.IndexDataItemsField;
            }
            set
            {
                this.IndexDataItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFieldCalculationResult", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFieldCalculationResult : object
    {

        private Therefore.WebAPI.FieldCalculationResultList ItemsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.FieldCalculationResultList Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "FieldCalculationResultList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "ResultItem")]
    public class FieldCalculationResultList : System.Collections.Generic.List<Therefore.WebAPI.WSFieldCalculationResultItem>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFieldCalculationResultItem", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFieldCalculationResultItem : object
    {

        private int FieldNoField;

        private int RowNoField;

        private Therefore.WebAPI.WSFieldCalculationResultStatus StatusField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldNo
        {
            get
            {
                return this.FieldNoField;
            }
            set
            {
                this.FieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowNo
        {
            get
            {
                return this.RowNoField;
            }
            set
            {
                this.RowNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSFieldCalculationResultStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFieldCalculationResultStatus", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSFieldCalculationResultStatus : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalculationSuccess = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DivisionByZero = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalculationValueOutOfRange = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownCalculationError = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalculationFieldNotFound = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherCalculationError = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalculationUnsupported = 6,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PreprocessTableRowParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class PreprocessTableRowParams : object
    {

        private System.Nullable<int> CaseDefinitionNoField;

        private System.Nullable<int> CaseNoField;

        private System.Nullable<int> CategoryNoField;

        private System.Nullable<int> DocNoField;

        private System.Nullable<bool> FillDependentFieldsField;

        private System.Nullable<bool> IsAccessMaskNeededField;

        private System.Nullable<bool> ResetToDefaultsField;

        private int TableFieldNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CaseDefinitionNo
        {
            get
            {
                return this.CaseDefinitionNoField;
            }
            set
            {
                this.CaseDefinitionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FillDependentFields
        {
            get
            {
                return this.FillDependentFieldsField;
            }
            set
            {
                this.FillDependentFieldsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsAccessMaskNeeded
        {
            get
            {
                return this.IsAccessMaskNeededField;
            }
            set
            {
                this.IsAccessMaskNeededField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ResetToDefaults
        {
            get
            {
                return this.ResetToDefaultsField;
            }
            set
            {
                this.ResetToDefaultsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TableFieldNo
        {
            get
            {
                return this.TableFieldNoField;
            }
            set
            {
                this.TableFieldNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PreprocessTableRowResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class PreprocessTableRowResponse : object
    {

        private Therefore.WebAPI.WSTableFieldDataRow IndexDataRowField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTableFieldDataRow IndexDataRow
        {
            get
            {
                return this.IndexDataRowField;
            }
            set
            {
                this.IndexDataRowField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CreateDocumentParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateDocumentParams : object
    {

        private int CategoryNoField;

        private string CheckInCommentsField;

        private Therefore.WebAPI.WSIndexDataItem[] IndexDataItemsField;

        private Therefore.WebAPI.WSStreamInfoWithData[] StreamsField;

        private System.Nullable<bool> DoFillDependentFieldsField;

        private System.Nullable<Therefore.WebAPI.WSAutoAppendMode> WithAutoAppendModeField;

        private Therefore.WebAPI.WSConversionOptions ConversionOptionsField;

        private System.DateTime LastChangeTimeField;

        private bool DontResetCategoryDefaultsField;

        private Therefore.WebAPI.WSStreamInfoUploadSessionData[] FileUploadSessionsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckInComments
        {
            get
            {
                return this.CheckInCommentsField;
            }
            set
            {
                this.CheckInCommentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataItem[] IndexDataItems
        {
            get
            {
                return this.IndexDataItemsField;
            }
            set
            {
                this.IndexDataItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSStreamInfoWithData[] Streams
        {
            get
            {
                return this.StreamsField;
            }
            set
            {
                this.StreamsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public System.Nullable<bool> DoFillDependentFields
        {
            get
            {
                return this.DoFillDependentFieldsField;
            }
            set
            {
                this.DoFillDependentFieldsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public System.Nullable<Therefore.WebAPI.WSAutoAppendMode> WithAutoAppendMode
        {
            get
            {
                return this.WithAutoAppendModeField;
            }
            set
            {
                this.WithAutoAppendModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public Therefore.WebAPI.WSConversionOptions ConversionOptions
        {
            get
            {
                return this.ConversionOptionsField;
            }
            set
            {
                this.ConversionOptionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 8)]
        public bool DontResetCategoryDefaults
        {
            get
            {
                return this.DontResetCategoryDefaultsField;
            }
            set
            {
                this.DontResetCategoryDefaultsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public Therefore.WebAPI.WSStreamInfoUploadSessionData[] FileUploadSessions
        {
            get
            {
                return this.FileUploadSessionsField;
            }
            set
            {
                this.FileUploadSessionsField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSAutoAppendMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSAutoAppendMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultMode = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Begin = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        End = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Replace = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 4,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CreateDocumentResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateDocumentResponse : object
    {

        private int DocNoField;

        private System.DateTime LastChangeTimeField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CreateLinkFileParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateLinkFileParams : object
    {

        private int DocNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CreateLinkFileResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateLinkFileResponse : object
    {

        private byte[] LinkFileDataField;

        private string LinkFileExtensionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] LinkFileData
        {
            get
            {
                return this.LinkFileDataField;
            }
            set
            {
                this.LinkFileDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkFileExtension
        {
            get
            {
                return this.LinkFileExtensionField;
            }
            set
            {
                this.LinkFileExtensionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DelegateWorkflowInstanceParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DelegateWorkflowInstanceParams : object
    {

        private string DomainNameField;

        private int InstanceNoField;

        private int TokenNoField;

        private string UserNameField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string DomainName
        {
            get
            {
                return this.DomainNameField;
            }
            set
            {
                this.DomainNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DelegateWorkflowInstanceResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DelegateWorkflowInstanceResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteCaseParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteCaseParams : object
    {

        private int CaseNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteCaseResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteCaseResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteDictionaryKeywordParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteDictionaryKeywordParams : object
    {

        private System.Nullable<int> ByDictionaryIDField;

        private System.Nullable<int> ByDictionaryTypeNoField;

        private int KeywordIDField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ByDictionaryID
        {
            get
            {
                return this.ByDictionaryIDField;
            }
            set
            {
                this.ByDictionaryIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ByDictionaryTypeNo
        {
            get
            {
                return this.ByDictionaryTypeNoField;
            }
            set
            {
                this.ByDictionaryTypeNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int KeywordID
        {
            get
            {
                return this.KeywordIDField;
            }
            set
            {
                this.KeywordIDField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteDictionaryKeywordResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteDictionaryKeywordResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteDocumentParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteDocumentParams : object
    {

        private int DocNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteDocumentResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteDocumentResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteTaskParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteTaskParams : object
    {

        private int TaskNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteTaskResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteTaskResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteWorkflowInstanceParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteWorkflowInstanceParams : object
    {

        private int InstanceNoField;

        private int TokenNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteWorkflowInstanceResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteWorkflowInstanceResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DisclaimWorkflowInstanceParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DisclaimWorkflowInstanceParams : object
    {

        private int InstanceNoField;

        private int TokenNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DisclaimWorkflowInstanceResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DisclaimWorkflowInstanceResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EraseAllObjectsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class EraseAllObjectsParams : object
    {

        private System.Nullable<bool> DeleteFromMediaField;

        private System.Nullable<int> DeletedByUserNoField;

        private System.Nullable<System.DateTime> DeletedOnFromField;

        private System.Nullable<System.DateTime> DeletedOnToField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DeleteFromMedia
        {
            get
            {
                return this.DeleteFromMediaField;
            }
            set
            {
                this.DeleteFromMediaField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeletedByUserNo
        {
            get
            {
                return this.DeletedByUserNoField;
            }
            set
            {
                this.DeletedByUserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedOnFrom
        {
            get
            {
                return this.DeletedOnFromField;
            }
            set
            {
                this.DeletedOnFromField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedOnTo
        {
            get
            {
                return this.DeletedOnToField;
            }
            set
            {
                this.DeletedOnToField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EraseAllObjectsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class EraseAllObjectsResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EraseObjectsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class EraseObjectsParams : object
    {

        private System.Nullable<int> ContainerObjectNoField;

        private System.Nullable<bool> DeleteFromMediaField;

        private System.Nullable<Therefore.WebAPI.WSObjectType> ObjectTypeField;

        private System.Nullable<int> DeletedByUserNoField;

        private System.Nullable<System.DateTime> DeletedOnFromField;

        private System.Nullable<System.DateTime> DeletedOnToField;

        private Therefore.WebAPI.ObjectNoList ObjectNosField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ContainerObjectNo
        {
            get
            {
                return this.ContainerObjectNoField;
            }
            set
            {
                this.ContainerObjectNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DeleteFromMedia
        {
            get
            {
                return this.DeleteFromMediaField;
            }
            set
            {
                this.DeleteFromMediaField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Therefore.WebAPI.WSObjectType> ObjectType
        {
            get
            {
                return this.ObjectTypeField;
            }
            set
            {
                this.ObjectTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public System.Nullable<int> DeletedByUserNo
        {
            get
            {
                return this.DeletedByUserNoField;
            }
            set
            {
                this.DeletedByUserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public System.Nullable<System.DateTime> DeletedOnFrom
        {
            get
            {
                return this.DeletedOnFromField;
            }
            set
            {
                this.DeletedOnFromField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public System.Nullable<System.DateTime> DeletedOnTo
        {
            get
            {
                return this.DeletedOnToField;
            }
            set
            {
                this.DeletedOnToField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public Therefore.WebAPI.ObjectNoList ObjectNos
        {
            get
            {
                return this.ObjectNosField;
            }
            set
            {
                this.ObjectNosField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "ObjectNoList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "ObjectNo")]
    public class ObjectNoList : System.Collections.Generic.List<int>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EraseObjectsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class EraseObjectsResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteAsyncFullTextQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncFullTextQueryParams : object
    {

        private Therefore.WebAPI.WSFullTextQuery FullTextQueryField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSFullTextQuery FullTextQuery
        {
            get
            {
                return this.FullTextQueryField;
            }
            set
            {
                this.FullTextQueryField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFullTextQuery", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFullTextQuery : object
    {

        private int BlockSizeField;

        private int CaseNoField;

        private Therefore.WebAPI.CategoryList CategoriesField;

        private int ContextMaxSizeKBField;

        private Therefore.WebAPI.WSFullTextContext ContextModeField;

        private int FuzzySearchLevelField;

        private int LCIDField;

        private int MaxContentCharsField;

        private int MaxRowsField;

        private string SearchField;

        private Therefore.WebAPI.WSSearchScope SearchScopeField;

        private Therefore.WebAPI.WSFullTextSortOrder SortOrderField;

        private bool UseThesaurusField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlockSize
        {
            get
            {
                return this.BlockSizeField;
            }
            set
            {
                this.BlockSizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.CategoryList Categories
        {
            get
            {
                return this.CategoriesField;
            }
            set
            {
                this.CategoriesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContextMaxSizeKB
        {
            get
            {
                return this.ContextMaxSizeKBField;
            }
            set
            {
                this.ContextMaxSizeKBField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSFullTextContext ContextMode
        {
            get
            {
                return this.ContextModeField;
            }
            set
            {
                this.ContextModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FuzzySearchLevel
        {
            get
            {
                return this.FuzzySearchLevelField;
            }
            set
            {
                this.FuzzySearchLevelField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LCID
        {
            get
            {
                return this.LCIDField;
            }
            set
            {
                this.LCIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxContentChars
        {
            get
            {
                return this.MaxContentCharsField;
            }
            set
            {
                this.MaxContentCharsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxRows
        {
            get
            {
                return this.MaxRowsField;
            }
            set
            {
                this.MaxRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string Search
        {
            get
            {
                return this.SearchField;
            }
            set
            {
                this.SearchField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSSearchScope SearchScope
        {
            get
            {
                return this.SearchScopeField;
            }
            set
            {
                this.SearchScopeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSFullTextSortOrder SortOrder
        {
            get
            {
                return this.SortOrderField;
            }
            set
            {
                this.SortOrderField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseThesaurus
        {
            get
            {
                return this.UseThesaurusField;
            }
            set
            {
                this.UseThesaurusField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "CategoryList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "Category")]
    public class CategoryList : System.Collections.Generic.List<int>
    {
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFullTextContext", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSFullTextContext : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FTContextOff = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FTContextOn = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FTContextSize = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSSearchScope", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSSearchScope : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndexData = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Content = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFullTextSortOrder", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSFullTextSortOrder : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByRelevance = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByDate = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByHitCount = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteAsyncFullTextQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncFullTextQueryResponse : object
    {

        private int QueryIdField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueryId
        {
            get
            {
                return this.QueryIdField;
            }
            set
            {
                this.QueryIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteAsyncMultiQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncMultiQueryParams : object
    {

        private string FullTextField;

        private Therefore.WebAPI.QueryBasicObject[] QueriesField;

        private System.Nullable<int> MaxRowsField;

        private System.Nullable<Therefore.WebAPI.WSQueryMode> ModeField;

        private System.Nullable<int> RowBlockSizeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullText
        {
            get
            {
                return this.FullTextField;
            }
            set
            {
                this.FullTextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.QueryBasicObject[] Queries
        {
            get
            {
                return this.QueriesField;
            }
            set
            {
                this.QueriesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<int> MaxRows
        {
            get
            {
                return this.MaxRowsField;
            }
            set
            {
                this.MaxRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public System.Nullable<Therefore.WebAPI.WSQueryMode> Mode
        {
            get
            {
                return this.ModeField;
            }
            set
            {
                this.ModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public System.Nullable<int> RowBlockSize
        {
            get
            {
                return this.RowBlockSizeField;
            }
            set
            {
                this.RowBlockSizeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "QueryBasicObject", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Therefore.WebAPI.QueryObject))]
    public partial class QueryBasicObject : object
    {

        private System.Nullable<int> CaseDefinitionNoField;

        private System.Nullable<int> CategoryNoField;

        private Therefore.WebAPI.WSCondition[] ConditionsField;

        private string FileByColNameField;

        private System.Nullable<int> FileByFieldNoField;

        private int MaxRowsField;

        private System.Nullable<Therefore.WebAPI.WSQueryMode> ModeField;

        private Therefore.WebAPI.FieldNoOrNameList OrderByFieldsNoOrNamesField;

        private int RowBlockSizeField;

        private Therefore.WebAPI.FieldNoOrNameList SelectedFieldsNoOrNamesField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CaseDefinitionNo
        {
            get
            {
                return this.CaseDefinitionNoField;
            }
            set
            {
                this.CaseDefinitionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCondition[] Conditions
        {
            get
            {
                return this.ConditionsField;
            }
            set
            {
                this.ConditionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileByColName
        {
            get
            {
                return this.FileByColNameField;
            }
            set
            {
                this.FileByColNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FileByFieldNo
        {
            get
            {
                return this.FileByFieldNoField;
            }
            set
            {
                this.FileByFieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxRows
        {
            get
            {
                return this.MaxRowsField;
            }
            set
            {
                this.MaxRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Therefore.WebAPI.WSQueryMode> Mode
        {
            get
            {
                return this.ModeField;
            }
            set
            {
                this.ModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.FieldNoOrNameList OrderByFieldsNoOrNames
        {
            get
            {
                return this.OrderByFieldsNoOrNamesField;
            }
            set
            {
                this.OrderByFieldsNoOrNamesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowBlockSize
        {
            get
            {
                return this.RowBlockSizeField;
            }
            set
            {
                this.RowBlockSizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.FieldNoOrNameList SelectedFieldsNoOrNames
        {
            get
            {
                return this.SelectedFieldsNoOrNamesField;
            }
            set
            {
                this.SelectedFieldsNoOrNamesField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSQueryMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSQueryMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NormalQuery = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileQuery = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowQuery = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseQuery = 5,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "QueryObject", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class QueryObject : Therefore.WebAPI.QueryBasicObject
    {

        private string FullTextField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullText
        {
            get
            {
                return this.FullTextField;
            }
            set
            {
                this.FullTextField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCondition", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCondition : object
    {

        private string ConditionField;

        private string FieldNoOrNameField;

        private Therefore.WebAPI.WSConditionTimeZone TimeZoneField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string Condition
        {
            get
            {
                return this.ConditionField;
            }
            set
            {
                this.ConditionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string FieldNoOrName
        {
            get
            {
                return this.FieldNoOrNameField;
            }
            set
            {
                this.FieldNoOrNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSConditionTimeZone TimeZone
        {
            get
            {
                return this.TimeZoneField;
            }
            set
            {
                this.TimeZoneField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "FieldNoOrNameList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "FieldNoOrName")]
    public class FieldNoOrNameList : System.Collections.Generic.List<string>
    {
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSConditionTimeZone", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSConditionTimeZone : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UTC = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerLocal = 1,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteAsyncMultiQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncMultiQueryResponse : object
    {

        private int QueryIdField;

        private Therefore.WebAPI.WSQueryResult[] QueryResultsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueryId
        {
            get
            {
                return this.QueryIdField;
            }
            set
            {
                this.QueryIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSQueryResult[] QueryResults
        {
            get
            {
                return this.QueryResultsField;
            }
            set
            {
                this.QueryResultsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSQueryResult", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSQueryResult : object
    {

        private int CaseDefinitionNoField;

        private int CategoryNoField;

        private int ProcessNoField;

        private Therefore.WebAPI.WSQueryResultRow[] ResultRowsField;

        private Therefore.WebAPI.WSCategoryField[] ColumnsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseDefinitionNo
        {
            get
            {
                return this.CaseDefinitionNoField;
            }
            set
            {
                this.CaseDefinitionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessNo
        {
            get
            {
                return this.ProcessNoField;
            }
            set
            {
                this.ProcessNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSQueryResultRow[] ResultRows
        {
            get
            {
                return this.ResultRowsField;
            }
            set
            {
                this.ResultRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public Therefore.WebAPI.WSCategoryField[] Columns
        {
            get
            {
                return this.ColumnsField;
            }
            set
            {
                this.ColumnsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSQueryResultRow", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSQueryResultRow : object
    {

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        private int DocNoField;

        private Therefore.WebAPI.IndexValueList IndexValuesField;

        private long SizeField;

        private int VersionNoField;

        private Therefore.WebAPI.WSQueryResultRowStatus StatusField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.IndexValueList IndexValues
        {
            get
            {
                return this.IndexValuesField;
            }
            set
            {
                this.IndexValuesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                this.SizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public Therefore.WebAPI.WSQueryResultRowStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCategoryField", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCategoryField : object
    {

        private int BelongsToField;

        private int BelongsToTableField;

        private string CaptionField;

        private bool CaseSensitiveField;

        private string ColNameField;

        private Therefore.WebAPI.WSCounterMode CounterModeField;

        private string DefaultValField;

        private Therefore.WebAPI.WSDependencyMode DependencyModeField;

        private int DisplayOrderPosField;

        private bool DontLoadValuesField;

        private int FieldNoField;

        private Therefore.WebAPI.WSCategoryFieldType FieldTypeField;

        private string ForeignColField;

        private System.Guid GuidField;

        private int HeightField;

        private string IndexDataFieldNameField;

        private int IndexTypeField;

        private bool IsForeignDatatypeField;

        private bool IsMultipleKeywordField;

        private bool IsSingleKeywordField;

        private bool KeepRedundantField;

        private int LengthField;

        private bool MandatoryField;

        private int PosXField;

        private int PosYField;

        private string RegularExprField;

        private int TabOrderPosField;

        private Therefore.WebAPI.WSTypeGroup TypeGroupField;

        private string TypeIndexColumnField;

        private string TypeMultiInnerField;

        private string TypeMultiJoinField;

        private string TypeMultiOuterField;

        private int TypeNoField;

        private string TypeTableNameField;

        private bool VisibleField;

        private int WidthField;

        private string WorkflowFieldField;

        private bool SelectFromDropDownBoxField;

        private Therefore.WebAPI.WSDisplayProperties DisplayPropertiesField;

        private System.Nullable<int> ImageDocNoField;

        private bool IsImageFieldTypeField;

        private bool IsTabControlFieldTypeField;

        private int ParentFieldNoField;

        private int ShowInTabNoField;

        private Therefore.WebAPI.WSTabInfo[] TabsField;

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        private bool IsAutoAppendFieldField;

        private bool IsDateTimeFieldTypeField;

        private int ScaleField;

        private string RegExSampleField;

        private string FieldIDField;

        private string ConditionField;

        private Therefore.WebAPI.WSConditionalFormatting ConditionalFormattingField;

        private string FormulaField;

        private bool IsCalculationTriggerField;

        private bool IsFormattingTriggerField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongsTo
        {
            get
            {
                return this.BelongsToField;
            }
            set
            {
                this.BelongsToField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongsToTable
        {
            get
            {
                return this.BelongsToTableField;
            }
            set
            {
                this.BelongsToTableField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption
        {
            get
            {
                return this.CaptionField;
            }
            set
            {
                this.CaptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseSensitive
        {
            get
            {
                return this.CaseSensitiveField;
            }
            set
            {
                this.CaseSensitiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColName
        {
            get
            {
                return this.ColNameField;
            }
            set
            {
                this.ColNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCounterMode CounterMode
        {
            get
            {
                return this.CounterModeField;
            }
            set
            {
                this.CounterModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultVal
        {
            get
            {
                return this.DefaultValField;
            }
            set
            {
                this.DefaultValField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSDependencyMode DependencyMode
        {
            get
            {
                return this.DependencyModeField;
            }
            set
            {
                this.DependencyModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrderPos
        {
            get
            {
                return this.DisplayOrderPosField;
            }
            set
            {
                this.DisplayOrderPosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DontLoadValues
        {
            get
            {
                return this.DontLoadValuesField;
            }
            set
            {
                this.DontLoadValuesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldNo
        {
            get
            {
                return this.FieldNoField;
            }
            set
            {
                this.FieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCategoryFieldType FieldType
        {
            get
            {
                return this.FieldTypeField;
            }
            set
            {
                this.FieldTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForeignCol
        {
            get
            {
                return this.ForeignColField;
            }
            set
            {
                this.ForeignColField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height
        {
            get
            {
                return this.HeightField;
            }
            set
            {
                this.HeightField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndexDataFieldName
        {
            get
            {
                return this.IndexDataFieldNameField;
            }
            set
            {
                this.IndexDataFieldNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndexType
        {
            get
            {
                return this.IndexTypeField;
            }
            set
            {
                this.IndexTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForeignDatatype
        {
            get
            {
                return this.IsForeignDatatypeField;
            }
            set
            {
                this.IsForeignDatatypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMultipleKeyword
        {
            get
            {
                return this.IsMultipleKeywordField;
            }
            set
            {
                this.IsMultipleKeywordField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSingleKeyword
        {
            get
            {
                return this.IsSingleKeywordField;
            }
            set
            {
                this.IsSingleKeywordField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KeepRedundant
        {
            get
            {
                return this.KeepRedundantField;
            }
            set
            {
                this.KeepRedundantField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Length
        {
            get
            {
                return this.LengthField;
            }
            set
            {
                this.LengthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Mandatory
        {
            get
            {
                return this.MandatoryField;
            }
            set
            {
                this.MandatoryField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PosX
        {
            get
            {
                return this.PosXField;
            }
            set
            {
                this.PosXField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PosY
        {
            get
            {
                return this.PosYField;
            }
            set
            {
                this.PosYField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegularExpr
        {
            get
            {
                return this.RegularExprField;
            }
            set
            {
                this.RegularExprField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TabOrderPos
        {
            get
            {
                return this.TabOrderPosField;
            }
            set
            {
                this.TabOrderPosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTypeGroup TypeGroup
        {
            get
            {
                return this.TypeGroupField;
            }
            set
            {
                this.TypeGroupField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeIndexColumn
        {
            get
            {
                return this.TypeIndexColumnField;
            }
            set
            {
                this.TypeIndexColumnField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeMultiInner
        {
            get
            {
                return this.TypeMultiInnerField;
            }
            set
            {
                this.TypeMultiInnerField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeMultiJoin
        {
            get
            {
                return this.TypeMultiJoinField;
            }
            set
            {
                this.TypeMultiJoinField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeMultiOuter
        {
            get
            {
                return this.TypeMultiOuterField;
            }
            set
            {
                this.TypeMultiOuterField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeNo
        {
            get
            {
                return this.TypeNoField;
            }
            set
            {
                this.TypeNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeTableName
        {
            get
            {
                return this.TypeTableNameField;
            }
            set
            {
                this.TypeTableNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible
        {
            get
            {
                return this.VisibleField;
            }
            set
            {
                this.VisibleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width
        {
            get
            {
                return this.WidthField;
            }
            set
            {
                this.WidthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowField
        {
            get
            {
                return this.WorkflowFieldField;
            }
            set
            {
                this.WorkflowFieldField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 37)]
        public bool SelectFromDropDownBox
        {
            get
            {
                return this.SelectFromDropDownBoxField;
            }
            set
            {
                this.SelectFromDropDownBoxField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 38)]
        public Therefore.WebAPI.WSDisplayProperties DisplayProperties
        {
            get
            {
                return this.DisplayPropertiesField;
            }
            set
            {
                this.DisplayPropertiesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 39)]
        public System.Nullable<int> ImageDocNo
        {
            get
            {
                return this.ImageDocNoField;
            }
            set
            {
                this.ImageDocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 40)]
        public bool IsImageFieldType
        {
            get
            {
                return this.IsImageFieldTypeField;
            }
            set
            {
                this.IsImageFieldTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 41)]
        public bool IsTabControlFieldType
        {
            get
            {
                return this.IsTabControlFieldTypeField;
            }
            set
            {
                this.IsTabControlFieldTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 42)]
        public int ParentFieldNo
        {
            get
            {
                return this.ParentFieldNoField;
            }
            set
            {
                this.ParentFieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 43)]
        public int ShowInTabNo
        {
            get
            {
                return this.ShowInTabNoField;
            }
            set
            {
                this.ShowInTabNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 44)]
        public Therefore.WebAPI.WSTabInfo[] Tabs
        {
            get
            {
                return this.TabsField;
            }
            set
            {
                this.TabsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 45)]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 46)]
        public bool IsAutoAppendField
        {
            get
            {
                return this.IsAutoAppendFieldField;
            }
            set
            {
                this.IsAutoAppendFieldField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 47)]
        public bool IsDateTimeFieldType
        {
            get
            {
                return this.IsDateTimeFieldTypeField;
            }
            set
            {
                this.IsDateTimeFieldTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 48)]
        public int Scale
        {
            get
            {
                return this.ScaleField;
            }
            set
            {
                this.ScaleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 49)]
        public string RegExSample
        {
            get
            {
                return this.RegExSampleField;
            }
            set
            {
                this.RegExSampleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 50)]
        public string FieldID
        {
            get
            {
                return this.FieldIDField;
            }
            set
            {
                this.FieldIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 51)]
        public string Condition
        {
            get
            {
                return this.ConditionField;
            }
            set
            {
                this.ConditionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 52)]
        public Therefore.WebAPI.WSConditionalFormatting ConditionalFormatting
        {
            get
            {
                return this.ConditionalFormattingField;
            }
            set
            {
                this.ConditionalFormattingField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 53)]
        public string Formula
        {
            get
            {
                return this.FormulaField;
            }
            set
            {
                this.FormulaField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 54)]
        public bool IsCalculationTrigger
        {
            get
            {
                return this.IsCalculationTriggerField;
            }
            set
            {
                this.IsCalculationTriggerField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 55)]
        public bool IsFormattingTrigger
        {
            get
            {
                return this.IsFormattingTriggerField;
            }
            set
            {
                this.IsFormattingTriggerField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSQueryResultRowStatus", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSQueryResultRowStatus : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocStatusCheckedIn = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocStatusCheckedOutByUser = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocStatusCheckedOut = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseStatusNormal = 10,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseStatusClosed = 11,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved1 = 9101,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved2 = 9102,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSDisplayProperties", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSDisplayProperties : object
    {

        private int BackgroundColorField;

        private bool BoldField;

        private string FaceNameField;

        private int FontSizeField;

        private Therefore.WebAPI.WSHorizontalAlignment HorizontalAlignmentField;

        private bool ItalicField;

        private int PaddingField;

        private int TextColorField;

        private bool UnderlinedField;

        private Therefore.WebAPI.WSVerticalAlignment VerticalAlignmentField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BackgroundColor
        {
            get
            {
                return this.BackgroundColorField;
            }
            set
            {
                this.BackgroundColorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Bold
        {
            get
            {
                return this.BoldField;
            }
            set
            {
                this.BoldField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaceName
        {
            get
            {
                return this.FaceNameField;
            }
            set
            {
                this.FaceNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FontSize
        {
            get
            {
                return this.FontSizeField;
            }
            set
            {
                this.FontSizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSHorizontalAlignment HorizontalAlignment
        {
            get
            {
                return this.HorizontalAlignmentField;
            }
            set
            {
                this.HorizontalAlignmentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Italic
        {
            get
            {
                return this.ItalicField;
            }
            set
            {
                this.ItalicField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Padding
        {
            get
            {
                return this.PaddingField;
            }
            set
            {
                this.PaddingField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TextColor
        {
            get
            {
                return this.TextColorField;
            }
            set
            {
                this.TextColorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Underlined
        {
            get
            {
                return this.UnderlinedField;
            }
            set
            {
                this.UnderlinedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSVerticalAlignment VerticalAlignment
        {
            get
            {
                return this.VerticalAlignmentField;
            }
            set
            {
                this.VerticalAlignmentField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSConditionalFormatting", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSConditionalFormatting : object
    {

        private System.Nullable<int> BackgroundColorBGRField;

        private System.Nullable<int> BackgroundColorRGBField;

        private int FieldNoField;

        private System.Nullable<int> TextColorBGRField;

        private System.Nullable<int> TextColorRGBField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BackgroundColorBGR
        {
            get
            {
                return this.BackgroundColorBGRField;
            }
            set
            {
                this.BackgroundColorBGRField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BackgroundColorRGB
        {
            get
            {
                return this.BackgroundColorRGBField;
            }
            set
            {
                this.BackgroundColorRGBField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldNo
        {
            get
            {
                return this.FieldNoField;
            }
            set
            {
                this.FieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TextColorBGR
        {
            get
            {
                return this.TextColorBGRField;
            }
            set
            {
                this.TextColorBGRField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TextColorRGB
        {
            get
            {
                return this.TextColorRGBField;
            }
            set
            {
                this.TextColorRGBField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCounterMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCounterMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClientCounter = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerCounter = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSDependencyMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSDependencyMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Referenced = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SynchronizedRedundant = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditableRedundant = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCategoryFieldType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCategoryFieldType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        StringField = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntField = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateField = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelField = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoneyField = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        LogicalField = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumericCounter = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCounter = 9,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TableField = 10,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomField = 99,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTypeGroup", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTypeGroup : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        StandardTypeGroup = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeywordTypeGroup = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserInt = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserTextAnsi = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDate = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserFloat = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserTextUnicode = 7,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseDefinitionTypeGroup = 8,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTabInfo", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTabInfo : object
    {

        private int BackgroundColorField;

        private string CaptionField;

        private int PositionField;

        private int TabColorField;

        private int TabNoField;

        private int TextColorField;

        private bool VisibleField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BackgroundColor
        {
            get
            {
                return this.BackgroundColorField;
            }
            set
            {
                this.BackgroundColorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption
        {
            get
            {
                return this.CaptionField;
            }
            set
            {
                this.CaptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position
        {
            get
            {
                return this.PositionField;
            }
            set
            {
                this.PositionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TabColor
        {
            get
            {
                return this.TabColorField;
            }
            set
            {
                this.TabColorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TabNo
        {
            get
            {
                return this.TabNoField;
            }
            set
            {
                this.TabNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TextColor
        {
            get
            {
                return this.TextColorField;
            }
            set
            {
                this.TextColorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible
        {
            get
            {
                return this.VisibleField;
            }
            set
            {
                this.VisibleField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSHorizontalAlignment", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSHorizontalAlignment : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CenterH = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSVerticalAlignment", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSVerticalAlignment : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Top = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CenterV = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bottom = 8,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteAsyncSingleQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncSingleQueryParams : object
    {

        private string FullTextField;

        private Therefore.WebAPI.QueryObject QueryField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullText
        {
            get
            {
                return this.FullTextField;
            }
            set
            {
                this.FullTextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.QueryObject Query
        {
            get
            {
                return this.QueryField;
            }
            set
            {
                this.QueryField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteAsyncSingleQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncSingleQueryResponse : object
    {

        private int QueryIdField;

        private Therefore.WebAPI.WSQueryResult QueryResultField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueryId
        {
            get
            {
                return this.QueryIdField;
            }
            set
            {
                this.QueryIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSQueryResult QueryResult
        {
            get
            {
                return this.QueryResultField;
            }
            set
            {
                this.QueryResultField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteFullTextQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteFullTextQueryParams : object
    {

        private Therefore.WebAPI.WSFullTextQuery FullTextQueryField;

        private System.Nullable<bool> IncludeIndexDataField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSFullTextQuery FullTextQuery
        {
            get
            {
                return this.FullTextQueryField;
            }
            set
            {
                this.FullTextQueryField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncludeIndexData
        {
            get
            {
                return this.IncludeIndexDataField;
            }
            set
            {
                this.IncludeIndexDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteFullTextQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteFullTextQueryResponse : object
    {

        private Therefore.WebAPI.WSFullTextQueryResultRow[] ResultsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSFullTextQueryResultRow[] Results
        {
            get
            {
                return this.ResultsField;
            }
            set
            {
                this.ResultsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFullTextQueryResultRow", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFullTextQueryResultRow : object
    {

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        private int CategoryNoField;

        private string ContextField;

        private int DocNoField;

        private long DocSizeField;

        private string ExtensionField;

        private int HitCountField;

        private Therefore.WebAPI.MatchedWordsList MatchedWordsField;

        private System.DateTime ModifiedField;

        private int RankField;

        private int RelevanceField;

        private int SubCategoryNoField;

        private string TitleField;

        private string CategoryNameField;

        private Therefore.WebAPI.WSIndexDataToGet IndexDataField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context
        {
            get
            {
                return this.ContextField;
            }
            set
            {
                this.ContextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DocSize
        {
            get
            {
                return this.DocSizeField;
            }
            set
            {
                this.DocSizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension
        {
            get
            {
                return this.ExtensionField;
            }
            set
            {
                this.ExtensionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HitCount
        {
            get
            {
                return this.HitCountField;
            }
            set
            {
                this.HitCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.MatchedWordsList MatchedWords
        {
            get
            {
                return this.MatchedWordsField;
            }
            set
            {
                this.MatchedWordsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified
        {
            get
            {
                return this.ModifiedField;
            }
            set
            {
                this.ModifiedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank
        {
            get
            {
                return this.RankField;
            }
            set
            {
                this.RankField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Relevance
        {
            get
            {
                return this.RelevanceField;
            }
            set
            {
                this.RelevanceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubCategoryNo
        {
            get
            {
                return this.SubCategoryNoField;
            }
            set
            {
                this.SubCategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 13)]
        public string CategoryName
        {
            get
            {
                return this.CategoryNameField;
            }
            set
            {
                this.CategoryNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 14)]
        public Therefore.WebAPI.WSIndexDataToGet IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "MatchedWordsList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "MatchedWord")]
    public class MatchedWordsList : System.Collections.Generic.List<string>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteMultiQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteMultiQueryParams : object
    {

        private string FullTextField;

        private Therefore.WebAPI.QueryObject[] QueriesField;

        private System.Nullable<int> MaxRowsField;

        private System.Nullable<Therefore.WebAPI.WSQueryMode> ModeField;

        private System.Nullable<int> RowBlockSizeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullText
        {
            get
            {
                return this.FullTextField;
            }
            set
            {
                this.FullTextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.QueryObject[] Queries
        {
            get
            {
                return this.QueriesField;
            }
            set
            {
                this.QueriesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<int> MaxRows
        {
            get
            {
                return this.MaxRowsField;
            }
            set
            {
                this.MaxRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public System.Nullable<Therefore.WebAPI.WSQueryMode> Mode
        {
            get
            {
                return this.ModeField;
            }
            set
            {
                this.ModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public System.Nullable<int> RowBlockSize
        {
            get
            {
                return this.RowBlockSizeField;
            }
            set
            {
                this.RowBlockSizeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteMultiQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteMultiQueryResponse : object
    {

        private Therefore.WebAPI.WSQueryResult[] QueryResultsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSQueryResult[] QueryResults
        {
            get
            {
                return this.QueryResultsField;
            }
            set
            {
                this.QueryResultsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteReportParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteReportParams : object
    {

        private Therefore.WebAPI.WSReportFormat FormatField;

        private int ReportDefNoField;

        private Therefore.WebAPI.WSReportParameter[] ReportParametersField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSReportFormat Format
        {
            get
            {
                return this.FormatField;
            }
            set
            {
                this.FormatField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ReportDefNo
        {
            get
            {
                return this.ReportDefNoField;
            }
            set
            {
                this.ReportDefNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSReportParameter[] ReportParameters
        {
            get
            {
                return this.ReportParametersField;
            }
            set
            {
                this.ReportParametersField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSReportFormat", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSReportFormat : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTML4 = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pdf = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Xml = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Csv = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tiff = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTML3 = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MHTML = 7,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcelFormat = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WordFormat = 9,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSReportParameter", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSReportParameter : object
    {

        private string NameField;

        private string ValueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteReportResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteReportResponse : object
    {

        private int ReportDefinitionNoField;

        private byte[] ReportFileDataField;

        private string ReportFileNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportDefinitionNo
        {
            get
            {
                return this.ReportDefinitionNoField;
            }
            set
            {
                this.ReportDefinitionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ReportFileData
        {
            get
            {
                return this.ReportFileDataField;
            }
            set
            {
                this.ReportFileDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportFileName
        {
            get
            {
                return this.ReportFileNameField;
            }
            set
            {
                this.ReportFileNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteSimpleQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteSimpleQueryParams : object
    {

        private int CategoryNoField;

        private string ConditionField;

        private int FieldNoField;

        private int OrderByFieldNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string Condition
        {
            get
            {
                return this.ConditionField;
            }
            set
            {
                this.ConditionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FieldNo
        {
            get
            {
                return this.FieldNoField;
            }
            set
            {
                this.FieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int OrderByFieldNo
        {
            get
            {
                return this.OrderByFieldNoField;
            }
            set
            {
                this.OrderByFieldNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteSimpleQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteSimpleQueryResponse : object
    {

        private Therefore.WebAPI.WSQueryResult QueryResultField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSQueryResult QueryResult
        {
            get
            {
                return this.QueryResultField;
            }
            set
            {
                this.QueryResultField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteSingleQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteSingleQueryParams : object
    {

        private string FullTextField;

        private Therefore.WebAPI.QueryObject QueryField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullText
        {
            get
            {
                return this.FullTextField;
            }
            set
            {
                this.FullTextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.QueryObject Query
        {
            get
            {
                return this.QueryField;
            }
            set
            {
                this.QueryField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteSingleQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteSingleQueryResponse : object
    {

        private Therefore.WebAPI.WSQueryResult QueryResultField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSQueryResult QueryResult
        {
            get
            {
                return this.QueryResultField;
            }
            set
            {
                this.QueryResultField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteTaskInfoQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteTaskInfoQueryParams : object
    {

        private int MaxRowsField;

        private Therefore.WebAPI.WSTaskQueryMode QueryModeField;

        private int TaskNoField;

        private Therefore.WebAPI.WSTaskViewMode ViewModeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxRows
        {
            get
            {
                return this.MaxRowsField;
            }
            set
            {
                this.MaxRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSTaskQueryMode QueryMode
        {
            get
            {
                return this.QueryModeField;
            }
            set
            {
                this.QueryModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSTaskViewMode ViewMode
        {
            get
            {
                return this.ViewModeField;
            }
            set
            {
                this.ViewModeField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTaskQueryMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTaskQueryMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllStarted = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllParticipated = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTaskViewMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTaskViewMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllTasks = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Today = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Next7 = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Overdue = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStarted = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 6,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteTaskInfoQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteTaskInfoQueryResponse : object
    {

        private Therefore.WebAPI.WSTaskInfo[] QueryResultField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTaskInfo[] QueryResult
        {
            get
            {
                return this.QueryResultField;
            }
            set
            {
                this.QueryResultField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTaskInfo", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTaskInfo : object
    {

        private string AssignedToNameField;

        private int AssignedToNumberField;

        private string CommentField;

        private Therefore.WebAPI.WSTaskDecision CompletedDecisionField;

        private string CreatedByField;

        private int DocNoField;

        private System.Nullable<System.DateTime> DueDateField;

        private string InstructionsField;

        private bool IsAssignedToUserField;

        private System.DateTime LastUpdateField;

        private Therefore.WebAPI.WSTaskMode ModeField;

        private System.Nullable<System.DateTime> StartDateField;

        private Therefore.WebAPI.WSTaskStatus StatusField;

        private string SubjectField;

        private int TaskNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToName
        {
            get
            {
                return this.AssignedToNameField;
            }
            set
            {
                this.AssignedToNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignedToNumber
        {
            get
            {
                return this.AssignedToNumberField;
            }
            set
            {
                this.AssignedToNumberField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                this.CommentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTaskDecision CompletedDecision
        {
            get
            {
                return this.CompletedDecisionField;
            }
            set
            {
                this.CompletedDecisionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy
        {
            get
            {
                return this.CreatedByField;
            }
            set
            {
                this.CreatedByField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this.DueDateField;
            }
            set
            {
                this.DueDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Instructions
        {
            get
            {
                return this.InstructionsField;
            }
            set
            {
                this.InstructionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAssignedToUser
        {
            get
            {
                return this.IsAssignedToUserField;
            }
            set
            {
                this.IsAssignedToUserField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdate
        {
            get
            {
                return this.LastUpdateField;
            }
            set
            {
                this.LastUpdateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTaskMode Mode
        {
            get
            {
                return this.ModeField;
            }
            set
            {
                this.ModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this.StartDateField;
            }
            set
            {
                this.StartDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTaskStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return this.SubjectField;
            }
            set
            {
                this.SubjectField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTaskMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTaskMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompleteDecline = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApproveReject = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        YesNo = 4,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTaskStatus", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTaskStatus : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStartedStatus = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgressStatus = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingStatus = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeferredStatus = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompletedStatus = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevokedStatus = 6,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteUsersQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteUsersQueryParams : object
    {

        private Therefore.WebAPI.DomainNameList DomainNamesField;

        private Therefore.WebAPI.WSUserQueryFlags FlagsField;

        private string QueryField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.DomainNameList DomainNames
        {
            get
            {
                return this.DomainNamesField;
            }
            set
            {
                this.DomainNamesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSUserQueryFlags Flags
        {
            get
            {
                return this.FlagsField;
            }
            set
            {
                this.FlagsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query
        {
            get
            {
                return this.QueryField;
            }
            set
            {
                this.QueryField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "DomainNameList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "DomainName")]
    public class DomainNameList : System.Collections.Generic.List<string>
    {
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSUserQueryFlags", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSUserQueryFlags : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindUsersInActiveDirectory = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindUsersInTherefore = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindAllUsers = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindUsersNotInTherefore = 32,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindGroupsInActiveDirectory = 64,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindGroupsInTherefore = 256,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindAllGroups = 320,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindAllUsersAndGroups = 325,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindGroupsNotInTherefore = 1024,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindSMTPUsersOnly = 4096,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteUsersQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteUsersQueryResponse : object
    {

        private Therefore.WebAPI.WSUser[] UsersField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSUser[] Users
        {
            get
            {
                return this.UsersField;
            }
            set
            {
                this.UsersField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSUser", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSUser : object
    {

        private string DescriptionField;

        private string DisplayNameField;

        private string DomainNameField;

        private string InFolderField;

        private string SMTPField;

        private System.Nullable<int> UserIdField;

        private string UserNameField;

        private System.Nullable<Therefore.WebAPI.WSUserType> UserTypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName
        {
            get
            {
                return this.DisplayNameField;
            }
            set
            {
                this.DisplayNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainName
        {
            get
            {
                return this.DomainNameField;
            }
            set
            {
                this.DomainNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InFolder
        {
            get
            {
                return this.InFolderField;
            }
            set
            {
                this.InFolderField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMTP
        {
            get
            {
                return this.SMTPField;
            }
            set
            {
                this.SMTPField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Therefore.WebAPI.WSUserType> UserType
        {
            get
            {
                return this.UserTypeField;
            }
            set
            {
                this.UserTypeField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSUserType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSUserType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleUser = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserGroup = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemUser = 3,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetUserDetailsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetUserDetailsParams : object
    {

        private int UserOrGroupIdField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserOrGroupId
        {
            get
            {
                return this.UserOrGroupIdField;
            }
            set
            {
                this.UserOrGroupIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetUserDetailsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetUserDetailsResponse : object
    {

        private Therefore.WebAPI.WSUser UserDetailsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSUser UserDetails
        {
            get
            {
                return this.UserDetailsField;
            }
            set
            {
                this.UserDetailsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteWorkflowQueryForAllParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteWorkflowQueryForAllParams : object
    {

        private Therefore.WebAPI.WSWorkflowFlags WorkflowFlagsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSWorkflowFlags WorkflowFlags
        {
            get
            {
                return this.WorkflowFlagsField;
            }
            set
            {
                this.WorkflowFlagsField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWorkflowFlags", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSWorkflowFlags : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultInstances = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RunningInstances = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinishedInstances = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllInstances = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInstances = 4,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteWorkflowQueryForAllResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteWorkflowQueryForAllResponse : object
    {

        private Therefore.WebAPI.WSWorkflowQueryResult[] WorkflowQueryResultListField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWorkflowQueryResult[] WorkflowQueryResultList
        {
            get
            {
                return this.WorkflowQueryResultListField;
            }
            set
            {
                this.WorkflowQueryResultListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWorkflowQueryResult", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWorkflowQueryResult : object
    {

        private Therefore.WebAPI.WSWorkflowResultRow[] ResultRowsField;

        private string CaseDefNameField;

        private System.Nullable<int> CaseDefNoField;

        private string CategoryNameField;

        private System.Nullable<int> CategoryNoField;

        private string ProcessNameField;

        private System.Nullable<int> ProcessNoField;

        private Therefore.WebAPI.WSCategoryField[] ColumnsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWorkflowResultRow[] ResultRows
        {
            get
            {
                return this.ResultRowsField;
            }
            set
            {
                this.ResultRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public string CaseDefName
        {
            get
            {
                return this.CaseDefNameField;
            }
            set
            {
                this.CaseDefNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<int> CaseDefNo
        {
            get
            {
                return this.CaseDefNoField;
            }
            set
            {
                this.CaseDefNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public string CategoryName
        {
            get
            {
                return this.CategoryNameField;
            }
            set
            {
                this.CategoryNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public System.Nullable<int> CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public string ProcessName
        {
            get
            {
                return this.ProcessNameField;
            }
            set
            {
                this.ProcessNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public System.Nullable<int> ProcessNo
        {
            get
            {
                return this.ProcessNoField;
            }
            set
            {
                this.ProcessNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public Therefore.WebAPI.WSCategoryField[] Columns
        {
            get
            {
                return this.ColumnsField;
            }
            set
            {
                this.ColumnsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWorkflowResultRow", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWorkflowResultRow : object
    {

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        private Therefore.WebAPI.IndexValueList IndexValuesField;

        private long SizeField;

        private int VersionNoField;

        private int WorkflowNoField;

        private Therefore.WebAPI.WSQueryResultRowStatus StatusField;

        private int InstanceNoField;

        private int TokenNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.IndexValueList IndexValues
        {
            get
            {
                return this.IndexValuesField;
            }
            set
            {
                this.IndexValuesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                this.SizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowNo
        {
            get
            {
                return this.WorkflowNoField;
            }
            set
            {
                this.WorkflowNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public Therefore.WebAPI.WSQueryResultRowStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteWorkflowQueryForProcessParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteWorkflowQueryForProcessParams : object
    {

        private int ProcessNoField;

        private Therefore.WebAPI.WSWorkflowFlags WorkflowFlagsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ProcessNo
        {
            get
            {
                return this.ProcessNoField;
            }
            set
            {
                this.ProcessNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSWorkflowFlags WorkflowFlags
        {
            get
            {
                return this.WorkflowFlagsField;
            }
            set
            {
                this.WorkflowFlagsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteWorkflowQueryForProcessResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteWorkflowQueryForProcessResponse : object
    {

        private Therefore.WebAPI.WSWorkflowQueryResult WorkflowQueryResultField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWorkflowQueryResult WorkflowQueryResult
        {
            get
            {
                return this.WorkflowQueryResultField;
            }
            set
            {
                this.WorkflowQueryResultField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FillDependentFieldsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class FillDependentFieldsParams : object
    {

        private System.Nullable<int> DocNoField;

        private Therefore.WebAPI.WSIndexDataItem[] IndexDataItemsField;

        private System.Nullable<int> CaseDefinitionNoField;

        private System.Nullable<int> CategoryNoField;

        private System.Nullable<bool> ExcludeRedundantField;

        private System.Nullable<int> PrimaryFieldNoField;

        private bool IsAccessMaskNeededField;

        private System.Nullable<bool> DoCalculateFieldsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSIndexDataItem[] IndexDataItems
        {
            get
            {
                return this.IndexDataItemsField;
            }
            set
            {
                this.IndexDataItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<int> CaseDefinitionNo
        {
            get
            {
                return this.CaseDefinitionNoField;
            }
            set
            {
                this.CaseDefinitionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public System.Nullable<int> CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public System.Nullable<bool> ExcludeRedundant
        {
            get
            {
                return this.ExcludeRedundantField;
            }
            set
            {
                this.ExcludeRedundantField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public System.Nullable<int> PrimaryFieldNo
        {
            get
            {
                return this.PrimaryFieldNoField;
            }
            set
            {
                this.PrimaryFieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public bool IsAccessMaskNeeded
        {
            get
            {
                return this.IsAccessMaskNeededField;
            }
            set
            {
                this.IsAccessMaskNeededField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public System.Nullable<bool> DoCalculateFields
        {
            get
            {
                return this.DoCalculateFieldsField;
            }
            set
            {
                this.DoCalculateFieldsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FillDependentFieldsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class FillDependentFieldsResponse : object
    {

        private Therefore.WebAPI.WSIndexDataItem[] UpdatedIndexDataItemsField;

        private System.Nullable<int> HitCountField;

        private Therefore.WebAPI.WSFieldCalculationResult CalculationResultField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataItem[] UpdatedIndexDataItems
        {
            get
            {
                return this.UpdatedIndexDataItemsField;
            }
            set
            {
                this.UpdatedIndexDataItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public System.Nullable<int> HitCount
        {
            get
            {
                return this.HitCountField;
            }
            set
            {
                this.HitCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public Therefore.WebAPI.WSFieldCalculationResult CalculationResult
        {
            get
            {
                return this.CalculationResultField;
            }
            set
            {
                this.CalculationResultField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FinishCurrentWorkflowTaskParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class FinishCurrentWorkflowTaskParams : object
    {

        private int InstanceNoField;

        private int NextTaskNoField;

        private string TextInformationField;

        private int TokenNoField;

        private Therefore.WebAPI.WSNextUsersData NextUsersField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int NextTaskNo
        {
            get
            {
                return this.NextTaskNoField;
            }
            set
            {
                this.NextTaskNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextInformation
        {
            get
            {
                return this.TextInformationField;
            }
            set
            {
                this.TextInformationField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public Therefore.WebAPI.WSNextUsersData NextUsers
        {
            get
            {
                return this.NextUsersField;
            }
            set
            {
                this.NextUsersField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSNextUsersData", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSNextUsersData : object
    {

        private Therefore.WebAPI.UserNoList NextUserNoListField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.UserNoList NextUserNoList
        {
            get
            {
                return this.NextUserNoListField;
            }
            set
            {
                this.NextUserNoListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "UserNoList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "UserNo")]
    public class UserNoList : System.Collections.Generic.List<int>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FinishCurrentWorkflowTaskResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class FinishCurrentWorkflowTaskResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetAllTreeViewsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetAllTreeViewsParams : object
    {

        private Therefore.WebAPI.WSPermissionType PermissionsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSPermissionType Permissions
        {
            get
            {
                return this.PermissionsField;
            }
            set
            {
                this.PermissionsField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSPermissionType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSPermissionType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        IgnorePermissions = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        OperatorPermission = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdminPermission = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetPermPermission = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessPermission = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TheSystemConnectPermission = 16,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TheSystemWritePermission = 32,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CategoryArchivePermission = 64,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryAdminPermission = 128,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryExecutePermission = 256,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryCtgrytabsPermission = 512,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeywordDictionaryChangePermission = 1024,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryTemplatesReadPermission = 2048,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocViewinHitListPermission = 4096,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocViewDocPermission = 8192,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPrintPermission = 16384,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocExportSendPermission = 32768,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocViewAnnotationPermission = 65536,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocHideAnnotationPermission = 131072,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocViewHistoryPermission = 262144,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WfParticipatePermission = 262144,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAddAnnotationsPermission = 524288,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WfAddDocPermission = 524288,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDeleteAnnotationsPermission = 1048576,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WfViewHistoryPermission = 1048576,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocEditPermission = 2097152,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WfDelegatePermission = 2097152,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUpdateIndexDataPermission = 4194304,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WfViewAllPermission = 4194304,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAddPagePermission = 8388608,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WfDeletePermission = 8388608,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDeletePagePermission = 16777216,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDeleteDocPermission = 33554432,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CategoryFieldReadPermission = 268435456,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CategoryFieldSetPermission = 536870912,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CategoryFieldChangePermission = 1073741824,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetAllTreeViewsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetAllTreeViewsResponse : object
    {

        private Therefore.WebAPI.WSTreeViewItem[] TreeViewListField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTreeViewItem[] TreeViewList
        {
            get
            {
                return this.TreeViewListField;
            }
            set
            {
                this.TreeViewListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTreeViewItem", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTreeViewItem : object
    {

        private int CategoryNoField;

        private System.Guid GuidField;

        private Therefore.WebAPI.WSTreeViewLevelDefinition[] LevelsDefinitionField;

        private string NameField;

        private int ViewNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTreeViewLevelDefinition[] LevelsDefinition
        {
            get
            {
                return this.LevelsDefinitionField;
            }
            set
            {
                this.LevelsDefinitionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewNo
        {
            get
            {
                return this.ViewNoField;
            }
            set
            {
                this.ViewNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTreeViewLevelDefinition", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTreeViewLevelDefinition : object
    {

        private int FieldNoField;

        private string FuncParamField;

        private Therefore.WebAPI.WSLevelFunction FunctionField;

        private bool IsLastLevelField;

        private int LevelNoField;

        private Therefore.WebAPI.WSSortOrder SortOrderField;

        private int ViewNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldNo
        {
            get
            {
                return this.FieldNoField;
            }
            set
            {
                this.FieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuncParam
        {
            get
            {
                return this.FuncParamField;
            }
            set
            {
                this.FuncParamField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSLevelFunction Function
        {
            get
            {
                return this.FunctionField;
            }
            set
            {
                this.FunctionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLastLevel
        {
            get
            {
                return this.IsLastLevelField;
            }
            set
            {
                this.IsLastLevelField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LevelNo
        {
            get
            {
                return this.LevelNoField;
            }
            set
            {
                this.LevelNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSSortOrder SortOrder
        {
            get
            {
                return this.SortOrderField;
            }
            set
            {
                this.SortOrderField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewNo
        {
            get
            {
                return this.ViewNoField;
            }
            set
            {
                this.ViewNoField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSLevelFunction", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSLevelFunction : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoFunction = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Year = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MonthYear = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstChar = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstCharGroup = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Range = 6,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSSortOrder", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSSortOrder : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascending = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Descending = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCaseParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseParams : object
    {

        private int CaseNoField;

        private bool IsAccessMaskNeededField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccessMaskNeeded
        {
            get
            {
                return this.IsAccessMaskNeededField;
            }
            set
            {
                this.IsAccessMaskNeededField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCaseResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseResponse : object
    {

        private Therefore.WebAPI.WSCase CaseField;

        private System.DateTime LastChangeTimeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCase Case
        {
            get
            {
                return this.CaseField;
            }
            set
            {
                this.CaseField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCase", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCase : object
    {

        private int CaseDefinitionNoField;

        private int CaseNoField;

        private string CreatedByUserField;

        private int CreatedByUserNoField;

        private System.Nullable<System.DateTime> CreatedOnField;

        private Therefore.WebAPI.WSIndexDataToGet IndexDataField;

        private string ClosedByUserField;

        private int ClosedByUserNoField;

        private System.Nullable<System.DateTime> ClosedOnField;

        private bool IsClosedField;

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseDefinitionNo
        {
            get
            {
                return this.CaseDefinitionNoField;
            }
            set
            {
                this.CaseDefinitionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByUser
        {
            get
            {
                return this.CreatedByUserField;
            }
            set
            {
                this.CreatedByUserField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserNo
        {
            get
            {
                return this.CreatedByUserNoField;
            }
            set
            {
                this.CreatedByUserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.CreatedOnField;
            }
            set
            {
                this.CreatedOnField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataToGet IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public string ClosedByUser
        {
            get
            {
                return this.ClosedByUserField;
            }
            set
            {
                this.ClosedByUserField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public int ClosedByUserNo
        {
            get
            {
                return this.ClosedByUserNoField;
            }
            set
            {
                this.ClosedByUserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 8)]
        public System.Nullable<System.DateTime> ClosedOn
        {
            get
            {
                return this.ClosedOnField;
            }
            set
            {
                this.ClosedOnField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public bool IsClosed
        {
            get
            {
                return this.IsClosedField;
            }
            set
            {
                this.IsClosedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 10)]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCaseDefinitionParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseDefinitionParams : object
    {

        private int CaseDefinitionNoField;

        private bool IsAccessMaskNeededField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CaseDefinitionNo
        {
            get
            {
                return this.CaseDefinitionNoField;
            }
            set
            {
                this.CaseDefinitionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccessMaskNeeded
        {
            get
            {
                return this.IsAccessMaskNeededField;
            }
            set
            {
                this.IsAccessMaskNeededField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCaseDefinitionResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseDefinitionResponse : object
    {

        private Therefore.WebAPI.WSCaseDefinition CaseDefinitionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCaseDefinition CaseDefinition
        {
            get
            {
                return this.CaseDefinitionField;
            }
            set
            {
                this.CaseDefinitionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCaseDefinition", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCaseDefinition : object
    {

        private int CaseDefNoField;

        private Therefore.WebAPI.WSCategory[] CategoriesField;

        private Therefore.WebAPI.WSCategoryField[] FieldsField;

        private System.Guid GuidField;

        private bool IsFullTextEnabledField;

        private string NameField;

        private int ParentFolderNoField;

        private int VersionField;

        private int WorkflowProcessNoField;

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        private string DescriptionField;

        private int HeightField;

        private int SubCaseFieldIxField;

        private string TableNameField;

        private string TitleField;

        private int TitleLengthField;

        private int TypeNoField;

        private int WidthField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseDefNo
        {
            get
            {
                return this.CaseDefNoField;
            }
            set
            {
                this.CaseDefNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCategory[] Categories
        {
            get
            {
                return this.CategoriesField;
            }
            set
            {
                this.CategoriesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCategoryField[] Fields
        {
            get
            {
                return this.FieldsField;
            }
            set
            {
                this.FieldsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFullTextEnabled
        {
            get
            {
                return this.IsFullTextEnabledField;
            }
            set
            {
                this.IsFullTextEnabledField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ParentFolderNo
        {
            get
            {
                return this.ParentFolderNoField;
            }
            set
            {
                this.ParentFolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version
        {
            get
            {
                return this.VersionField;
            }
            set
            {
                this.VersionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowProcessNo
        {
            get
            {
                return this.WorkflowProcessNoField;
            }
            set
            {
                this.WorkflowProcessNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 10)]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 11)]
        public int Height
        {
            get
            {
                return this.HeightField;
            }
            set
            {
                this.HeightField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 12)]
        public int SubCaseFieldIx
        {
            get
            {
                return this.SubCaseFieldIxField;
            }
            set
            {
                this.SubCaseFieldIxField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 13)]
        public string TableName
        {
            get
            {
                return this.TableNameField;
            }
            set
            {
                this.TableNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 14)]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 15)]
        public int TitleLength
        {
            get
            {
                return this.TitleLengthField;
            }
            set
            {
                this.TitleLengthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 16)]
        public int TypeNo
        {
            get
            {
                return this.TypeNoField;
            }
            set
            {
                this.TypeNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 17)]
        public int Width
        {
            get
            {
                return this.WidthField;
            }
            set
            {
                this.WidthField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCategory", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCategory : object
    {

        private int CategoryNoField;

        private System.Guid GuidField;

        private string NameField;

        private int ParentFolderNoField;

        private string TitleField;

        private int VersionField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ParentFolderNo
        {
            get
            {
                return this.ParentFolderNoField;
            }
            set
            {
                this.ParentFolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version
        {
            get
            {
                return this.VersionField;
            }
            set
            {
                this.VersionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCaseDocumentsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseDocumentsParams : object
    {

        private int CaseNoField;

        private int CategoryNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCaseDocumentsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseDocumentsResponse : object
    {

        private Therefore.WebAPI.DocumentNoList DocumentNosField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.DocumentNoList DocumentNos
        {
            get
            {
                return this.DocumentNosField;
            }
            set
            {
                this.DocumentNosField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "DocumentNoList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "DocumentNo")]
    public class DocumentNoList : System.Collections.Generic.List<int>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCaseHistoryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseHistoryParams : object
    {

        private int CaseNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCaseHistoryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseHistoryResponse : object
    {

        private Therefore.WebAPI.WSCaseHistoryEntry[] CaseHistoryField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCaseHistoryEntry[] CaseHistory
        {
            get
            {
                return this.CaseHistoryField;
            }
            set
            {
                this.CaseHistoryField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCaseHistoryEntry", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCaseHistoryEntry : object
    {

        private System.Nullable<System.DateTime> ActionDateField;

        private Therefore.WebAPI.WSCaseHistoryEntryType EntryTypeField;

        private int ItemDataField;

        private int ItemNoField;

        private int ParentItemNoField;

        private string TextField;

        private string UserNameField;

        private int UserNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActionDate
        {
            get
            {
                return this.ActionDateField;
            }
            set
            {
                this.ActionDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCaseHistoryEntryType EntryType
        {
            get
            {
                return this.EntryTypeField;
            }
            set
            {
                this.EntryTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemData
        {
            get
            {
                return this.ItemDataField;
            }
            set
            {
                this.ItemDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemNo
        {
            get
            {
                return this.ItemNoField;
            }
            set
            {
                this.ItemNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentItemNo
        {
            get
            {
                return this.ParentItemNoField;
            }
            set
            {
                this.ParentItemNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserNo
        {
            get
            {
                return this.UserNoField;
            }
            set
            {
                this.UserNoField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCaseHistoryEntryType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCaseHistoryEntryType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseCreatedCH = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentAddedCH = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentModifiedCH = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentDeletedCH = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TheCaseHistoryEntryType = 5,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCategoriesTreeParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCategoriesTreeParams : object
    {

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        private Therefore.WebAPI.EmptyDocumentModeList EmptyDocModesCriteriaField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.EmptyDocumentModeList EmptyDocModesCriteria
        {
            get
            {
                return this.EmptyDocModesCriteriaField;
            }
            set
            {
                this.EmptyDocModesCriteriaField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "EmptyDocumentModeList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "EmptyDocumentMode")]
    public class EmptyDocumentModeList : System.Collections.Generic.List<Therefore.WebAPI.WSEmptyDocumentMode>
    {
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSEmptyDocumentMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSEmptyDocumentMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmptyNotAllowed = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmptyAllowed = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MustBeEmpty = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCategoriesTreeResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCategoriesTreeResponse : object
    {

        private Therefore.WebAPI.WSCategoryTreeItem[] TreeItemsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCategoryTreeItem[] TreeItems
        {
            get
            {
                return this.TreeItemsField;
            }
            set
            {
                this.TreeItemsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCategoryTreeItem", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCategoryTreeItem : object
    {

        private Therefore.WebAPI.WSCategoryTreeItem[] ChildItemsField;

        private int FolderTypeField;

        private System.Guid GuidField;

        private int ItemNoField;

        private Therefore.WebAPI.WSCategoryTreeItemType ItemTypeField;

        private string NameField;

        private int ParentCaseDefNoField;

        private int ParentFolderNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCategoryTreeItem[] ChildItems
        {
            get
            {
                return this.ChildItemsField;
            }
            set
            {
                this.ChildItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderType
        {
            get
            {
                return this.FolderTypeField;
            }
            set
            {
                this.FolderTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemNo
        {
            get
            {
                return this.ItemNoField;
            }
            set
            {
                this.ItemNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCategoryTreeItemType ItemType
        {
            get
            {
                return this.ItemTypeField;
            }
            set
            {
                this.ItemTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentCaseDefNo
        {
            get
            {
                return this.ParentCaseDefNoField;
            }
            set
            {
                this.ParentCaseDefNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentFolderNo
        {
            get
            {
                return this.ParentFolderNoField;
            }
            set
            {
                this.ParentFolderNoField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCategoryTreeItemType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCategoryTreeItemType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Root = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Folder = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Category = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseDefinition = 3,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCategoryInfoParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCategoryInfoParams : object
    {

        private int CategoryNoField;

        private bool IsAccessMaskNeededField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccessMaskNeeded
        {
            get
            {
                return this.IsAccessMaskNeededField;
            }
            set
            {
                this.IsAccessMaskNeededField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCategoryInfoResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCategoryInfoResponse : object
    {

        private Therefore.WebAPI.WSAutoAppendMode AutoAppendModeField;

        private int BelongsToCaseDefinitionField;

        private Therefore.WebAPI.WSCategoryField[] CategoryFieldsField;

        private int CategoryNoField;

        private Therefore.WebAPI.WSCheckInCommentsMode CheckInCommentsModeField;

        private string DescriptionField;

        private int DocumentTitleLengthField;

        private int FieldCountField;

        private int FolderNoField;

        private System.Guid GuidField;

        private int HeightField;

        private bool IsFulltextEnabledField;

        private string NameField;

        private bool NewVersionOnIndexDataChangeField;

        private int QueryTemplateNoField;

        private int SubCtgryFieldIxField;

        private string TableNameField;

        private string TitleField;

        private int VersionField;

        private int WatermarkDocNoField;

        private int WatermarkHPosField;

        private int WatermarkModeField;

        private int WatermarkResolutionField;

        private int WatermarkVPosField;

        private int WidthField;

        private string WorkflowFolderField;

        private string WorkflowFormField;

        private int WorkflowProcessNoField;

        private int WorkflowProcessNoUpdateField;

        private int BackgroundColorField;

        private Therefore.WebAPI.WSCoverSheetMode CoverModeField;

        private bool DocumentPreviewField;

        private Therefore.WebAPI.WSEmptyDocumentMode EmptyDocModeField;

        private System.DateTime FullTextDateField;

        private Therefore.WebAPI.WSFullTextMode FullTextModeField;

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSAutoAppendMode AutoAppendMode
        {
            get
            {
                return this.AutoAppendModeField;
            }
            set
            {
                this.AutoAppendModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongsToCaseDefinition
        {
            get
            {
                return this.BelongsToCaseDefinitionField;
            }
            set
            {
                this.BelongsToCaseDefinitionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCategoryField[] CategoryFields
        {
            get
            {
                return this.CategoryFieldsField;
            }
            set
            {
                this.CategoryFieldsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCheckInCommentsMode CheckInCommentsMode
        {
            get
            {
                return this.CheckInCommentsModeField;
            }
            set
            {
                this.CheckInCommentsModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTitleLength
        {
            get
            {
                return this.DocumentTitleLengthField;
            }
            set
            {
                this.DocumentTitleLengthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldCount
        {
            get
            {
                return this.FieldCountField;
            }
            set
            {
                this.FieldCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height
        {
            get
            {
                return this.HeightField;
            }
            set
            {
                this.HeightField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFulltextEnabled
        {
            get
            {
                return this.IsFulltextEnabledField;
            }
            set
            {
                this.IsFulltextEnabledField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NewVersionOnIndexDataChange
        {
            get
            {
                return this.NewVersionOnIndexDataChangeField;
            }
            set
            {
                this.NewVersionOnIndexDataChangeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueryTemplateNo
        {
            get
            {
                return this.QueryTemplateNoField;
            }
            set
            {
                this.QueryTemplateNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubCtgryFieldIx
        {
            get
            {
                return this.SubCtgryFieldIxField;
            }
            set
            {
                this.SubCtgryFieldIxField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName
        {
            get
            {
                return this.TableNameField;
            }
            set
            {
                this.TableNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version
        {
            get
            {
                return this.VersionField;
            }
            set
            {
                this.VersionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WatermarkDocNo
        {
            get
            {
                return this.WatermarkDocNoField;
            }
            set
            {
                this.WatermarkDocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WatermarkHPos
        {
            get
            {
                return this.WatermarkHPosField;
            }
            set
            {
                this.WatermarkHPosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WatermarkMode
        {
            get
            {
                return this.WatermarkModeField;
            }
            set
            {
                this.WatermarkModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WatermarkResolution
        {
            get
            {
                return this.WatermarkResolutionField;
            }
            set
            {
                this.WatermarkResolutionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WatermarkVPos
        {
            get
            {
                return this.WatermarkVPosField;
            }
            set
            {
                this.WatermarkVPosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width
        {
            get
            {
                return this.WidthField;
            }
            set
            {
                this.WidthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowFolder
        {
            get
            {
                return this.WorkflowFolderField;
            }
            set
            {
                this.WorkflowFolderField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowForm
        {
            get
            {
                return this.WorkflowFormField;
            }
            set
            {
                this.WorkflowFormField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowProcessNo
        {
            get
            {
                return this.WorkflowProcessNoField;
            }
            set
            {
                this.WorkflowProcessNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowProcessNoUpdate
        {
            get
            {
                return this.WorkflowProcessNoUpdateField;
            }
            set
            {
                this.WorkflowProcessNoUpdateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 29)]
        public int BackgroundColor
        {
            get
            {
                return this.BackgroundColorField;
            }
            set
            {
                this.BackgroundColorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 30)]
        public Therefore.WebAPI.WSCoverSheetMode CoverMode
        {
            get
            {
                return this.CoverModeField;
            }
            set
            {
                this.CoverModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 31)]
        public bool DocumentPreview
        {
            get
            {
                return this.DocumentPreviewField;
            }
            set
            {
                this.DocumentPreviewField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 32)]
        public Therefore.WebAPI.WSEmptyDocumentMode EmptyDocMode
        {
            get
            {
                return this.EmptyDocModeField;
            }
            set
            {
                this.EmptyDocModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 33)]
        public System.DateTime FullTextDate
        {
            get
            {
                return this.FullTextDateField;
            }
            set
            {
                this.FullTextDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 34)]
        public Therefore.WebAPI.WSFullTextMode FullTextMode
        {
            get
            {
                return this.FullTextModeField;
            }
            set
            {
                this.FullTextModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 35)]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCheckInCommentsMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCheckInCommentsMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentsDisabled = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentsAllowed = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentsMandatory = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCoverSheetMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCoverSheetMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeverShown = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnlyForEmptyDocument = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlwaysShown = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFullTextMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSFullTextMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FTModeOff = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FTModeAll = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FTModeExcludeByDate = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetConnectedUserParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConnectedUserParams : object
    {

        private bool CreateField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Create
        {
            get
            {
                return this.CreateField;
            }
            set
            {
                this.CreateField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetConnectedUserResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConnectedUserResponse : object
    {

        private Therefore.WebAPI.WSUser UserField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSUser User
        {
            get
            {
                return this.UserField;
            }
            set
            {
                this.UserField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetConvertedDocStreamsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConvertedDocStreamsParams : object
    {

        private Therefore.WebAPI.WSConversionOptions ConversionOptionsField;

        private int DocNoField;

        private Therefore.WebAPI.StreamNoList StreamNosField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSConversionOptions ConversionOptions
        {
            get
            {
                return this.ConversionOptionsField;
            }
            set
            {
                this.ConversionOptionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.StreamNoList StreamNos
        {
            get
            {
                return this.StreamNosField;
            }
            set
            {
                this.StreamNosField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "StreamNoList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "StreamNo")]
    public class StreamNoList : System.Collections.Generic.List<int>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetConvertedDocStreamsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConvertedDocStreamsResponse : object
    {

        private Therefore.WebAPI.WSStreamInfoWithData[] StreamsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSStreamInfoWithData[] Streams
        {
            get
            {
                return this.StreamsField;
            }
            set
            {
                this.StreamsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetConvertedDocStreamsRawParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConvertedDocStreamsRawParams : object
    {

        private Therefore.WebAPI.WSConversionOptions ConversionOptionsField;

        private int DocNoField;

        private Therefore.WebAPI.StreamNoList StreamNosField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSConversionOptions ConversionOptions
        {
            get
            {
                return this.ConversionOptionsField;
            }
            set
            {
                this.ConversionOptionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.StreamNoList StreamNos
        {
            get
            {
                return this.StreamNosField;
            }
            set
            {
                this.StreamNosField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDictionaryInfoParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDictionaryInfoParams : object
    {

        private System.Nullable<int> ByDictionaryIDField;

        private System.Nullable<int> ByDictionaryTypeNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ByDictionaryID
        {
            get
            {
                return this.ByDictionaryIDField;
            }
            set
            {
                this.ByDictionaryIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ByDictionaryTypeNo
        {
            get
            {
                return this.ByDictionaryTypeNoField;
            }
            set
            {
                this.ByDictionaryTypeNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDictionaryInfoResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDictionaryInfoResponse : object
    {

        private Therefore.WebAPI.WSKeywordDictionary DictionaryField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSKeywordDictionary Dictionary
        {
            get
            {
                return this.DictionaryField;
            }
            set
            {
                this.DictionaryField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSKeywordDictionary", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSKeywordDictionary : object
    {

        private int FolderNoField;

        private Therefore.WebAPI.WSKeyword[] ItemsField;

        private int KeywordDictionaryNoField;

        private int MultiTypeNoField;

        private string NameField;

        private int SingleTypeNoField;

        private string TableNameField;

        private string TableNameMultiKeywordField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSKeyword[] Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KeywordDictionaryNo
        {
            get
            {
                return this.KeywordDictionaryNoField;
            }
            set
            {
                this.KeywordDictionaryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MultiTypeNo
        {
            get
            {
                return this.MultiTypeNoField;
            }
            set
            {
                this.MultiTypeNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SingleTypeNo
        {
            get
            {
                return this.SingleTypeNoField;
            }
            set
            {
                this.SingleTypeNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName
        {
            get
            {
                return this.TableNameField;
            }
            set
            {
                this.TableNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableNameMultiKeyword
        {
            get
            {
                return this.TableNameMultiKeywordField;
            }
            set
            {
                this.TableNameMultiKeywordField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSKeyword", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSKeyword : object
    {

        private int IDField;

        private bool IsDeactivatedField;

        private string NameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeactivated
        {
            get
            {
                return this.IsDeactivatedField;
            }
            set
            {
                this.IsDeactivatedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentParams : object
    {

        private int DocNoField;

        private bool IsCheckOutStatusNeededField;

        private bool IsIndexDataValuesNeededField;

        private bool IsStreamsInfoAndDataNeededField;

        private bool IsStreamsInfoNeededField;

        private int VersionNoField;

        private bool IsAccessMaskNeededField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCheckOutStatusNeeded
        {
            get
            {
                return this.IsCheckOutStatusNeededField;
            }
            set
            {
                this.IsCheckOutStatusNeededField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIndexDataValuesNeeded
        {
            get
            {
                return this.IsIndexDataValuesNeededField;
            }
            set
            {
                this.IsIndexDataValuesNeededField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsStreamsInfoAndDataNeeded
        {
            get
            {
                return this.IsStreamsInfoAndDataNeededField;
            }
            set
            {
                this.IsStreamsInfoAndDataNeededField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsStreamsInfoNeeded
        {
            get
            {
                return this.IsStreamsInfoNeededField;
            }
            set
            {
                this.IsStreamsInfoNeededField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public bool IsAccessMaskNeeded
        {
            get
            {
                return this.IsAccessMaskNeededField;
            }
            set
            {
                this.IsAccessMaskNeededField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentResponse : object
    {

        private Therefore.WebAPI.WSCheckOutStatus CheckOutStatusField;

        private int DocNoField;

        private Therefore.WebAPI.WSIndexDataToGet IndexDataField;

        private Therefore.WebAPI.WSStreamInfo[] StreamsInfoField;

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCheckOutStatus CheckOutStatus
        {
            get
            {
                return this.CheckOutStatusField;
            }
            set
            {
                this.CheckOutStatusField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataToGet IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSStreamInfo[] StreamsInfo
        {
            get
            {
                return this.StreamsInfoField;
            }
            set
            {
                this.StreamsInfoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCheckOutStatus", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCheckOutStatus : object
    {

        private Therefore.WebAPI.WSCheckOutState CheckOutStateField;

        private string SomebodyElseNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCheckOutState CheckOutState
        {
            get
            {
                return this.CheckOutStateField;
            }
            set
            {
                this.CheckOutStateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SomebodyElseName
        {
            get
            {
                return this.SomebodyElseNameField;
            }
            set
            {
                this.SomebodyElseNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSStreamInfo", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSStreamInfo : object
    {

        private int AnnotationPageField;

        private string FileNameField;

        private byte[] StreamDataField;

        private int StreamNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnnotationPage
        {
            get
            {
                return this.AnnotationPageField;
            }
            set
            {
                this.AnnotationPageField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] StreamData
        {
            get
            {
                return this.StreamDataField;
            }
            set
            {
                this.StreamDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StreamNo
        {
            get
            {
                return this.StreamNoField;
            }
            set
            {
                this.StreamNoField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSCheckOutState", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCheckOutState : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotCheckedOut = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckedOutByCurrentUser = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckedOutBySomebodyElse = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentCheckoutStateParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentCheckoutStateParams : object
    {

        private int DocNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentCheckoutStateResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentCheckoutStateResponse : object
    {

        private Therefore.WebAPI.WSCheckOutStatus CheckOutStatusField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCheckOutStatus CheckOutStatus
        {
            get
            {
                return this.CheckOutStatusField;
            }
            set
            {
                this.CheckOutStatusField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentIndexDataParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentIndexDataParams : object
    {

        private int DocNoField;

        private bool IsAccessMaskNeededField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccessMaskNeeded
        {
            get
            {
                return this.IsAccessMaskNeededField;
            }
            set
            {
                this.IsAccessMaskNeededField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentIndexDataResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentIndexDataResponse : object
    {

        private int DocNoField;

        private Therefore.WebAPI.WSIndexDataToGet IndexDataField;

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataToGet IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentPropertiesParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentPropertiesParams : object
    {

        private int DocNoField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentPropertiesResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentPropertiesResponse : object
    {

        private Therefore.WebAPI.WSDocumentProperties DocumentPropertiesField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSDocumentProperties DocumentProperties
        {
            get
            {
                return this.DocumentPropertiesField;
            }
            set
            {
                this.DocumentPropertiesField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSDocumentProperties", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSDocumentProperties : object
    {

        private string CheckedOutByField;

        private System.DateTime CheckedOutOnField;

        private string CreatedByField;

        private System.DateTime CreatedOnField;

        private int DocNoField;

        private long DocSizeField;

        private string ExtensionField;

        private int FileCountField;

        private bool HasOldVersionField;

        private System.DateTime LastModifiedField;

        private string ModifiedByField;

        private int VersionNoField;

        private string CheckedOutByDisplayNameField;

        private int CheckedOutByUserNoField;

        private string CreatedByDisplayNameField;

        private int CreatedByUserNoField;

        private string ModifiedByDisplayNameField;

        private int ModifiedByUserNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckedOutBy
        {
            get
            {
                return this.CheckedOutByField;
            }
            set
            {
                this.CheckedOutByField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CheckedOutOn
        {
            get
            {
                return this.CheckedOutOnField;
            }
            set
            {
                this.CheckedOutOnField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy
        {
            get
            {
                return this.CreatedByField;
            }
            set
            {
                this.CreatedByField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn
        {
            get
            {
                return this.CreatedOnField;
            }
            set
            {
                this.CreatedOnField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DocSize
        {
            get
            {
                return this.DocSizeField;
            }
            set
            {
                this.DocSizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension
        {
            get
            {
                return this.ExtensionField;
            }
            set
            {
                this.ExtensionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileCount
        {
            get
            {
                return this.FileCountField;
            }
            set
            {
                this.FileCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasOldVersion
        {
            get
            {
                return this.HasOldVersionField;
            }
            set
            {
                this.HasOldVersionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified
        {
            get
            {
                return this.LastModifiedField;
            }
            set
            {
                this.LastModifiedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy
        {
            get
            {
                return this.ModifiedByField;
            }
            set
            {
                this.ModifiedByField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 12)]
        public string CheckedOutByDisplayName
        {
            get
            {
                return this.CheckedOutByDisplayNameField;
            }
            set
            {
                this.CheckedOutByDisplayNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 13)]
        public int CheckedOutByUserNo
        {
            get
            {
                return this.CheckedOutByUserNoField;
            }
            set
            {
                this.CheckedOutByUserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 14)]
        public string CreatedByDisplayName
        {
            get
            {
                return this.CreatedByDisplayNameField;
            }
            set
            {
                this.CreatedByDisplayNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 15)]
        public int CreatedByUserNo
        {
            get
            {
                return this.CreatedByUserNoField;
            }
            set
            {
                this.CreatedByUserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 16)]
        public string ModifiedByDisplayName
        {
            get
            {
                return this.ModifiedByDisplayNameField;
            }
            set
            {
                this.ModifiedByDisplayNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 17)]
        public int ModifiedByUserNo
        {
            get
            {
                return this.ModifiedByUserNoField;
            }
            set
            {
                this.ModifiedByUserNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentHistoryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentHistoryParams : object
    {

        private int DocNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentHistoryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentHistoryResponse : object
    {

        private Therefore.WebAPI.WSDocumentHistoryEntry[] DocumentHistoryField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSDocumentHistoryEntry[] DocumentHistory
        {
            get
            {
                return this.DocumentHistoryField;
            }
            set
            {
                this.DocumentHistoryField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSDocumentHistoryEntry", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSDocumentHistoryEntry : object
    {

        private string CommentField;

        private System.DateTime CreatedOnField;

        private string UserNameField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                this.CommentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn
        {
            get
            {
                return this.CreatedOnField;
            }
            set
            {
                this.CreatedOnField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentStreamParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentStreamParams : object
    {

        private int DocNoField;

        private int StreamNoField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int StreamNo
        {
            get
            {
                return this.StreamNoField;
            }
            set
            {
                this.StreamNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentStreamResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentStreamResponse : object
    {

        private byte[] FileDataField;

        private string FileNameField;

        private int StreamNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData
        {
            get
            {
                return this.FileDataField;
            }
            set
            {
                this.FileDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StreamNo
        {
            get
            {
                return this.StreamNoField;
            }
            set
            {
                this.StreamNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentStreamRawParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentStreamRawParams : object
    {

        private int DocNoField;

        private int StreamNoField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int StreamNo
        {
            get
            {
                return this.StreamNoField;
            }
            set
            {
                this.StreamNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDomainInfoParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDomainInfoParams : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDomainInfoResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDomainInfoResponse : object
    {

        private string DefaultDomainField;

        private Therefore.WebAPI.DomainNameList DomainNamesField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultDomain
        {
            get
            {
                return this.DefaultDomainField;
            }
            set
            {
                this.DefaultDomainField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.DomainNameList DomainNames
        {
            get
            {
                return this.DomainNamesField;
            }
            set
            {
                this.DomainNamesField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetKeywordsByFieldNoParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetKeywordsByFieldNoParams : object
    {

        private int CategoryNoField;

        private string DependentFieldFilterValueField;

        private int FieldNoField;

        private bool ShowDeactivatedKeywordsField;

        private int CaseDefinitionNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DependentFieldFilterValue
        {
            get
            {
                return this.DependentFieldFilterValueField;
            }
            set
            {
                this.DependentFieldFilterValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FieldNo
        {
            get
            {
                return this.FieldNoField;
            }
            set
            {
                this.FieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowDeactivatedKeywords
        {
            get
            {
                return this.ShowDeactivatedKeywordsField;
            }
            set
            {
                this.ShowDeactivatedKeywordsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public int CaseDefinitionNo
        {
            get
            {
                return this.CaseDefinitionNoField;
            }
            set
            {
                this.CaseDefinitionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetKeywordsByFieldNoResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetKeywordsByFieldNoResponse : object
    {

        private Therefore.WebAPI.KeywordList KeywordsField;

        private Therefore.WebAPI.KeywordNoList KeywordNosField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.KeywordList Keywords
        {
            get
            {
                return this.KeywordsField;
            }
            set
            {
                this.KeywordsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public Therefore.WebAPI.KeywordNoList KeywordNos
        {
            get
            {
                return this.KeywordNosField;
            }
            set
            {
                this.KeywordNosField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetLinkedObjectsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetLinkedObjectsParams : object
    {

        private int ObjectIdField;

        private Therefore.WebAPI.WSGetLinkedObjectType ObjectTypeField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ObjectId
        {
            get
            {
                return this.ObjectIdField;
            }
            set
            {
                this.ObjectIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSGetLinkedObjectType ObjectType
        {
            get
            {
                return this.ObjectTypeField;
            }
            set
            {
                this.ObjectTypeField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSGetLinkedObjectType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSGetLinkedObjectType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Document = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowInstance = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Task = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Case = 8,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetLinkedObjectsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetLinkedObjectsResponse : object
    {

        private Therefore.WebAPI.WSLinkedObjectInfo[] LinkedObjectsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSLinkedObjectInfo[] LinkedObjects
        {
            get
            {
                return this.LinkedObjectsField;
            }
            set
            {
                this.LinkedObjectsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSLinkedObjectInfo", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSLinkedObjectInfo : object
    {

        private int LinkedObjectIdField;

        private Therefore.WebAPI.WSLinkedObjectType LinkedObjectTypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkedObjectId
        {
            get
            {
                return this.LinkedObjectIdField;
            }
            set
            {
                this.LinkedObjectIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSLinkedObjectType LinkedObjectType
        {
            get
            {
                return this.LinkedObjectTypeField;
            }
            set
            {
                this.LinkedObjectTypeField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSLinkedObjectType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSLinkedObjectType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutomaticDocumentLink = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualDocumentLink = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentLink = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowLink = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaskLink = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseLink = 16,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllLinks = 65535,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetLinkedWorkflowsForDocParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetLinkedWorkflowsForDocParams : object
    {

        private int DocNoField;

        private Therefore.WebAPI.WSWFDocLinkType WFDocLinkTypeField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSWFDocLinkType WFDocLinkType
        {
            get
            {
                return this.WFDocLinkTypeField;
            }
            set
            {
                this.WFDocLinkTypeField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFDocLinkType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSWFDocLinkType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Any = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainDocument = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdditionalDocument = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetLinkedWorkflowsForDocResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetLinkedWorkflowsForDocResponse : object
    {

        private Therefore.WebAPI.WSWFInstanceInfo[] InfoListsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFInstanceInfo[] InfoLists
        {
            get
            {
                return this.InfoListsField;
            }
            set
            {
                this.InfoListsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFInstanceInfo", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFInstanceInfo : object
    {

        private string AssignedToField;

        private bool ClaimedField;

        private string CurrTaskNameField;

        private int CurrTaskNoField;

        private int InitiatorNoField;

        private int InstanceNoField;

        private Therefore.WebAPI.WSWFDocLinkType LinkTypeField;

        private System.Nullable<System.DateTime> ProcessDueDateField;

        private string ProcessNameField;

        private int ProcessNoField;

        private System.Nullable<System.DateTime> ProcessStartDateField;

        private System.Nullable<System.DateTime> TaskDueDateField;

        private System.Nullable<System.DateTime> TaskStartDateField;

        private int TokenNoField;

        private int VersionNoField;

        private string ErrorInfoField;

        private string ErrorStringField;

        private System.Nullable<System.DateTime> ErrorTimestampField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedTo
        {
            get
            {
                return this.AssignedToField;
            }
            set
            {
                this.AssignedToField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Claimed
        {
            get
            {
                return this.ClaimedField;
            }
            set
            {
                this.ClaimedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrTaskName
        {
            get
            {
                return this.CurrTaskNameField;
            }
            set
            {
                this.CurrTaskNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrTaskNo
        {
            get
            {
                return this.CurrTaskNoField;
            }
            set
            {
                this.CurrTaskNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InitiatorNo
        {
            get
            {
                return this.InitiatorNoField;
            }
            set
            {
                this.InitiatorNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFDocLinkType LinkType
        {
            get
            {
                return this.LinkTypeField;
            }
            set
            {
                this.LinkTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessDueDate
        {
            get
            {
                return this.ProcessDueDateField;
            }
            set
            {
                this.ProcessDueDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName
        {
            get
            {
                return this.ProcessNameField;
            }
            set
            {
                this.ProcessNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessNo
        {
            get
            {
                return this.ProcessNoField;
            }
            set
            {
                this.ProcessNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessStartDate
        {
            get
            {
                return this.ProcessStartDateField;
            }
            set
            {
                this.ProcessStartDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaskDueDate
        {
            get
            {
                return this.TaskDueDateField;
            }
            set
            {
                this.TaskDueDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaskStartDate
        {
            get
            {
                return this.TaskStartDateField;
            }
            set
            {
                this.TaskStartDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 15)]
        public string ErrorInfo
        {
            get
            {
                return this.ErrorInfoField;
            }
            set
            {
                this.ErrorInfoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 16)]
        public string ErrorString
        {
            get
            {
                return this.ErrorStringField;
            }
            set
            {
                this.ErrorStringField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 17)]
        public System.Nullable<System.DateTime> ErrorTimestamp
        {
            get
            {
                return this.ErrorTimestampField;
            }
            set
            {
                this.ErrorTimestampField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetNextFullTextQueryRowsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextFullTextQueryRowsParams : object
    {

        private int QueryIDField;

        private System.Nullable<int> RowBlockSizeField;

        private System.Nullable<bool> IncludeIndexDataField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int QueryID
        {
            get
            {
                return this.QueryIDField;
            }
            set
            {
                this.QueryIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RowBlockSize
        {
            get
            {
                return this.RowBlockSizeField;
            }
            set
            {
                this.RowBlockSizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<bool> IncludeIndexData
        {
            get
            {
                return this.IncludeIndexDataField;
            }
            set
            {
                this.IncludeIndexDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetNextFullTextQueryRowsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextFullTextQueryRowsResponse : object
    {

        private bool HasRemainingRowsField;

        private Therefore.WebAPI.WSFullTextQueryResultRow[] ResultsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasRemainingRows
        {
            get
            {
                return this.HasRemainingRowsField;
            }
            set
            {
                this.HasRemainingRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSFullTextQueryResultRow[] Results
        {
            get
            {
                return this.ResultsField;
            }
            set
            {
                this.ResultsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetNextMultiQueryRowsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextMultiQueryRowsParams : object
    {

        private int QueryIDField;

        private System.Nullable<int> RowBlockSizeField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int QueryID
        {
            get
            {
                return this.QueryIDField;
            }
            set
            {
                this.QueryIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RowBlockSize
        {
            get
            {
                return this.RowBlockSizeField;
            }
            set
            {
                this.RowBlockSizeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetNextMultiQueryRowsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextMultiQueryRowsResponse : object
    {

        private bool HasRemainingRowsField;

        private Therefore.WebAPI.WSQueryResult[] QueryResultsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasRemainingRows
        {
            get
            {
                return this.HasRemainingRowsField;
            }
            set
            {
                this.HasRemainingRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSQueryResult[] QueryResults
        {
            get
            {
                return this.QueryResultsField;
            }
            set
            {
                this.QueryResultsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetNextSingleQueryRowsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextSingleQueryRowsParams : object
    {

        private int QueryIDField;

        private System.Nullable<int> RowBlockSizeField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int QueryID
        {
            get
            {
                return this.QueryIDField;
            }
            set
            {
                this.QueryIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RowBlockSize
        {
            get
            {
                return this.RowBlockSizeField;
            }
            set
            {
                this.RowBlockSizeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetNextSingleQueryRowsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextSingleQueryRowsResponse : object
    {

        private bool HasRemainingRowsField;

        private Therefore.WebAPI.WSQueryResult QueryResultField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasRemainingRows
        {
            get
            {
                return this.HasRemainingRowsField;
            }
            set
            {
                this.HasRemainingRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSQueryResult QueryResult
        {
            get
            {
                return this.QueryResultField;
            }
            set
            {
                this.QueryResultField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetObjectRightsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetObjectRightsParams : object
    {

        private int ObjectNoField;

        private Therefore.WebAPI.WSObjectType ObjectTypeField;

        private int SubObjNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ObjectNo
        {
            get
            {
                return this.ObjectNoField;
            }
            set
            {
                this.ObjectNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSObjectType ObjectType
        {
            get
            {
                return this.ObjectTypeField;
            }
            set
            {
                this.ObjectTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubObjNo
        {
            get
            {
                return this.SubObjNoField;
            }
            set
            {
                this.SubObjNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetObjectRightsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetObjectRightsResponse : object
    {

        private Therefore.WebAPI.WSAccessMask AccessMaskField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSAccessMask AccessMask
        {
            get
            {
                return this.AccessMaskField;
            }
            set
            {
                this.AccessMaskField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetPermissionsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetPermissionsParams : object
    {

        private int ObjectNoField;

        private Therefore.WebAPI.WSObjectType ObjectTypeField;

        private int SubObjNoField;

        private string UserNameField;

        private Therefore.WebAPI.WSUserQueryFlags UserTypeField;

        private Therefore.WebAPI.DomainNameList DomainsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ObjectNo
        {
            get
            {
                return this.ObjectNoField;
            }
            set
            {
                this.ObjectNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSObjectType ObjectType
        {
            get
            {
                return this.ObjectTypeField;
            }
            set
            {
                this.ObjectTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubObjNo
        {
            get
            {
                return this.SubObjNoField;
            }
            set
            {
                this.SubObjNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSUserQueryFlags UserType
        {
            get
            {
                return this.UserTypeField;
            }
            set
            {
                this.UserTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public Therefore.WebAPI.DomainNameList Domains
        {
            get
            {
                return this.DomainsField;
            }
            set
            {
                this.DomainsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetPermissionsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetPermissionsResponse : object
    {

        private Therefore.WebAPI.WSPermission[] PermissionsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSPermission[] Permissions
        {
            get
            {
                return this.PermissionsField;
            }
            set
            {
                this.PermissionsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSPermission", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSPermission : object
    {

        private bool AllowedField;

        private bool DeniedField;

        private bool InheritAllowedField;

        private bool InheritDeniedField;

        private string NameField;

        private ulong ValueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Allowed
        {
            get
            {
                return this.AllowedField;
            }
            set
            {
                this.AllowedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Denied
        {
            get
            {
                return this.DeniedField;
            }
            set
            {
                this.DeniedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InheritAllowed
        {
            get
            {
                return this.InheritAllowedField;
            }
            set
            {
                this.InheritAllowedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InheritDenied
        {
            get
            {
                return this.InheritDeniedField;
            }
            set
            {
                this.InheritDeniedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetObjectsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetObjectsParams : object
    {

        private Therefore.WebAPI.WSGetObjectFlags FlagsField;

        private Therefore.WebAPI.WSPermissionType PermTypeField;

        private Therefore.WebAPI.WSObjectType TypeField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSGetObjectFlags Flags
        {
            get
            {
                return this.FlagsField;
            }
            set
            {
                this.FlagsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSPermissionType PermType
        {
            get
            {
                return this.PermTypeField;
            }
            set
            {
                this.PermTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSObjectType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSGetObjectFlags", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSGetObjectFlags : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetNoFolders = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetAllFolders = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetObjectsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetObjectsResponse : object
    {

        private Therefore.WebAPI.WSFolder[] FolderListField;

        private Therefore.WebAPI.WSFolderItem[] ItemListField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSFolder[] FolderList
        {
            get
            {
                return this.FolderListField;
            }
            set
            {
                this.FolderListField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSFolderItem[] ItemList
        {
            get
            {
                return this.ItemListField;
            }
            set
            {
                this.ItemListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSFolderItem", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFolderItem : object
    {

        private int DataField;

        private int FlagsField;

        private int FolderNoField;

        private System.Guid GuidField;

        private int IDField;

        private string NameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Data
        {
            get
            {
                return this.DataField;
            }
            set
            {
                this.DataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Flags
        {
            get
            {
                return this.FlagsField;
            }
            set
            {
                this.FlagsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetPermissionConstantsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetPermissionConstantsParams : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetPermissionConstantsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetPermissionConstantsResponse : object
    {

        private Therefore.WebAPI.WSPermissionConstants PermissionConstantsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSPermissionConstants PermissionConstants
        {
            get
            {
                return this.PermissionConstantsField;
            }
            set
            {
                this.PermissionConstantsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSPermissionConstants", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSPermissionConstants : object
    {

        private ulong AccessField;

        private ulong AdministratorField;

        private ulong CaseCloseField;

        private ulong CaseCreateField;

        private ulong CaseDeleteField;

        private ulong CaseReopenField;

        private ulong CategoryAccessArchiveField;

        private ulong CategoryArchiveField;

        private ulong CategoryFieldChangeField;

        private ulong CategoryFieldReadField;

        private ulong CategoryFieldSetField;

        private ulong DocumentAddAnnotationField;

        private ulong DocumentAddPageField;

        private ulong DocumentCreateTaskField;

        private ulong DocumentDeleteField;

        private ulong DocumentDeleteAnnotationField;

        private ulong DocumentDeletePageField;

        private ulong DocumentEditField;

        private ulong DocumentExportField;

        private ulong DocumentManageLinkField;

        private ulong DocumentPrintField;

        private ulong DocumentProtectField;

        private ulong DocumentUpdateIndexDataField;

        private ulong DocumentViewDocumentField;

        private ulong DocumentViewHistoryField;

        private ulong DocumentViewInHitListField;

        private ulong KeywordDictionaryChangeField;

        private ulong OperatorField;

        private ulong QueryAdministratorField;

        private ulong QueryCategoryTabsField;

        private ulong QueryExecuteField;

        private ulong QueryTemplatesReadField;

        private ulong ReadPermissionsField;

        private ulong SetPermissionsField;

        private ulong SystemConnectField;

        private ulong SystemWriteField;

        private ulong WorkflowAddDocumentField;

        private ulong WorkflowDelegateField;

        private ulong WorkflowDeleteField;

        private ulong WorkflowParticipateField;

        private ulong WorkflowStartManuallyField;

        private ulong WorkflowViewAllField;

        private ulong WorkflowViewHistoryField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Access
        {
            get
            {
                return this.AccessField;
            }
            set
            {
                this.AccessField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Administrator
        {
            get
            {
                return this.AdministratorField;
            }
            set
            {
                this.AdministratorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CaseClose
        {
            get
            {
                return this.CaseCloseField;
            }
            set
            {
                this.CaseCloseField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CaseCreate
        {
            get
            {
                return this.CaseCreateField;
            }
            set
            {
                this.CaseCreateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CaseDelete
        {
            get
            {
                return this.CaseDeleteField;
            }
            set
            {
                this.CaseDeleteField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CaseReopen
        {
            get
            {
                return this.CaseReopenField;
            }
            set
            {
                this.CaseReopenField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CategoryAccessArchive
        {
            get
            {
                return this.CategoryAccessArchiveField;
            }
            set
            {
                this.CategoryAccessArchiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CategoryArchive
        {
            get
            {
                return this.CategoryArchiveField;
            }
            set
            {
                this.CategoryArchiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CategoryFieldChange
        {
            get
            {
                return this.CategoryFieldChangeField;
            }
            set
            {
                this.CategoryFieldChangeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CategoryFieldRead
        {
            get
            {
                return this.CategoryFieldReadField;
            }
            set
            {
                this.CategoryFieldReadField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CategoryFieldSet
        {
            get
            {
                return this.CategoryFieldSetField;
            }
            set
            {
                this.CategoryFieldSetField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentAddAnnotation
        {
            get
            {
                return this.DocumentAddAnnotationField;
            }
            set
            {
                this.DocumentAddAnnotationField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentAddPage
        {
            get
            {
                return this.DocumentAddPageField;
            }
            set
            {
                this.DocumentAddPageField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentCreateTask
        {
            get
            {
                return this.DocumentCreateTaskField;
            }
            set
            {
                this.DocumentCreateTaskField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentDelete
        {
            get
            {
                return this.DocumentDeleteField;
            }
            set
            {
                this.DocumentDeleteField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentDeleteAnnotation
        {
            get
            {
                return this.DocumentDeleteAnnotationField;
            }
            set
            {
                this.DocumentDeleteAnnotationField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentDeletePage
        {
            get
            {
                return this.DocumentDeletePageField;
            }
            set
            {
                this.DocumentDeletePageField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentEdit
        {
            get
            {
                return this.DocumentEditField;
            }
            set
            {
                this.DocumentEditField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentExport
        {
            get
            {
                return this.DocumentExportField;
            }
            set
            {
                this.DocumentExportField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentManageLink
        {
            get
            {
                return this.DocumentManageLinkField;
            }
            set
            {
                this.DocumentManageLinkField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentPrint
        {
            get
            {
                return this.DocumentPrintField;
            }
            set
            {
                this.DocumentPrintField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentProtect
        {
            get
            {
                return this.DocumentProtectField;
            }
            set
            {
                this.DocumentProtectField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentUpdateIndexData
        {
            get
            {
                return this.DocumentUpdateIndexDataField;
            }
            set
            {
                this.DocumentUpdateIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentViewDocument
        {
            get
            {
                return this.DocumentViewDocumentField;
            }
            set
            {
                this.DocumentViewDocumentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentViewHistory
        {
            get
            {
                return this.DocumentViewHistoryField;
            }
            set
            {
                this.DocumentViewHistoryField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentViewInHitList
        {
            get
            {
                return this.DocumentViewInHitListField;
            }
            set
            {
                this.DocumentViewInHitListField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong KeywordDictionaryChange
        {
            get
            {
                return this.KeywordDictionaryChangeField;
            }
            set
            {
                this.KeywordDictionaryChangeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Operator
        {
            get
            {
                return this.OperatorField;
            }
            set
            {
                this.OperatorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong QueryAdministrator
        {
            get
            {
                return this.QueryAdministratorField;
            }
            set
            {
                this.QueryAdministratorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong QueryCategoryTabs
        {
            get
            {
                return this.QueryCategoryTabsField;
            }
            set
            {
                this.QueryCategoryTabsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong QueryExecute
        {
            get
            {
                return this.QueryExecuteField;
            }
            set
            {
                this.QueryExecuteField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong QueryTemplatesRead
        {
            get
            {
                return this.QueryTemplatesReadField;
            }
            set
            {
                this.QueryTemplatesReadField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ReadPermissions
        {
            get
            {
                return this.ReadPermissionsField;
            }
            set
            {
                this.ReadPermissionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong SetPermissions
        {
            get
            {
                return this.SetPermissionsField;
            }
            set
            {
                this.SetPermissionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong SystemConnect
        {
            get
            {
                return this.SystemConnectField;
            }
            set
            {
                this.SystemConnectField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong SystemWrite
        {
            get
            {
                return this.SystemWriteField;
            }
            set
            {
                this.SystemWriteField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong WorkflowAddDocument
        {
            get
            {
                return this.WorkflowAddDocumentField;
            }
            set
            {
                this.WorkflowAddDocumentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong WorkflowDelegate
        {
            get
            {
                return this.WorkflowDelegateField;
            }
            set
            {
                this.WorkflowDelegateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong WorkflowDelete
        {
            get
            {
                return this.WorkflowDeleteField;
            }
            set
            {
                this.WorkflowDeleteField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong WorkflowParticipate
        {
            get
            {
                return this.WorkflowParticipateField;
            }
            set
            {
                this.WorkflowParticipateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong WorkflowStartManually
        {
            get
            {
                return this.WorkflowStartManuallyField;
            }
            set
            {
                this.WorkflowStartManuallyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong WorkflowViewAll
        {
            get
            {
                return this.WorkflowViewAllField;
            }
            set
            {
                this.WorkflowViewAllField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong WorkflowViewHistory
        {
            get
            {
                return this.WorkflowViewHistoryField;
            }
            set
            {
                this.WorkflowViewHistoryField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "QuerySpecificationParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class QuerySpecificationParams : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "QuerySpecificationResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class QuerySpecificationResponse : object
    {

        private string DateFormatField;

        private string NumberDecimalSeparatorField;

        private Therefore.WebAPI.ValidOperandMacrosList ValidOperandMacrosField;

        private Therefore.WebAPI.WSValidOperators ValidQueryOperatorsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateFormat
        {
            get
            {
                return this.DateFormatField;
            }
            set
            {
                this.DateFormatField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberDecimalSeparator
        {
            get
            {
                return this.NumberDecimalSeparatorField;
            }
            set
            {
                this.NumberDecimalSeparatorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.ValidOperandMacrosList ValidOperandMacros
        {
            get
            {
                return this.ValidOperandMacrosField;
            }
            set
            {
                this.ValidOperandMacrosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSValidOperators ValidQueryOperators
        {
            get
            {
                return this.ValidQueryOperatorsField;
            }
            set
            {
                this.ValidQueryOperatorsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSValidOperators", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSValidOperators : object
    {

        private string AndField;

        private string EmptyField;

        private string GreaterThanField;

        private string GreaterThanOrEqualField;

        private string LessThanField;

        private string LessThanOrEqualField;

        private string NotField;

        private string NotEmptyField;

        private string OrField;

        private string ToField;

        private string WildcardField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string And
        {
            get
            {
                return this.AndField;
            }
            set
            {
                this.AndField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Empty
        {
            get
            {
                return this.EmptyField;
            }
            set
            {
                this.EmptyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GreaterThan
        {
            get
            {
                return this.GreaterThanField;
            }
            set
            {
                this.GreaterThanField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GreaterThanOrEqual
        {
            get
            {
                return this.GreaterThanOrEqualField;
            }
            set
            {
                this.GreaterThanOrEqualField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LessThan
        {
            get
            {
                return this.LessThanField;
            }
            set
            {
                this.LessThanField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LessThanOrEqual
        {
            get
            {
                return this.LessThanOrEqualField;
            }
            set
            {
                this.LessThanOrEqualField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Not
        {
            get
            {
                return this.NotField;
            }
            set
            {
                this.NotField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotEmpty
        {
            get
            {
                return this.NotEmptyField;
            }
            set
            {
                this.NotEmptyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Or
        {
            get
            {
                return this.OrField;
            }
            set
            {
                this.OrField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string To
        {
            get
            {
                return this.ToField;
            }
            set
            {
                this.ToField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Wildcard
        {
            get
            {
                return this.WildcardField;
            }
            set
            {
                this.WildcardField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "ValidOperandMacrosList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "ValidOperandMacros")]
    public class ValidOperandMacrosList : System.Collections.Generic.List<string>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetReportDefinitionParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetReportDefinitionParams : object
    {

        private int ReportDefNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportDefNo
        {
            get
            {
                return this.ReportDefNoField;
            }
            set
            {
                this.ReportDefNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetReportDefinitionResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetReportDefinitionResponse : object
    {

        private int CategoryNoField;

        private int FolderNoField;

        private bool HasChangeableParametersField;

        private bool HasParametersWithoutDefaultField;

        private string NameField;

        private int ReportDefNoField;

        private Therefore.WebAPI.WSReportParameterDefinition[] ReportParametersField;

        private Therefore.WebAPI.WSReportType ReportTypeField;

        private int WorkflowProcessNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasChangeableParameters
        {
            get
            {
                return this.HasChangeableParametersField;
            }
            set
            {
                this.HasChangeableParametersField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasParametersWithoutDefault
        {
            get
            {
                return this.HasParametersWithoutDefaultField;
            }
            set
            {
                this.HasParametersWithoutDefaultField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportDefNo
        {
            get
            {
                return this.ReportDefNoField;
            }
            set
            {
                this.ReportDefNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSReportParameterDefinition[] ReportParameters
        {
            get
            {
                return this.ReportParametersField;
            }
            set
            {
                this.ReportParametersField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSReportType ReportType
        {
            get
            {
                return this.ReportTypeField;
            }
            set
            {
                this.ReportTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowProcessNo
        {
            get
            {
                return this.WorkflowProcessNoField;
            }
            set
            {
                this.WorkflowProcessNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSReportParameterDefinition", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSReportParameterDefinition : object
    {

        private bool AllowBlankField;

        private string DefaultValueField;

        private bool IsHiddenField;

        private bool IsNullableField;

        private string LabelField;

        private string NameField;

        private Therefore.WebAPI.WSValidParamValue[] ValidParamValuesField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowBlank
        {
            get
            {
                return this.AllowBlankField;
            }
            set
            {
                this.AllowBlankField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultValue
        {
            get
            {
                return this.DefaultValueField;
            }
            set
            {
                this.DefaultValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHidden
        {
            get
            {
                return this.IsHiddenField;
            }
            set
            {
                this.IsHiddenField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.IsNullableField;
            }
            set
            {
                this.IsNullableField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label
        {
            get
            {
                return this.LabelField;
            }
            set
            {
                this.LabelField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSValidParamValue[] ValidParamValues
        {
            get
            {
                return this.ValidParamValuesField;
            }
            set
            {
                this.ValidParamValuesField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSReportType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSReportType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportTypeNoTemplate = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportTypeCategory = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportTypeWorkflow = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportTypeSystem = 3,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSValidParamValue", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSValidParamValue : object
    {

        private string LabelField;

        private string ValueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label
        {
            get
            {
                return this.LabelField;
            }
            set
            {
                this.LabelField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetSettingIntParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetSettingIntParams : object
    {

        private int SettingKeyField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int SettingKey
        {
            get
            {
                return this.SettingKeyField;
            }
            set
            {
                this.SettingKeyField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetSettingIntResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetSettingIntResponse : object
    {

        private int SettingValueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SettingValue
        {
            get
            {
                return this.SettingValueField;
            }
            set
            {
                this.SettingValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetSettingStringParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetSettingStringParams : object
    {

        private int SettingKeyField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int SettingKey
        {
            get
            {
                return this.SettingKeyField;
            }
            set
            {
                this.SettingKeyField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetSettingStringResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetSettingStringResponse : object
    {

        private string SettingValueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingValue
        {
            get
            {
                return this.SettingValueField;
            }
            set
            {
                this.SettingValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetPublicSettingIntParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetPublicSettingIntParams : object
    {

        private int SettingKeyField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int SettingKey
        {
            get
            {
                return this.SettingKeyField;
            }
            set
            {
                this.SettingKeyField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetPublicSettingIntResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetPublicSettingIntResponse : object
    {

        private int SettingValueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SettingValue
        {
            get
            {
                return this.SettingValueField;
            }
            set
            {
                this.SettingValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetPublicSettingStringParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetPublicSettingStringParams : object
    {

        private int SettingKeyField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int SettingKey
        {
            get
            {
                return this.SettingKeyField;
            }
            set
            {
                this.SettingKeyField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetPublicSettingStringResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetPublicSettingStringResponse : object
    {

        private string SettingValueField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingValue
        {
            get
            {
                return this.SettingValueField;
            }
            set
            {
                this.SettingValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTaskParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTaskParams : object
    {

        private int TaskNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTaskResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTaskResponse : object
    {

        private Therefore.WebAPI.WSTask TaskField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTask Task
        {
            get
            {
                return this.TaskField;
            }
            set
            {
                this.TaskField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTask", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTask : object
    {

        private Therefore.WebAPI.WSUser[] AssignToField;

        private int DocNoField;

        private System.Nullable<System.DateTime> DueDateField;

        private string InstructionsField;

        private Therefore.WebAPI.WSTaskMode ModeField;

        private bool NotifyOnAssignField;

        private bool NotifyOnUpdateField;

        private System.Nullable<System.DateTime> StartDateField;

        private string SubjectField;

        private System.Nullable<int> TaskNoField;

        private int UserNoField;

        private int CaseNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSUser[] AssignTo
        {
            get
            {
                return this.AssignToField;
            }
            set
            {
                this.AssignToField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this.DueDateField;
            }
            set
            {
                this.DueDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Instructions
        {
            get
            {
                return this.InstructionsField;
            }
            set
            {
                this.InstructionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSTaskMode Mode
        {
            get
            {
                return this.ModeField;
            }
            set
            {
                this.ModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyOnAssign
        {
            get
            {
                return this.NotifyOnAssignField;
            }
            set
            {
                this.NotifyOnAssignField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyOnUpdate
        {
            get
            {
                return this.NotifyOnUpdateField;
            }
            set
            {
                this.NotifyOnUpdateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this.StartDateField;
            }
            set
            {
                this.StartDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string Subject
        {
            get
            {
                return this.SubjectField;
            }
            set
            {
                this.SubjectField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserNo
        {
            get
            {
                return this.UserNoField;
            }
            set
            {
                this.UserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 11)]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTaskInfoParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTaskInfoParams : object
    {

        private int TaskNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTaskInfoResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTaskInfoResponse : object
    {

        private Therefore.WebAPI.WSTaskInfo TaskInfoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTaskInfo TaskInfo
        {
            get
            {
                return this.TaskInfoField;
            }
            set
            {
                this.TaskInfoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetThumbnailParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetThumbnailParams : object
    {

        private int DocNoField;

        private System.Nullable<int> SizeInPixelsField;

        private string RequestedThumbnailFormatField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SizeInPixels
        {
            get
            {
                return this.SizeInPixelsField;
            }
            set
            {
                this.SizeInPixelsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string RequestedThumbnailFormat
        {
            get
            {
                return this.RequestedThumbnailFormatField;
            }
            set
            {
                this.RequestedThumbnailFormatField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetThumbnailResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetThumbnailResponse : object
    {

        private bool ExistsField;

        private byte[] ThumbnailFileDataField;

        private string ThumbnailFileExtensionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Exists
        {
            get
            {
                return this.ExistsField;
            }
            set
            {
                this.ExistsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ThumbnailFileData
        {
            get
            {
                return this.ThumbnailFileDataField;
            }
            set
            {
                this.ThumbnailFileDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbnailFileExtension
        {
            get
            {
                return this.ThumbnailFileExtensionField;
            }
            set
            {
                this.ThumbnailFileExtensionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTreeViewChildNodesParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTreeViewChildNodesParams : object
    {

        private Therefore.WebAPI.PathList PathListField;

        private int ViewNoField;

        private System.Nullable<int> NumberOfNestedLevelsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.PathList PathList
        {
            get
            {
                return this.PathListField;
            }
            set
            {
                this.PathListField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ViewNo
        {
            get
            {
                return this.ViewNoField;
            }
            set
            {
                this.ViewNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<int> NumberOfNestedLevels
        {
            get
            {
                return this.NumberOfNestedLevelsField;
            }
            set
            {
                this.NumberOfNestedLevelsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "PathList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "Path")]
    public class PathList : System.Collections.Generic.List<string>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTreeViewChildNodesResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTreeViewChildNodesResponse : object
    {

        private Therefore.WebAPI.WSTreeViewLevelNode RootNodeForPathField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTreeViewLevelNode RootNodeForPath
        {
            get
            {
                return this.RootNodeForPathField;
            }
            set
            {
                this.RootNodeForPathField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSTreeViewLevelNode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTreeViewLevelNode : object
    {

        private Therefore.WebAPI.WSTreeViewLevelNode[] ChildNodesField;

        private string NodeValueField;

        private Therefore.WebAPI.WSDocInfo[] DocumentsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTreeViewLevelNode[] ChildNodes
        {
            get
            {
                return this.ChildNodesField;
            }
            set
            {
                this.ChildNodesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeValue
        {
            get
            {
                return this.NodeValueField;
            }
            set
            {
                this.NodeValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public Therefore.WebAPI.WSDocInfo[] Documents
        {
            get
            {
                return this.DocumentsField;
            }
            set
            {
                this.DocumentsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSDocInfo", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSDocInfo : object
    {

        private int CheckOutUserNoField;

        private System.DateTime CreationField;

        private ulong DocSizeField;

        private string ExtensionField;

        private Therefore.WebAPI.WSIndexDataToGet IndexDataField;

        private System.DateTime ModifiedField;

        private ulong PermissionsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CheckOutUserNo
        {
            get
            {
                return this.CheckOutUserNoField;
            }
            set
            {
                this.CheckOutUserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Creation
        {
            get
            {
                return this.CreationField;
            }
            set
            {
                this.CreationField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocSize
        {
            get
            {
                return this.DocSizeField;
            }
            set
            {
                this.DocSizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension
        {
            get
            {
                return this.ExtensionField;
            }
            set
            {
                this.ExtensionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataToGet IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified
        {
            get
            {
                return this.ModifiedField;
            }
            set
            {
                this.ModifiedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Permissions
        {
            get
            {
                return this.PermissionsField;
            }
            set
            {
                this.PermissionsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTreeViewNodeDocumentsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTreeViewNodeDocumentsParams : object
    {

        private bool IsIndexDataNeededField;

        private Therefore.WebAPI.PathList PathListField;

        private int ViewNoField;

        private bool IsAccessMaskNeededField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIndexDataNeeded
        {
            get
            {
                return this.IsIndexDataNeededField;
            }
            set
            {
                this.IsIndexDataNeededField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.PathList PathList
        {
            get
            {
                return this.PathListField;
            }
            set
            {
                this.PathListField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ViewNo
        {
            get
            {
                return this.ViewNoField;
            }
            set
            {
                this.ViewNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public bool IsAccessMaskNeeded
        {
            get
            {
                return this.IsAccessMaskNeededField;
            }
            set
            {
                this.IsAccessMaskNeededField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTreeViewNodeDocumentsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTreeViewNodeDocumentsResponse : object
    {

        private Therefore.WebAPI.WSDocInfo[] DocumentsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSDocInfo[] Documents
        {
            get
            {
                return this.DocumentsField;
            }
            set
            {
                this.DocumentsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTreeViewChildNodesAndDocumentsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTreeViewChildNodesAndDocumentsParams : object
    {

        private bool IsIndexDataValuesNeededField;

        private System.Nullable<int> NumberOfNestedLevelsField;

        private Therefore.WebAPI.PathList PathListField;

        private int ViewNoField;

        private bool IsAccessMaskNeededField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIndexDataValuesNeeded
        {
            get
            {
                return this.IsIndexDataValuesNeededField;
            }
            set
            {
                this.IsIndexDataValuesNeededField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfNestedLevels
        {
            get
            {
                return this.NumberOfNestedLevelsField;
            }
            set
            {
                this.NumberOfNestedLevelsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.PathList PathList
        {
            get
            {
                return this.PathListField;
            }
            set
            {
                this.PathListField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ViewNo
        {
            get
            {
                return this.ViewNoField;
            }
            set
            {
                this.ViewNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public bool IsAccessMaskNeeded
        {
            get
            {
                return this.IsAccessMaskNeededField;
            }
            set
            {
                this.IsAccessMaskNeededField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTreeViewChildNodesAndDocumentsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTreeViewChildNodesAndDocumentsResponse : object
    {

        private Therefore.WebAPI.WSTreeViewLevelNode RootNodeForPathField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSTreeViewLevelNode RootNodeForPath
        {
            get
            {
                return this.RootNodeForPathField;
            }
            set
            {
                this.RootNodeForPathField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetWebAPIServerVersionParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWebAPIServerVersionParams : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetWebAPIServerVersionResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWebAPIServerVersionResponse : object
    {

        private string VersionDescriptionField;

        private string VersionStringField;

        private string ServiceVersionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionDescription
        {
            get
            {
                return this.VersionDescriptionField;
            }
            set
            {
                this.VersionDescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionString
        {
            get
            {
                return this.VersionStringField;
            }
            set
            {
                this.VersionStringField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string ServiceVersion
        {
            get
            {
                return this.ServiceVersionField;
            }
            set
            {
                this.ServiceVersionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetWorkflowInstanceParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWorkflowInstanceParams : object
    {

        private int InstanceNoField;

        private int TokenNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetWorkflowInstanceResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWorkflowInstanceResponse : object
    {

        private Therefore.WebAPI.WSWFChecklistItem[] ChecklistItemsField;

        private Therefore.WebAPI.WSWFHistoryEntry[] HistoryEntriesField;

        private Therefore.WebAPI.WSWFDocument[] LinkedDocumentsField;

        private Therefore.WebAPI.WSWFTask[] NextTasksField;

        private Therefore.WebAPI.WSWFTransition[] TransitionsField;

        private Therefore.WebAPI.WSWFInstance WorkflowInstanceField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFChecklistItem[] ChecklistItems
        {
            get
            {
                return this.ChecklistItemsField;
            }
            set
            {
                this.ChecklistItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFHistoryEntry[] HistoryEntries
        {
            get
            {
                return this.HistoryEntriesField;
            }
            set
            {
                this.HistoryEntriesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFDocument[] LinkedDocuments
        {
            get
            {
                return this.LinkedDocumentsField;
            }
            set
            {
                this.LinkedDocumentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFTask[] NextTasks
        {
            get
            {
                return this.NextTasksField;
            }
            set
            {
                this.NextTasksField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFTransition[] Transitions
        {
            get
            {
                return this.TransitionsField;
            }
            set
            {
                this.TransitionsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFInstance WorkflowInstance
        {
            get
            {
                return this.WorkflowInstanceField;
            }
            set
            {
                this.WorkflowInstanceField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFInstance", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFInstance : object
    {

        private bool AskForPwdField;

        private string AssignedToField;

        private int ChecklistItemCountField;

        private bool ClaimedField;

        private string CurrTaskNameField;

        private int CurrTaskNoField;

        private int CurrTaskTypeField;

        private bool DelegationDisabledField;

        private int HistoryEntryCountField;

        private int InitiatorNoField;

        private int InstanceNoField;

        private bool IsAssignedToUserField;

        private bool IsChangeCtgryField;

        private bool IsProcessOwnerField;

        private int LinkedDocCountField;

        private int NextTaskCountField;

        private System.Nullable<System.DateTime> ProcessDueDateField;

        private string ProcessNameField;

        private int ProcessNoField;

        private System.Nullable<System.DateTime> ProcessStartDateField;

        private System.Nullable<System.DateTime> TaskDueDateField;

        private System.Nullable<System.DateTime> TaskStartDateField;

        private string TextField;

        private int TokenNoField;

        private int TransitionCountField;

        private bool UseChecklistField;

        private int VersionNoField;

        private string ErrorInfoField;

        private string ErrorStringField;

        private System.Nullable<System.DateTime> ErrorTimestampField;

        private Therefore.WebAPI.UserNoList AssignedToUsersField;

        private Therefore.WebAPI.UserNoList OriginallyAssignedToUsersField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskForPwd
        {
            get
            {
                return this.AskForPwdField;
            }
            set
            {
                this.AskForPwdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedTo
        {
            get
            {
                return this.AssignedToField;
            }
            set
            {
                this.AssignedToField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChecklistItemCount
        {
            get
            {
                return this.ChecklistItemCountField;
            }
            set
            {
                this.ChecklistItemCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Claimed
        {
            get
            {
                return this.ClaimedField;
            }
            set
            {
                this.ClaimedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrTaskName
        {
            get
            {
                return this.CurrTaskNameField;
            }
            set
            {
                this.CurrTaskNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrTaskNo
        {
            get
            {
                return this.CurrTaskNoField;
            }
            set
            {
                this.CurrTaskNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrTaskType
        {
            get
            {
                return this.CurrTaskTypeField;
            }
            set
            {
                this.CurrTaskTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DelegationDisabled
        {
            get
            {
                return this.DelegationDisabledField;
            }
            set
            {
                this.DelegationDisabledField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HistoryEntryCount
        {
            get
            {
                return this.HistoryEntryCountField;
            }
            set
            {
                this.HistoryEntryCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InitiatorNo
        {
            get
            {
                return this.InitiatorNoField;
            }
            set
            {
                this.InitiatorNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAssignedToUser
        {
            get
            {
                return this.IsAssignedToUserField;
            }
            set
            {
                this.IsAssignedToUserField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChangeCtgry
        {
            get
            {
                return this.IsChangeCtgryField;
            }
            set
            {
                this.IsChangeCtgryField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProcessOwner
        {
            get
            {
                return this.IsProcessOwnerField;
            }
            set
            {
                this.IsProcessOwnerField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkedDocCount
        {
            get
            {
                return this.LinkedDocCountField;
            }
            set
            {
                this.LinkedDocCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NextTaskCount
        {
            get
            {
                return this.NextTaskCountField;
            }
            set
            {
                this.NextTaskCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessDueDate
        {
            get
            {
                return this.ProcessDueDateField;
            }
            set
            {
                this.ProcessDueDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName
        {
            get
            {
                return this.ProcessNameField;
            }
            set
            {
                this.ProcessNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessNo
        {
            get
            {
                return this.ProcessNoField;
            }
            set
            {
                this.ProcessNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessStartDate
        {
            get
            {
                return this.ProcessStartDateField;
            }
            set
            {
                this.ProcessStartDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaskDueDate
        {
            get
            {
                return this.TaskDueDateField;
            }
            set
            {
                this.TaskDueDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaskStartDate
        {
            get
            {
                return this.TaskStartDateField;
            }
            set
            {
                this.TaskStartDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransitionCount
        {
            get
            {
                return this.TransitionCountField;
            }
            set
            {
                this.TransitionCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseChecklist
        {
            get
            {
                return this.UseChecklistField;
            }
            set
            {
                this.UseChecklistField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 27)]
        public string ErrorInfo
        {
            get
            {
                return this.ErrorInfoField;
            }
            set
            {
                this.ErrorInfoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 28)]
        public string ErrorString
        {
            get
            {
                return this.ErrorStringField;
            }
            set
            {
                this.ErrorStringField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 29)]
        public System.Nullable<System.DateTime> ErrorTimestamp
        {
            get
            {
                return this.ErrorTimestampField;
            }
            set
            {
                this.ErrorTimestampField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 30)]
        public Therefore.WebAPI.UserNoList AssignedToUsers
        {
            get
            {
                return this.AssignedToUsersField;
            }
            set
            {
                this.AssignedToUsersField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 31)]
        public Therefore.WebAPI.UserNoList OriginallyAssignedToUsers
        {
            get
            {
                return this.OriginallyAssignedToUsersField;
            }
            set
            {
                this.OriginallyAssignedToUsersField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFChecklistItem", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFChecklistItem : object
    {

        private bool CheckedField;

        private int SeqPosField;

        private int TaskNoField;

        private string TextField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Checked
        {
            get
            {
                return this.CheckedField;
            }
            set
            {
                this.CheckedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqPos
        {
            get
            {
                return this.SeqPosField;
            }
            set
            {
                this.SeqPosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFHistoryEntry", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFHistoryEntry : object
    {

        private System.Nullable<System.DateTime> ActionDateField;

        private int SeqPosField;

        private string TaskNameField;

        private int TaskNoField;

        private int TaskToNoField;

        private string TextField;

        private Therefore.WebAPI.WSWFHistoryEntryType TypeField;

        private string UserNameField;

        private int UserNoField;

        private int CustomEntryTypeNumberField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActionDate
        {
            get
            {
                return this.ActionDateField;
            }
            set
            {
                this.ActionDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqPos
        {
            get
            {
                return this.SeqPosField;
            }
            set
            {
                this.SeqPosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName
        {
            get
            {
                return this.TaskNameField;
            }
            set
            {
                this.TaskNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskToNo
        {
            get
            {
                return this.TaskToNoField;
            }
            set
            {
                this.TaskToNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFHistoryEntryType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserNo
        {
            get
            {
                return this.UserNoField;
            }
            set
            {
                this.UserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public int CustomEntryTypeNumber
        {
            get
            {
                return this.CustomEntryTypeNumberField;
            }
            set
            {
                this.CustomEntryTypeNumberField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFDocument", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFDocument : object
    {

        private int CaseDefNoField;

        private int CaseNoField;

        private int CategoryNoField;

        private int DocNoField;

        private int DocPosField;

        private string IndexDataStringField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseDefNo
        {
            get
            {
                return this.CaseDefNoField;
            }
            set
            {
                this.CaseDefNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocPos
        {
            get
            {
                return this.DocPosField;
            }
            set
            {
                this.DocPosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndexDataString
        {
            get
            {
                return this.IndexDataStringField;
            }
            set
            {
                this.IndexDataStringField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFTask", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFTask : object
    {

        private bool AllowMultiSelectionField;

        private bool AskForPwdField;

        private int AssignFromFieldNoField;

        private int ChoiceCountField;

        private Therefore.WebAPI.WSWFChoice[] ChoicesField;

        private int DurationField;

        private System.Guid GuidField;

        private bool IsDelegationDisabledField;

        private string NameField;

        private int ProcessNoField;

        private int SeqPosField;

        private Therefore.WebAPI.WSWFTaskType TypeField;

        private bool UseChecklistField;

        private bool UserChoiceField;

        private int VersionNoField;

        private int TaskNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowMultiSelection
        {
            get
            {
                return this.AllowMultiSelectionField;
            }
            set
            {
                this.AllowMultiSelectionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskForPwd
        {
            get
            {
                return this.AskForPwdField;
            }
            set
            {
                this.AskForPwdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignFromFieldNo
        {
            get
            {
                return this.AssignFromFieldNoField;
            }
            set
            {
                this.AssignFromFieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChoiceCount
        {
            get
            {
                return this.ChoiceCountField;
            }
            set
            {
                this.ChoiceCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFChoice[] Choices
        {
            get
            {
                return this.ChoicesField;
            }
            set
            {
                this.ChoicesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration
        {
            get
            {
                return this.DurationField;
            }
            set
            {
                this.DurationField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDelegationDisabled
        {
            get
            {
                return this.IsDelegationDisabledField;
            }
            set
            {
                this.IsDelegationDisabledField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessNo
        {
            get
            {
                return this.ProcessNoField;
            }
            set
            {
                this.ProcessNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqPos
        {
            get
            {
                return this.SeqPosField;
            }
            set
            {
                this.SeqPosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFTaskType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseChecklist
        {
            get
            {
                return this.UseChecklistField;
            }
            set
            {
                this.UseChecklistField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserChoice
        {
            get
            {
                return this.UserChoiceField;
            }
            set
            {
                this.UserChoiceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 15)]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFTransition", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFTransition : object
    {

        private string ActionTextField;

        private bool IsDefaultField;

        private bool IsHiddenField;

        private bool IsValidField;

        private bool RequestInfoField;

        private int SeqPosField;

        private int TaskFromNoField;

        private int TaskToNoField;

        private string DescriptionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionText
        {
            get
            {
                return this.ActionTextField;
            }
            set
            {
                this.ActionTextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault
        {
            get
            {
                return this.IsDefaultField;
            }
            set
            {
                this.IsDefaultField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHidden
        {
            get
            {
                return this.IsHiddenField;
            }
            set
            {
                this.IsHiddenField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid
        {
            get
            {
                return this.IsValidField;
            }
            set
            {
                this.IsValidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequestInfo
        {
            get
            {
                return this.RequestInfoField;
            }
            set
            {
                this.RequestInfoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqPos
        {
            get
            {
                return this.SeqPosField;
            }
            set
            {
                this.SeqPosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskFromNo
        {
            get
            {
                return this.TaskFromNoField;
            }
            set
            {
                this.TaskFromNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskToNo
        {
            get
            {
                return this.TaskToNoField;
            }
            set
            {
                this.TaskToNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 8)]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFHistoryEntryType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSWFHistoryEntryType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WFStartEntry = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WFFinishedEntry = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveEntry = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoutingEntry = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClaimEntry = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnclaimEntry = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReclaimEntry = 7,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DelegateEntry = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocLinkedEntry = 9,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocLinkRemovedEntry = 10,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverdueMailEntry = 11,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverdueRoutingEntry = 12,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReroutingEntry = 13,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomEntry = 99,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFChoice", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFChoice : object
    {

        private int TaskNoField;

        private string UserNameField;

        private int UserNoField;

        private int UserTypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserNo
        {
            get
            {
                return this.UserNoField;
            }
            set
            {
                this.UserNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType
        {
            get
            {
                return this.UserTypeField;
            }
            set
            {
                this.UserTypeField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFTaskType", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSWFTaskType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartTask = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndTask = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualTask = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutomaticTask = 4,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetWorkflowProcessParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWorkflowProcessParams : object
    {

        private int ProcessNoField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessNo
        {
            get
            {
                return this.ProcessNoField;
            }
            set
            {
                this.ProcessNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetWorkflowProcessResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWorkflowProcessResponse : object
    {

        private Therefore.WebAPI.WSWFProcess WorkflowProcessField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSWFProcess WorkflowProcess
        {
            get
            {
                return this.WorkflowProcessField;
            }
            set
            {
                this.WorkflowProcessField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSWFProcess", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFProcess : object
    {

        private bool ActivatedField;

        private bool AllowManualStartField;

        private int CaseDefinitionNoField;

        private int CategoryNoField;

        private int DaysToDeleteInstancesField;

        private string DelegateMailTextField;

        private string DescriptionField;

        private int DurationField;

        private bool EnabledField;

        private int FolderNoField;

        private System.Guid GuidField;

        private System.DateTime LastModifiedField;

        private string NameField;

        private string NotificationMailTextField;

        private string NotifyOnErrorField;

        private string OverdueMailTextField;

        private int ProcessNoField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Activated
        {
            get
            {
                return this.ActivatedField;
            }
            set
            {
                this.ActivatedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowManualStart
        {
            get
            {
                return this.AllowManualStartField;
            }
            set
            {
                this.AllowManualStartField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseDefinitionNo
        {
            get
            {
                return this.CaseDefinitionNoField;
            }
            set
            {
                this.CaseDefinitionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DaysToDeleteInstances
        {
            get
            {
                return this.DaysToDeleteInstancesField;
            }
            set
            {
                this.DaysToDeleteInstancesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DelegateMailText
        {
            get
            {
                return this.DelegateMailTextField;
            }
            set
            {
                this.DelegateMailTextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration
        {
            get
            {
                return this.DurationField;
            }
            set
            {
                this.DurationField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled
        {
            get
            {
                return this.EnabledField;
            }
            set
            {
                this.EnabledField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified
        {
            get
            {
                return this.LastModifiedField;
            }
            set
            {
                this.LastModifiedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationMailText
        {
            get
            {
                return this.NotificationMailTextField;
            }
            set
            {
                this.NotificationMailTextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotifyOnError
        {
            get
            {
                return this.NotifyOnErrorField;
            }
            set
            {
                this.NotifyOnErrorField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OverdueMailText
        {
            get
            {
                return this.OverdueMailTextField;
            }
            set
            {
                this.OverdueMailTextField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessNo
        {
            get
            {
                return this.ProcessNoField;
            }
            set
            {
                this.ProcessNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HasPermissionsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class HasPermissionsParams : object
    {

        private int ObjNoField;

        private Therefore.WebAPI.WSObjectType ObjTypeField;

        private Therefore.WebAPI.WSPermissionType PermTypeField;

        private int SubObjNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ObjNo
        {
            get
            {
                return this.ObjNoField;
            }
            set
            {
                this.ObjNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSObjectType ObjType
        {
            get
            {
                return this.ObjTypeField;
            }
            set
            {
                this.ObjTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSPermissionType PermType
        {
            get
            {
                return this.PermTypeField;
            }
            set
            {
                this.PermTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int SubObjNo
        {
            get
            {
                return this.SubObjNoField;
            }
            set
            {
                this.SubObjNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HasPermissionsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class HasPermissionsResponse : object
    {

        private bool HasPermissionsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPermissions
        {
            get
            {
                return this.HasPermissionsField;
            }
            set
            {
                this.HasPermissionsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LinkDocAndWFInstanceParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class LinkDocAndWFInstanceParams : object
    {

        private bool AutoClaimWorkflowInstanceField;

        private int DocNoField;

        private int TokenNoField;

        private int WorkflowInstanceNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoClaimWorkflowInstance
        {
            get
            {
                return this.AutoClaimWorkflowInstanceField;
            }
            set
            {
                this.AutoClaimWorkflowInstanceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int WorkflowInstanceNo
        {
            get
            {
                return this.WorkflowInstanceNoField;
            }
            set
            {
                this.WorkflowInstanceNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LinkDocAndWFInstanceResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class LinkDocAndWFInstanceResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LinkDocumentsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class LinkDocumentsParams : object
    {

        private int DocNoAField;

        private int DocNoBField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNoA
        {
            get
            {
                return this.DocNoAField;
            }
            set
            {
                this.DocNoAField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNoB
        {
            get
            {
                return this.DocNoBField;
            }
            set
            {
                this.DocNoBField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LinkDocumentsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class LinkDocumentsResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ReleaseFullTextQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseFullTextQueryParams : object
    {

        private int QueryIDField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int QueryID
        {
            get
            {
                return this.QueryIDField;
            }
            set
            {
                this.QueryIDField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ReleaseFullTextQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseFullTextQueryResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ReleaseMultiQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseMultiQueryParams : object
    {

        private int QueryIDField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int QueryID
        {
            get
            {
                return this.QueryIDField;
            }
            set
            {
                this.QueryIDField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ReleaseMultiQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseMultiQueryResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ReleaseSingleQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseSingleQueryParams : object
    {

        private int QueryIDField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int QueryID
        {
            get
            {
                return this.QueryIDField;
            }
            set
            {
                this.QueryIDField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ReleaseSingleQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseSingleQueryResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveCaseIndexDataParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveCaseIndexDataParams : object
    {

        private int CaseNoField;

        private string CheckInCommentsField;

        private Therefore.WebAPI.WSIndexDataToPut IndexDataField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckInComments
        {
            get
            {
                return this.CheckInCommentsField;
            }
            set
            {
                this.CheckInCommentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSIndexDataToPut IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveCaseIndexDataResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveCaseIndexDataResponse : object
    {

        private System.DateTime LastChangeTimeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveCaseIndexDataQuickParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveCaseIndexDataQuickParams : object
    {

        private int CaseNoField;

        private string CheckInCommentsField;

        private Therefore.WebAPI.WSIndexDataToPutQuick IndexDataField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CaseNo
        {
            get
            {
                return this.CaseNoField;
            }
            set
            {
                this.CaseNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckInComments
        {
            get
            {
                return this.CheckInCommentsField;
            }
            set
            {
                this.CheckInCommentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSIndexDataToPutQuick IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataToPutQuick", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataToPutQuick : object
    {

        private Therefore.WebAPI.WSIndexDataItemQuick[] IndexDataItemsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSIndexDataItemQuick[] IndexDataItems
        {
            get
            {
                return this.IndexDataItemsField;
            }
            set
            {
                this.IndexDataItemsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSIndexDataItemQuick", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataItemQuick : object
    {

        private Therefore.WebAPI.WSIndexDataDate DateIndexDataField;

        private Therefore.WebAPI.WSIndexDataInt IntIndexDataField;

        private Therefore.WebAPI.WSIndexDataLogical LogicalIndexDataField;

        private Therefore.WebAPI.WSIndexDataMoney MoneyIndexDataField;

        private Therefore.WebAPI.WSIndexDataMultipleKeyword MultipleKeywordDataField;

        private Therefore.WebAPI.WSIndexDataSingleKeyword SingleKeywordDataField;

        private Therefore.WebAPI.WSIndexDataString StringIndexDataField;

        private Therefore.WebAPI.WSIndexDataDateTime DateTimeIndexDataField;

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataDate DateIndexData
        {
            get
            {
                return this.DateIndexDataField;
            }
            set
            {
                this.DateIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataInt IntIndexData
        {
            get
            {
                return this.IntIndexDataField;
            }
            set
            {
                this.IntIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataLogical LogicalIndexData
        {
            get
            {
                return this.LogicalIndexDataField;
            }
            set
            {
                this.LogicalIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataMoney MoneyIndexData
        {
            get
            {
                return this.MoneyIndexDataField;
            }
            set
            {
                this.MoneyIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataMultipleKeyword MultipleKeywordData
        {
            get
            {
                return this.MultipleKeywordDataField;
            }
            set
            {
                this.MultipleKeywordDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataSingleKeyword SingleKeywordData
        {
            get
            {
                return this.SingleKeywordDataField;
            }
            set
            {
                this.SingleKeywordDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false)]
        public Therefore.WebAPI.WSIndexDataString StringIndexData
        {
            get
            {
                return this.StringIndexDataField;
            }
            set
            {
                this.StringIndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 7)]
        public Therefore.WebAPI.WSIndexDataDateTime DateTimeIndexData
        {
            get
            {
                return this.DateTimeIndexDataField;
            }
            set
            {
                this.DateTimeIndexDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveCaseIndexDataQuickResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveCaseIndexDataQuickResponse : object
    {

        private System.DateTime LastChangeTimeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveDocumentIndexDataParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveDocumentIndexDataParams : object
    {

        private string CheckInCommentsField;

        private int DocNoField;

        private Therefore.WebAPI.WSIndexDataToPut IndexDataField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckInComments
        {
            get
            {
                return this.CheckInCommentsField;
            }
            set
            {
                this.CheckInCommentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSIndexDataToPut IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveDocumentIndexDataResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveDocumentIndexDataResponse : object
    {

        private System.DateTime LastChangeTimeField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveDocumentIndexDataQuickParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveDocumentIndexDataQuickParams : object
    {

        private string CheckInCommentsField;

        private int DocNoField;

        private Therefore.WebAPI.WSIndexDataToPutQuick IndexDataField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckInComments
        {
            get
            {
                return this.CheckInCommentsField;
            }
            set
            {
                this.CheckInCommentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSIndexDataToPutQuick IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveDocumentIndexDataQuickResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveDocumentIndexDataQuickResponse : object
    {

        private System.DateTime LastChangeTimeField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SetChecklistItemWorkflowParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetChecklistItemWorkflowParams : object
    {

        private int CheckListItemIndexField;

        private int InstanceNoField;

        private bool IsCheckedField;

        private int TokenNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CheckListItemIndex
        {
            get
            {
                return this.CheckListItemIndexField;
            }
            set
            {
                this.CheckListItemIndexField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public bool IsChecked
        {
            get
            {
                return this.IsCheckedField;
            }
            set
            {
                this.IsCheckedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SetChecklistItemWorkflowResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetChecklistItemWorkflowResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SetTaskStatusParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetTaskStatusParams : object
    {

        private string CommentField;

        private int TaskNoField;

        private Therefore.WebAPI.WSTaskStatus TaskStatusField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                this.CommentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSTaskStatus TaskStatus
        {
            get
            {
                return this.TaskStatusField;
            }
            set
            {
                this.TaskStatusField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SetTaskStatusResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetTaskStatusResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SetTextInfoWorkflowParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetTextInfoWorkflowParams : object
    {

        private int InstanceNoField;

        private string TextInformationField;

        private int TokenNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int InstanceNo
        {
            get
            {
                return this.InstanceNoField;
            }
            set
            {
                this.InstanceNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string TextInformation
        {
            get
            {
                return this.TextInformationField;
            }
            set
            {
                this.TextInformationField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SetTextInfoWorkflowResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetTextInfoWorkflowResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StartCreateDocumentBatchParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartCreateDocumentBatchParams : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StartCreateDocumentBatchResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartCreateDocumentBatchResponse : object
    {

        private System.Guid BatchIdField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BatchId
        {
            get
            {
                return this.BatchIdField;
            }
            set
            {
                this.BatchIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StartTaskParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartTaskParams : object
    {

        private Therefore.WebAPI.WSTask TaskField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSTask Task
        {
            get
            {
                return this.TaskField;
            }
            set
            {
                this.TaskField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StartTaskResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartTaskResponse : object
    {

        private int TaskNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StartUpdateDocumentBatchParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartUpdateDocumentBatchParams : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StartUpdateDocumentBatchResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartUpdateDocumentBatchResponse : object
    {

        private System.Guid BatchIdField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BatchId
        {
            get
            {
                return this.BatchIdField;
            }
            set
            {
                this.BatchIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StartWorkflowInstanceParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartWorkflowInstanceParams : object
    {

        private int DocNoField;

        private int ProcessNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int ProcessNo
        {
            get
            {
                return this.ProcessNoField;
            }
            set
            {
                this.ProcessNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StartWorkflowInstanceResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartWorkflowInstanceResponse : object
    {

        private int WorkflowInstanceNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowInstanceNo
        {
            get
            {
                return this.WorkflowInstanceNoField;
            }
            set
            {
                this.WorkflowInstanceNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SubmitCreateDocumentBatchParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SubmitCreateDocumentBatchParams : object
    {

        private System.Guid BatchIdField;

        private int CategoryNoField;

        private string CheckInCommentsField;

        private Therefore.WebAPI.WSIndexDataItem[] IndexDataItemsField;

        private System.Nullable<bool> DoFillDependentFieldsField;

        private Therefore.WebAPI.WSConversionOptions ConversionOptionsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public System.Guid BatchId
        {
            get
            {
                return this.BatchIdField;
            }
            set
            {
                this.BatchIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckInComments
        {
            get
            {
                return this.CheckInCommentsField;
            }
            set
            {
                this.CheckInCommentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSIndexDataItem[] IndexDataItems
        {
            get
            {
                return this.IndexDataItemsField;
            }
            set
            {
                this.IndexDataItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public System.Nullable<bool> DoFillDependentFields
        {
            get
            {
                return this.DoFillDependentFieldsField;
            }
            set
            {
                this.DoFillDependentFieldsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public Therefore.WebAPI.WSConversionOptions ConversionOptions
        {
            get
            {
                return this.ConversionOptionsField;
            }
            set
            {
                this.ConversionOptionsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SubmitCreateDocumentBatchResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SubmitCreateDocumentBatchResponse : object
    {

        private int DocNoField;

        private System.DateTime LastChangeTimeField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SubmitUpdateDocumentBatchParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SubmitUpdateDocumentBatchParams : object
    {

        private System.Guid BatchIdField;

        private string CheckInCommentsField;

        private int DocNoField;

        private Therefore.WebAPI.WSIndexDataToPut IndexDataField;

        private int[] StreamNosToDeleteField;

        private Therefore.WebAPI.WSConversionOptions ConversionOptionsField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public System.Guid BatchId
        {
            get
            {
                return this.BatchIdField;
            }
            set
            {
                this.BatchIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckInComments
        {
            get
            {
                return this.CheckInCommentsField;
            }
            set
            {
                this.CheckInCommentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataToPut IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] StreamNosToDelete
        {
            get
            {
                return this.StreamNosToDeleteField;
            }
            set
            {
                this.StreamNosToDeleteField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public Therefore.WebAPI.WSConversionOptions ConversionOptions
        {
            get
            {
                return this.ConversionOptionsField;
            }
            set
            {
                this.ConversionOptionsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SubmitUpdateDocumentBatchResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SubmitUpdateDocumentBatchResponse : object
    {

        private int CurrentDocVersionField;

        private System.DateTime LastChangeTimeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentDocVersion
        {
            get
            {
                return this.CurrentDocVersionField;
            }
            set
            {
                this.CurrentDocVersionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UnlinkDocAndWFInstanceParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UnlinkDocAndWFInstanceParams : object
    {

        private bool AutoClaimWorkflowInstanceField;

        private int DocNoField;

        private int TokenNoField;

        private int WorkflowInstanceNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoClaimWorkflowInstance
        {
            get
            {
                return this.AutoClaimWorkflowInstanceField;
            }
            set
            {
                this.AutoClaimWorkflowInstanceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TokenNo
        {
            get
            {
                return this.TokenNoField;
            }
            set
            {
                this.TokenNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int WorkflowInstanceNo
        {
            get
            {
                return this.WorkflowInstanceNoField;
            }
            set
            {
                this.WorkflowInstanceNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UnlinkDocAndWFInstanceResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UnlinkDocAndWFInstanceResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UnlinkDocumentsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UnlinkDocumentsParams : object
    {

        private int DocNoAField;

        private int DocNoBField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNoA
        {
            get
            {
                return this.DocNoAField;
            }
            set
            {
                this.DocNoAField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNoB
        {
            get
            {
                return this.DocNoBField;
            }
            set
            {
                this.DocNoBField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UnlinkDocumentsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UnlinkDocumentsResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UpdateDictionaryKeywordParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateDictionaryKeywordParams : object
    {

        private System.Nullable<int> ByDictionaryIDField;

        private System.Nullable<int> ByDictionaryTypeNoField;

        private System.Nullable<bool> IsKeywordDeactivatedField;

        private int KeywordIDField;

        private string KeywordNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ByDictionaryID
        {
            get
            {
                return this.ByDictionaryIDField;
            }
            set
            {
                this.ByDictionaryIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ByDictionaryTypeNo
        {
            get
            {
                return this.ByDictionaryTypeNoField;
            }
            set
            {
                this.ByDictionaryTypeNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsKeywordDeactivated
        {
            get
            {
                return this.IsKeywordDeactivatedField;
            }
            set
            {
                this.IsKeywordDeactivatedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int KeywordID
        {
            get
            {
                return this.KeywordIDField;
            }
            set
            {
                this.KeywordIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeywordName
        {
            get
            {
                return this.KeywordNameField;
            }
            set
            {
                this.KeywordNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UpdateDictionaryKeywordResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateDictionaryKeywordResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UpdateDocumentParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateDocumentParams : object
    {

        private string CheckInCommentsField;

        private int DocNoField;

        private Therefore.WebAPI.WSIndexDataToPut IndexDataField;

        private Therefore.WebAPI.StreamNoList StreamNosToDeleteField;

        private Therefore.WebAPI.WSStreamInfoWithData[] StreamsToUpdateField;

        private Therefore.WebAPI.WSConversionOptions ConversionOptionsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckInComments
        {
            get
            {
                return this.CheckInCommentsField;
            }
            set
            {
                this.CheckInCommentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataToPut IndexData
        {
            get
            {
                return this.IndexDataField;
            }
            set
            {
                this.IndexDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.StreamNoList StreamNosToDelete
        {
            get
            {
                return this.StreamNosToDeleteField;
            }
            set
            {
                this.StreamNosToDeleteField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSStreamInfoWithData[] StreamsToUpdate
        {
            get
            {
                return this.StreamsToUpdateField;
            }
            set
            {
                this.StreamsToUpdateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public Therefore.WebAPI.WSConversionOptions ConversionOptions
        {
            get
            {
                return this.ConversionOptionsField;
            }
            set
            {
                this.ConversionOptionsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UpdateDocumentResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateDocumentResponse : object
    {

        private int CurrentDocVersionField;

        private System.DateTime LastChangeTimeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentDocVersion
        {
            get
            {
                return this.CurrentDocVersionField;
            }
            set
            {
                this.CurrentDocVersionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChangeTime
        {
            get
            {
                return this.LastChangeTimeField;
            }
            set
            {
                this.LastChangeTimeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UpdateTaskParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateTaskParams : object
    {

        private Therefore.WebAPI.WSTask TaskField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSTask Task
        {
            get
            {
                return this.TaskField;
            }
            set
            {
                this.TaskField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UpdateTaskResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateTaskResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UpdateTaskCommentParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateTaskCommentParams : object
    {

        private string CommentField;

        private int TaskNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                this.CommentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int TaskNo
        {
            get
            {
                return this.TaskNoField;
            }
            set
            {
                this.TaskNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UpdateTaskCommentResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateTaskCommentResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UploadDocStreamToBatchParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UploadDocStreamToBatchParams : object
    {

        private System.Guid BatchIdField;

        private Therefore.WebAPI.WSStreamInfoWithData StreamInfoWithDataField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public System.Guid BatchId
        {
            get
            {
                return this.BatchIdField;
            }
            set
            {
                this.BatchIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.WSStreamInfoWithData StreamInfoWithData
        {
            get
            {
                return this.StreamInfoWithDataField;
            }
            set
            {
                this.StreamInfoWithDataField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UploadDocStreamToBatchResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UploadDocStreamToBatchResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteDependentFieldsQueryParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteDependentFieldsQueryParams : object
    {

        private System.Nullable<int> CaseDefinitionNoField;

        private System.Nullable<int> CategoryNoField;

        private int FieldNoField;

        private Therefore.WebAPI.WSIndexDataItem[] IndexDataItemsField;

        private System.Nullable<int> MaxRowsField;

        private System.Nullable<bool> SaveModeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CaseDefinitionNo
        {
            get
            {
                return this.CaseDefinitionNoField;
            }
            set
            {
                this.CaseDefinitionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryNo
        {
            get
            {
                return this.CategoryNoField;
            }
            set
            {
                this.CategoryNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FieldNo
        {
            get
            {
                return this.FieldNoField;
            }
            set
            {
                this.FieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSIndexDataItem[] IndexDataItems
        {
            get
            {
                return this.IndexDataItemsField;
            }
            set
            {
                this.IndexDataItemsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxRows
        {
            get
            {
                return this.MaxRowsField;
            }
            set
            {
                this.MaxRowsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SaveMode
        {
            get
            {
                return this.SaveModeField;
            }
            set
            {
                this.SaveModeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExecuteDependentFieldsQueryResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteDependentFieldsQueryResponse : object
    {

        private Therefore.WebAPI.WSDependentFieldsQueryResult QueryResultField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSDependentFieldsQueryResult QueryResult
        {
            get
            {
                return this.QueryResultField;
            }
            set
            {
                this.QueryResultField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSDependentFieldsQueryResult", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSDependentFieldsQueryResult : object
    {

        private Therefore.WebAPI.WSCategoryField[] ColumnsField;

        private Therefore.WebAPI.WSDependentFieldsQueryResultRow[] ResultRowsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCategoryField[] Columns
        {
            get
            {
                return this.ColumnsField;
            }
            set
            {
                this.ColumnsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSDependentFieldsQueryResultRow[] ResultRows
        {
            get
            {
                return this.ResultRowsField;
            }
            set
            {
                this.ResultRowsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ValidateKeywordsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ValidateKeywordsParams : object
    {

        private int FieldNoField;

        private bool IsFilterModeField;

        private Therefore.WebAPI.KeywordList KeywordsToValidateField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FieldNo
        {
            get
            {
                return this.FieldNoField;
            }
            set
            {
                this.FieldNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFilterMode
        {
            get
            {
                return this.IsFilterModeField;
            }
            set
            {
                this.IsFilterModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.KeywordList KeywordsToValidate
        {
            get
            {
                return this.KeywordsToValidateField;
            }
            set
            {
                this.KeywordsToValidateField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ValidateKeywordsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ValidateKeywordsResponse : object
    {

        private Therefore.WebAPI.KeywordList InvalidKeywordsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.KeywordList InvalidKeywords
        {
            get
            {
                return this.InvalidKeywordsField;
            }
            set
            {
                this.InvalidKeywordsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetConnectionTokenParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConnectionTokenParams : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetConnectionTokenResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConnectionTokenResponse : object
    {

        private string TokenField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetConnectionTokenFromADFSTokenParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConnectionTokenFromADFSTokenParams : object
    {

        private System.Nullable<Therefore.WebAPI.WSConnectMode> ConnectModeField;

        private string SecurityTokenField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public System.Nullable<Therefore.WebAPI.WSConnectMode> ConnectMode
        {
            get
            {
                return this.ConnectModeField;
            }
            set
            {
                this.ConnectModeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string SecurityToken
        {
            get
            {
                return this.SecurityTokenField;
            }
            set
            {
                this.SecurityTokenField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSConnectMode", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSConnectMode : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoLicenseMove = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConnectForSignOut = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoveLicense = 3,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetConnectionTokenFromADFSTokenResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConnectionTokenFromADFSTokenResponse : object
    {

        private string NodeFriendlyField;

        private string TokenField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeFriendly
        {
            get
            {
                return this.NodeFriendlyField;
            }
            set
            {
                this.NodeFriendlyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetJWTTokenParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetJWTTokenParams : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetJWTTokenResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetJWTTokenResponse : object
    {

        private System.DateTime ExpiresAtField;

        private string JWTTokenField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiresAt
        {
            get
            {
                return this.ExpiresAtField;
            }
            set
            {
                this.ExpiresAtField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JWTToken
        {
            get
            {
                return this.JWTTokenField;
            }
            set
            {
                this.JWTTokenField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ClearWorkflowInstanceErrorsParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ClearWorkflowInstanceErrorsParams : object
    {

        private Therefore.WebAPI.InstanceNoList InstanceNoListField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public Therefore.WebAPI.InstanceNoList InstanceNoList
        {
            get
            {
                return this.InstanceNoListField;
            }
            set
            {
                this.InstanceNoListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name = "InstanceNoList", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types", ItemName = "InstanceNo")]
    public class InstanceNoList : System.Collections.Generic.List<int>
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ClearWorkflowInstanceErrorsResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ClearWorkflowInstanceErrorsResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CheckOutDocumentParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CheckOutDocumentParams : object
    {

        private int DocNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CheckOutDocumentResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CheckOutDocumentResponse : object
    {

        private bool CheckOutSucceededField;

        private int CurrentVersionNumberField;

        private string SomebodyElseNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckOutSucceeded
        {
            get
            {
                return this.CheckOutSucceededField;
            }
            set
            {
                this.CheckOutSucceededField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentVersionNumber
        {
            get
            {
                return this.CurrentVersionNumberField;
            }
            set
            {
                this.CurrentVersionNumberField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SomebodyElseName
        {
            get
            {
                return this.SomebodyElseNameField;
            }
            set
            {
                this.SomebodyElseNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "TestCheckOutDocumentParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class TestCheckOutDocumentParams : object
    {

        private int DocNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "TestCheckOutDocumentResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class TestCheckOutDocumentResponse : object
    {

        private Therefore.WebAPI.WSCheckOutStatus CheckOutStatusField;

        private int CurrentVersionNumberField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSCheckOutStatus CheckOutStatus
        {
            get
            {
                return this.CheckOutStatusField;
            }
            set
            {
                this.CheckOutStatusField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentVersionNumber
        {
            get
            {
                return this.CurrentVersionNumberField;
            }
            set
            {
                this.CurrentVersionNumberField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CheckInDocumentParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CheckInDocumentParams : object
    {

        private string CheckInCommentField;

        private int DocNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckInComment
        {
            get
            {
                return this.CheckInCommentField;
            }
            set
            {
                this.CheckInCommentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CheckInDocumentResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CheckInDocumentResponse : object
    {

        private int DocNoField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UndoCheckOutDocumentParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UndoCheckOutDocumentParams : object
    {

        private int DocNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UndoCheckOutDocumentResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UndoCheckOutDocumentResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetSystemCustomerIdResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetSystemCustomerIdResponse : object
    {

        private string CustomerIdField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerId
        {
            get
            {
                return this.CustomerIdField;
            }
            set
            {
                this.CustomerIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveEFormParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveEFormParams : object
    {

        private string DefaultSubmissionField;

        private System.Nullable<int> FolderNoField;

        private string FormDefinitionField;

        private int FormNoField;

        private string NameField;

        private System.Nullable<int> VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string DefaultSubmission
        {
            get
            {
                return this.DefaultSubmissionField;
            }
            set
            {
                this.DefaultSubmissionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string FormDefinition
        {
            get
            {
                return this.FormDefinitionField;
            }
            set
            {
                this.FormDefinitionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FormNo
        {
            get
            {
                return this.FormNoField;
            }
            set
            {
                this.FormNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveEFormResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveEFormResponse : object
    {

        private int FormNoField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FormNo
        {
            get
            {
                return this.FormNoField;
            }
            set
            {
                this.FormNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteEFormParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteEFormParams : object
    {

        private int FormNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FormNo
        {
            get
            {
                return this.FormNoField;
            }
            set
            {
                this.FormNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeleteEFormResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteEFormResponse : object
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetEFormParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetEFormParams : object
    {

        private int FormNoField;

        private System.Nullable<int> VersionNoField;

        private System.Nullable<bool> WithDefaultSubmissionField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FormNo
        {
            get
            {
                return this.FormNoField;
            }
            set
            {
                this.FormNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WithDefaultSubmission
        {
            get
            {
                return this.WithDefaultSubmissionField;
            }
            set
            {
                this.WithDefaultSubmissionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetEFormResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetEFormResponse : object
    {

        private Therefore.WebAPI.WSEForm EFormField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSEForm EForm
        {
            get
            {
                return this.EFormField;
            }
            set
            {
                this.EFormField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SubmitEFormParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SubmitEFormParams : object
    {

        private int FormNoField;

        private int VersionNoField;

        private string FormDefinitionField;

        private string SubmissionDataField;

        private System.Nullable<int> SubmissionNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FormNo
        {
            get
            {
                return this.FormNoField;
            }
            set
            {
                this.FormNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 2)]
        public string FormDefinition
        {
            get
            {
                return this.FormDefinitionField;
            }
            set
            {
                this.FormDefinitionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 3)]
        public string SubmissionData
        {
            get
            {
                return this.SubmissionDataField;
            }
            set
            {
                this.SubmissionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public System.Nullable<int> SubmissionNo
        {
            get
            {
                return this.SubmissionNoField;
            }
            set
            {
                this.SubmissionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SubmitEFormResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SubmitEFormResponse : object
    {

        private string DisplayDocUrlField;

        private int DocNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string DisplayDocUrl
        {
            get
            {
                return this.DisplayDocUrlField;
            }
            set
            {
                this.DisplayDocUrlField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int DocNo
        {
            get
            {
                return this.DocNoField;
            }
            set
            {
                this.DocNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetKeywordsByKeyDicParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetKeywordsByKeyDicParams : object
    {

        private int KeyDicNoField;

        private string FilterValueField;

        private System.Nullable<int> MaxValuesField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int KeyDicNo
        {
            get
            {
                return this.KeyDicNoField;
            }
            set
            {
                this.KeyDicNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public string FilterValue
        {
            get
            {
                return this.FilterValueField;
            }
            set
            {
                this.FilterValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.Nullable<int> MaxValues
        {
            get
            {
                return this.MaxValuesField;
            }
            set
            {
                this.MaxValuesField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UploadEFormFileResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UploadEFormFileResponse : object
    {

        private string thereforelocalfileField;

        private string thereforeoriginalfilenameField;

        private string urlField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thereforelocalfile
        {
            get
            {
                return this.thereforelocalfileField;
            }
            set
            {
                this.thereforelocalfileField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thereforeoriginalfilename
        {
            get
            {
                return this.thereforeoriginalfilenameField;
            }
            set
            {
                this.thereforeoriginalfilenameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveEFormDefaultSubmissionParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveEFormDefaultSubmissionParams : object
    {

        private string DefaultSubmissionField;

        private int FormNoField;

        private int VersionNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public string DefaultSubmission
        {
            get
            {
                return this.DefaultSubmissionField;
            }
            set
            {
                this.DefaultSubmissionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FormNo
        {
            get
            {
                return this.FormNoField;
            }
            set
            {
                this.FormNoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int VersionNo
        {
            get
            {
                return this.VersionNoField;
            }
            set
            {
                this.VersionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SaveEFormDefaultSubmissionResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveEFormDefaultSubmissionResponse : object
    {

        private int SubmissionNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int SubmissionNo
        {
            get
            {
                return this.SubmissionNoField;
            }
            set
            {
                this.SubmissionNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetFolderParams", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetFolderParams : object
    {

        private int FolderNoField;

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int FolderNo
        {
            get
            {
                return this.FolderNoField;
            }
            set
            {
                this.FolderNoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetFolderResponse", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetFolderResponse : object
    {

        private Therefore.WebAPI.WSFolder FolderField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Therefore.WebAPI.WSFolder Folder
        {
            get
            {
                return this.FolderField;
            }
            set
            {
                this.FolderField = value;
            }
        }
    }
}
namespace Therefore.WebAPI.Service.Contract.Exceptions
{
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WSErrorSource", Namespace = "http://schemas.datacontract.org/2004/07/Therefore.WebAPI.Service.Contract.Excepti" +
        "ons")]
    public enum WSErrorSource : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        API = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebAPI = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 3,
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace = "http://schemas.therefore.net/webservices/interop/v0001/messages", ConfigurationName = "IThereforeService")]
public interface IThereforeService
{

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveFolder", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveFolderResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveFolderWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSaveFolder(Therefore.WebAPI.SaveFolderParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SaveFolderReponse EndSaveFolder(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteFolder", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteFolderResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteFolderWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginDeleteFolder(Therefore.WebAPI.DeleteFolderParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.DeleteFolderResponse EndDeleteFolder(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetParentFolder", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetParentFolderResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetParentFolderWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSetParentFolder(Therefore.WebAPI.SetParentFolderParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SetParentFolderResponse EndSetParentFolder(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/QueryDependentFieldsDirect", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/QueryDependentFieldsDirectResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/QueryDependentFieldsDirectWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginQueryDependentFieldsDirect(Therefore.WebAPI.QueryDependentFieldsDirectParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.QueryDependentFieldsDirectResponse EndQueryDependentFieldsDirect(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetReferencedTableInfo", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetReferencedTableInfoResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetReferencedTableInfoWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetReferencedTableInfo(Therefore.WebAPI.GetReferencedTableInfoParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetReferencedTableInfoResponse EndGetReferencedTableInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/VerifyReCaptchaToken", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/VerifyReCaptchaTokenResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/VerifyReCaptchaTokenWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginVerifyReCaptchaToken(Therefore.WebAPI.VerifyReCaptchaParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.VerifyReCaptchaResponse EndVerifyReCaptchaToken(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveEFormDraft", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveEFormDraftResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveEFormDraftWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSaveEFormDraft(Therefore.WebAPI.SaveEFormDraftParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SaveEFormDraftResponse EndSaveEFormDraft(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SearchEFormSubmission", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SearchEFormSubmissionResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SearchEFormSubmissionWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSearchEFormSubmission(Therefore.WebAPI.SearchEFormSubmissionParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SearchEFormSubmissionResponse EndSearchEFormSubmission(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ClearLocalCache", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ClearLocalCacheResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ClearLocalCacheWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginClearLocalCache(Therefore.WebAPI.ClearLocalCacheParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ClearLocalCacheResponse EndClearLocalCache(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/RenameObject", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/RenameObjectResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/RenameObjectWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginRenameObject(Therefore.WebAPI.RenameObjectParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.RenameObjectResponse EndRenameObject(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteEFormDraftSubmission", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteEFormDraftSubmissionResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteEFormDraftSubmissionWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginDeleteEFormDraftSubmission(Therefore.WebAPI.DeleteEFormDraftSubmissionParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.DeleteEFormDraftSubmissionResponse EndDeleteEFormDraftSubmission(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CopyEForm", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CopyEFormResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CopyEFormWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginCopyEForm(Therefore.WebAPI.CopyEFormParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.CopyEFormResponse EndCopyEForm(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/HandleESignaturePushNotification", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/HandleESignaturePushNotificationResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/HandleESignaturePushNotificationWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginHandleESignaturePushNotification(Therefore.WebAPI.HandleESignaturePushParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.HandleESignaturePushResponse EndHandleESignaturePushNotification(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetClientDiscoveryInfo", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetClientDiscoveryInfoResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetClientDiscoveryInfoWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetClientDiscoveryInfo(Therefore.WebAPI.GetClientDiscoveryInfoParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetClientDiscoveryInfoResponse EndGetClientDiscoveryInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadSessionStart", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadSessionStartResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadSessionStartWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUploadSessionStart(Therefore.WebAPI.UploadSessionStartParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UploadSessionStartResponse EndUploadSessionStart(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadSessionAppendChunkRaw", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadSessionAppendChunkRawResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadSessionAppendChunkRawWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUploadSessionAppendChunkRaw(byte[] inputStream, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UploadSessionAppendChunkRawResponse EndUploadSessionAppendChunkRaw(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CrossOriginOptionsSupport", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CrossOriginOptionsSupportResponse")]
    System.IAsyncResult BeginCrossOriginOptionsSupport(System.AsyncCallback callback, object asyncState);

    void EndCrossOriginOptionsSupport(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/MoveUserLicense", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/MoveUserLicenseResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/MoveUserLicenseWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginMoveUserLicense(Therefore.WebAPI.MoveUserLicenseRequest parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.MoveUserLicenseResponse EndMoveUserLicense(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SignOut", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SignOutResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SignOutWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSignOut(Therefore.WebAPI.SignOutRequest parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SignOutResponse EndSignOut(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/AddDictionaryKeyword", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/AddDictionaryKeywordResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/AddDictionaryKeywordWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginAddDictionaryKeyword(Therefore.WebAPI.AddDictionaryKeywordParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.AddDictionaryKeywordResponse EndAddDictionaryKeyword(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/AddStreamsToDocument", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/AddStreamsToDocumentResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/AddStreamsToDocumentWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginAddStreamsToDocument(Therefore.WebAPI.AddStreamsToDocumentParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.AddStreamsToDocumentResponse EndAddStreamsToDocument(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ClaimWorkflowInstance", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ClaimWorkflowInstanceResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ClaimWorkflowInstanceWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginClaimWorkflowInstance(Therefore.WebAPI.ClaimWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ClaimWorkflowInstanceResponse EndClaimWorkflowInstance(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CloseCase", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CloseCaseResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CloseCaseWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginCloseCase(Therefore.WebAPI.CloseCaseParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.CloseCaseResponse EndCloseCase(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReopenCase", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReopenCaseResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReopenCaseWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginReopenCase(Therefore.WebAPI.ReopenCaseParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ReopenCaseResponse EndReopenCase(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CompleteTask", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CompleteTaskResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CompleteTaskWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginCompleteTask(Therefore.WebAPI.CompleteTaskParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.CompleteTaskResponse EndCompleteTask(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CreateCase", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CreateCaseResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CreateCaseWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginCreateCase(Therefore.WebAPI.CreateCaseParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.CreateCaseResponse EndCreateCase(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/PreprocessIndexData", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/PreprocessIndexDataResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/PreprocessIndexDataWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginPreprocessIndexData(Therefore.WebAPI.PreprocessIndexDataParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.PreprocessIndexDataResponse EndPreprocessIndexData(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/PreprocessTableRow", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/PreprocessTableRowResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/PreprocessTableRowWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginPreprocessTableRow(Therefore.WebAPI.PreprocessTableRowParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.PreprocessTableRowResponse EndPreprocessTableRow(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CreateDocument", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CreateDocumentResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CreateDocumentWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginCreateDocument(Therefore.WebAPI.CreateDocumentParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.CreateDocumentResponse EndCreateDocument(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CreateLinkFile", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CreateLinkFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CreateLinkFileWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginCreateLinkFile(Therefore.WebAPI.CreateLinkFileParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.CreateLinkFileResponse EndCreateLinkFile(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DelegateWorkflowInstance", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DelegateWorkflowInstanceResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DelegateWorkflowInstanceWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginDelegateWorkflowInstance(Therefore.WebAPI.DelegateWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.DelegateWorkflowInstanceResponse EndDelegateWorkflowInstance(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteCase", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteCaseResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteCaseWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginDeleteCase(Therefore.WebAPI.DeleteCaseParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.DeleteCaseResponse EndDeleteCase(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteDictionaryKeyword", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteDictionaryKeywordResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteDictionaryKeywordWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginDeleteDictionaryKeyword(Therefore.WebAPI.DeleteDictionaryKeywordParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.DeleteDictionaryKeywordResponse EndDeleteDictionaryKeyword(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteDocument", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteDocumentResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteDocumentWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginDeleteDocument(Therefore.WebAPI.DeleteDocumentParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.DeleteDocumentResponse EndDeleteDocument(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteTask", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteTaskResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteTaskWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginDeleteTask(Therefore.WebAPI.DeleteTaskParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.DeleteTaskResponse EndDeleteTask(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteWorkflowInstance", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteWorkflowInstanceResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteWorkflowInstanceWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginDeleteWorkflowInstance(Therefore.WebAPI.DeleteWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.DeleteWorkflowInstanceResponse EndDeleteWorkflowInstance(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DisclaimWorkflowInstance", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DisclaimWorkflowInstanceResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DisclaimWorkflowInstanceWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginDisclaimWorkflowInstance(Therefore.WebAPI.DisclaimWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.DisclaimWorkflowInstanceResponse EndDisclaimWorkflowInstance(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/EraseAllObjects", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/EraseAllObjectsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/EraseAllObjectsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginEraseAllObjects(Therefore.WebAPI.EraseAllObjectsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.EraseAllObjectsResponse EndEraseAllObjects(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/EraseObjects", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/EraseObjectsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/EraseObjectsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginEraseObjects(Therefore.WebAPI.EraseObjectsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.EraseObjectsResponse EndEraseObjects(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteAsyncFullTextQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteAsyncFullTextQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteAsyncFullTextQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteAsyncFullTextQuery(Therefore.WebAPI.ExecuteAsyncFullTextQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteAsyncFullTextQueryResponse EndExecuteAsyncFullTextQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteAsyncMultiQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteAsyncMultiQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteAsyncMultiQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteAsyncMultiQuery(Therefore.WebAPI.ExecuteAsyncMultiQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteAsyncMultiQueryResponse EndExecuteAsyncMultiQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteAsyncSingleQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteAsyncSingleQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteAsyncSingleQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteAsyncSingleQuery(Therefore.WebAPI.ExecuteAsyncSingleQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteAsyncSingleQueryResponse EndExecuteAsyncSingleQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteFullTextQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteFullTextQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteFullTextQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteFullTextQuery(Therefore.WebAPI.ExecuteFullTextQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteFullTextQueryResponse EndExecuteFullTextQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteMultiQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteMultiQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteMultiQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteMultiQuery(Therefore.WebAPI.ExecuteMultiQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteMultiQueryResponse EndExecuteMultiQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteReport", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteReportResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteReportWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteReport(Therefore.WebAPI.ExecuteReportParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteReportResponse EndExecuteReport(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteSimpleQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteSimpleQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteSimpleQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteSimpleQuery(Therefore.WebAPI.ExecuteSimpleQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteSimpleQueryResponse EndExecuteSimpleQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteSingleQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteSingleQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteSingleQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteSingleQuery(Therefore.WebAPI.ExecuteSingleQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteSingleQueryResponse EndExecuteSingleQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteTaskInfoQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteTaskInfoQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteTaskInfoQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteTaskInfoQuery(Therefore.WebAPI.ExecuteTaskInfoQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteTaskInfoQueryResponse EndExecuteTaskInfoQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteUsersQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteUsersQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteUsersQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteUsersQuery(Therefore.WebAPI.ExecuteUsersQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteUsersQueryResponse EndExecuteUsersQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetUserDetails", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetUserDetailsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetUserDetailsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetUserDetails(Therefore.WebAPI.GetUserDetailsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetUserDetailsResponse EndGetUserDetails(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteWorkflowQueryForAll", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteWorkflowQueryForAllResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteWorkflowQueryForAllWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteWorkflowQueryForAll(Therefore.WebAPI.ExecuteWorkflowQueryForAllParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteWorkflowQueryForAllResponse EndExecuteWorkflowQueryForAll(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteWorkflowQueryForProcess", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteWorkflowQueryForProcessResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteWorkflowQueryForProcessWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteWorkflowQueryForProcess(Therefore.WebAPI.ExecuteWorkflowQueryForProcessParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteWorkflowQueryForProcessResponse EndExecuteWorkflowQueryForProcess(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/FillDependentFields", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/FillDependentFieldsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/FillDependentFieldsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginFillDependentFields(Therefore.WebAPI.FillDependentFieldsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.FillDependentFieldsResponse EndFillDependentFields(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/FinishCurrentWorkflowTask", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/FinishCurrentWorkflowTaskResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/FinishCurrentWorkflowTaskWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginFinishCurrentWorkflowTask(Therefore.WebAPI.FinishCurrentWorkflowTaskParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.FinishCurrentWorkflowTaskResponse EndFinishCurrentWorkflowTask(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetAllTreeViews", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetAllTreeViewsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetAllTreeViewsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetAllTreeViews(Therefore.WebAPI.GetAllTreeViewsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetAllTreeViewsResponse EndGetAllTreeViews(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCase", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetCase(Therefore.WebAPI.GetCaseParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetCaseResponse EndGetCase(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseDefinition", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseDefinitionResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseDefinitionWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetCaseDefinition(Therefore.WebAPI.GetCaseDefinitionParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetCaseDefinitionResponse EndGetCaseDefinition(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseDocuments", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseDocumentsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseDocumentsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetCaseDocuments(Therefore.WebAPI.GetCaseDocumentsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetCaseDocumentsResponse EndGetCaseDocuments(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseHistory", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseHistoryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCaseHistoryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetCaseHistory(Therefore.WebAPI.GetCaseHistoryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetCaseHistoryResponse EndGetCaseHistory(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCategoriesTree", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCategoriesTreeResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCategoriesTreeWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetCategoriesTree(Therefore.WebAPI.GetCategoriesTreeParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetCategoriesTreeResponse EndGetCategoriesTree(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCategoryInfo", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCategoryInfoResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetCategoryInfoWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetCategoryInfo(Therefore.WebAPI.GetCategoryInfoParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetCategoryInfoResponse EndGetCategoryInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConnectedUser", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConnectedUserResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConnectedUserWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetConnectedUser(Therefore.WebAPI.GetConnectedUserParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetConnectedUserResponse EndGetConnectedUser(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConvertedDocStreams", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConvertedDocStreamsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConvertedDocStreamsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetConvertedDocStreams(Therefore.WebAPI.GetConvertedDocStreamsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetConvertedDocStreamsResponse EndGetConvertedDocStreams(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConvertedDocStreamsRaw", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConvertedDocStreamsRawResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConvertedDocStreamsRawWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetConvertedDocStreamsRaw(Therefore.WebAPI.GetConvertedDocStreamsRawParams parameters, System.AsyncCallback callback, object asyncState);

    byte[] EndGetConvertedDocStreamsRaw(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDictionaryInfo", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDictionaryInfoResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDictionaryInfoWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetDictionaryInfo(Therefore.WebAPI.GetDictionaryInfoParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetDictionaryInfoResponse EndGetDictionaryInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocument", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetDocument(Therefore.WebAPI.GetDocumentParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetDocumentResponse EndGetDocument(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentCheckoutStatus", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentCheckoutStatusResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentCheckoutStatusWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetDocumentCheckoutStatus(Therefore.WebAPI.GetDocumentCheckoutStateParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetDocumentCheckoutStateResponse EndGetDocumentCheckoutStatus(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentIndexData", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentIndexDataResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentIndexDataWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetDocumentIndexData(Therefore.WebAPI.GetDocumentIndexDataParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetDocumentIndexDataResponse EndGetDocumentIndexData(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentProperties", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentPropertiesResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentPropertiesWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetDocumentProperties(Therefore.WebAPI.GetDocumentPropertiesParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetDocumentPropertiesResponse EndGetDocumentProperties(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentHistory", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentHistoryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentHistoryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetDocumentHistory(Therefore.WebAPI.GetDocumentHistoryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetDocumentHistoryResponse EndGetDocumentHistory(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentStream", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentStreamResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentStreamWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetDocumentStream(Therefore.WebAPI.GetDocumentStreamParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetDocumentStreamResponse EndGetDocumentStream(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentStreamRaw", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentStreamRawResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDocumentStreamRawWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetDocumentStreamRaw(Therefore.WebAPI.GetDocumentStreamRawParams parameters, System.AsyncCallback callback, object asyncState);

    byte[] EndGetDocumentStreamRaw(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDomainInfo", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDomainInfoResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetDomainInfoWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetDomainInfo(Therefore.WebAPI.GetDomainInfoParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetDomainInfoResponse EndGetDomainInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetKeywordsByFieldNo", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetKeywordsByFieldNoResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetKeywordsByFieldNoWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetKeywordsByFieldNo(Therefore.WebAPI.GetKeywordsByFieldNoParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetKeywordsByFieldNoResponse EndGetKeywordsByFieldNo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetLinkedObjects", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetLinkedObjectsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetLinkedObjectsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetLinkedObjects(Therefore.WebAPI.GetLinkedObjectsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetLinkedObjectsResponse EndGetLinkedObjects(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetLinkedWorkflowsForDoc", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetLinkedWorkflowsForDocResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetLinkedWorkflowsForDocWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetLinkedWorkflowsForDoc(Therefore.WebAPI.GetLinkedWorkflowsForDocParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetLinkedWorkflowsForDocResponse EndGetLinkedWorkflowsForDoc(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetNextFullTextQueryRows", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetNextFullTextQueryRowsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetNextFullTextQueryRowsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetNextFullTextQueryRows(Therefore.WebAPI.GetNextFullTextQueryRowsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetNextFullTextQueryRowsResponse EndGetNextFullTextQueryRows(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetNextMultiQueryRows", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetNextMultiQueryRowsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetNextMultiQueryRowsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetNextMultiQueryRows(Therefore.WebAPI.GetNextMultiQueryRowsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetNextMultiQueryRowsResponse EndGetNextMultiQueryRows(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetNextSingleQueryRows", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetNextSingleQueryRowsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetNextSingleQueryRowsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetNextSingleQueryRows(Therefore.WebAPI.GetNextSingleQueryRowsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetNextSingleQueryRowsResponse EndGetNextSingleQueryRows(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetObjectRights", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetObjectRightsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetObjectRightsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetObjectRights(Therefore.WebAPI.GetObjectRightsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetObjectRightsResponse EndGetObjectRights(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPermissions", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPermissionsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPermissionsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetPermissions(Therefore.WebAPI.GetPermissionsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetPermissionsResponse EndGetPermissions(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetObjects", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetObjectsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetObjectsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetObjects(Therefore.WebAPI.GetObjectsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetObjectsResponse EndGetObjects(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPermissionConstants", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPermissionConstantsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPermissionConstantsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetPermissionConstants(Therefore.WebAPI.GetPermissionConstantsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetPermissionConstantsResponse EndGetPermissionConstants(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetQuerySpecification", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetQuerySpecificationResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetQuerySpecificationWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetQuerySpecification(Therefore.WebAPI.QuerySpecificationParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.QuerySpecificationResponse EndGetQuerySpecification(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetReportDefinition", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetReportDefinitionResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetReportDefinitionWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetReportDefinition(Therefore.WebAPI.GetReportDefinitionParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetReportDefinitionResponse EndGetReportDefinition(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetSettingInt", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetSettingIntResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetSettingIntWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetSettingInt(Therefore.WebAPI.GetSettingIntParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetSettingIntResponse EndGetSettingInt(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetSettingString", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetSettingStringResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetSettingStringWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetSettingString(Therefore.WebAPI.GetSettingStringParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetSettingStringResponse EndGetSettingString(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPublicSettingInt", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPublicSettingIntResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPublicSettingIntWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetPublicSettingInt(Therefore.WebAPI.GetPublicSettingIntParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetPublicSettingIntResponse EndGetPublicSettingInt(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPublicSettingString", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPublicSettingStringResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetPublicSettingStringWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetPublicSettingString(Therefore.WebAPI.GetPublicSettingStringParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetPublicSettingStringResponse EndGetPublicSettingString(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTask", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTaskResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTaskWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetTask(Therefore.WebAPI.GetTaskParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetTaskResponse EndGetTask(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTaskInfo", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTaskInfoResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTaskInfoWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetTaskInfo(Therefore.WebAPI.GetTaskInfoParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetTaskInfoResponse EndGetTaskInfo(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetThumbnail", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetThumbnailResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetThumbnailWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetThumbnail(Therefore.WebAPI.GetThumbnailParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetThumbnailResponse EndGetThumbnail(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTreeViewChildNodes", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTreeViewChildNodesResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTreeViewChildNodesWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetTreeViewChildNodes(Therefore.WebAPI.GetTreeViewChildNodesParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetTreeViewChildNodesResponse EndGetTreeViewChildNodes(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTreeViewNodeDocuments", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTreeViewNodeDocumentsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTreeViewNodeDocumentsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetTreeViewNodeDocuments(Therefore.WebAPI.GetTreeViewNodeDocumentsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetTreeViewNodeDocumentsResponse EndGetTreeViewNodeDocuments(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTreeViewChildNodesAndDocuments", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTreeViewChildNodesAndDocumentsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetTreeViewChildNodesAndDocumentsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetTreeViewChildNodesAndDocuments(Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsResponse EndGetTreeViewChildNodesAndDocuments(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetWebAPIServerVersion", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetWebAPIServerVersionResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetWebAPIServerVersionWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetWebAPIServerVersion(Therefore.WebAPI.GetWebAPIServerVersionParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetWebAPIServerVersionResponse EndGetWebAPIServerVersion(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetWorkflowInstance", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetWorkflowInstanceResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetWorkflowInstanceWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetWorkflowInstance(Therefore.WebAPI.GetWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetWorkflowInstanceResponse EndGetWorkflowInstance(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetWorkflowProcess", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetWorkflowProcessResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetWorkflowProcessWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetWorkflowProcess(Therefore.WebAPI.GetWorkflowProcessParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetWorkflowProcessResponse EndGetWorkflowProcess(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/HasPermissions", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/HasPermissionsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/HasPermissionsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginHasPermissions(Therefore.WebAPI.HasPermissionsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.HasPermissionsResponse EndHasPermissions(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/LinkDocAndWFInstance", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/LinkDocAndWFInstanceResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/LinkDocAndWFInstanceWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginLinkDocAndWFInstance(Therefore.WebAPI.LinkDocAndWFInstanceParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.LinkDocAndWFInstanceResponse EndLinkDocAndWFInstance(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/LinkDocuments", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/LinkDocumentsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/LinkDocumentsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginLinkDocuments(Therefore.WebAPI.LinkDocumentsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.LinkDocumentsResponse EndLinkDocuments(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReleaseFullTextQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReleaseFullTextQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReleaseFullTextQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginReleaseFullTextQuery(Therefore.WebAPI.ReleaseFullTextQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ReleaseFullTextQueryResponse EndReleaseFullTextQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReleaseMultiQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReleaseMultiQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReleaseMultiQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginReleaseMultiQuery(Therefore.WebAPI.ReleaseMultiQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ReleaseMultiQueryResponse EndReleaseMultiQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReleaseSingleQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReleaseSingleQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ReleaseSingleQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginReleaseSingleQuery(Therefore.WebAPI.ReleaseSingleQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ReleaseSingleQueryResponse EndReleaseSingleQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveCaseIndexData", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveCaseIndexDataResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveCaseIndexDataWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSaveCaseIndexData(Therefore.WebAPI.SaveCaseIndexDataParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SaveCaseIndexDataResponse EndSaveCaseIndexData(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveCaseIndexDataQuick", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveCaseIndexDataQuickResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveCaseIndexDataQuickWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSaveCaseIndexDataQuick(Therefore.WebAPI.SaveCaseIndexDataQuickParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SaveCaseIndexDataQuickResponse EndSaveCaseIndexDataQuick(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveDocumentIndexData", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveDocumentIndexDataResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveDocumentIndexDataWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSaveDocumentIndexData(Therefore.WebAPI.SaveDocumentIndexDataParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SaveDocumentIndexDataResponse EndSaveDocumentIndexData(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveDocumentIndexDataQuick", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveDocumentIndexDataQuickResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveDocumentIndexDataQuickWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSaveDocumentIndexDataQuick(Therefore.WebAPI.SaveDocumentIndexDataQuickParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SaveDocumentIndexDataQuickResponse EndSaveDocumentIndexDataQuick(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetChecklistItemWorkflow", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetChecklistItemWorkflowResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetChecklistItemWorkflowWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSetChecklistItemWorkflow(Therefore.WebAPI.SetChecklistItemWorkflowParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SetChecklistItemWorkflowResponse EndSetChecklistItemWorkflow(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetTaskStatus", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetTaskStatusResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetTaskStatusWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSetTaskStatus(Therefore.WebAPI.SetTaskStatusParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SetTaskStatusResponse EndSetTaskStatus(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetTextInfoWorkflow", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetTextInfoWorkflowResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SetTextInfoWorkflowWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSetTextInfoWorkflow(Therefore.WebAPI.SetTextInfoWorkflowParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SetTextInfoWorkflowResponse EndSetTextInfoWorkflow(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartCreateDocumentBatch", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartCreateDocumentBatchResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartCreateDocumentBatchWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginStartCreateDocumentBatch(Therefore.WebAPI.StartCreateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.StartCreateDocumentBatchResponse EndStartCreateDocumentBatch(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartTask", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartTaskResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartTaskWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginStartTask(Therefore.WebAPI.StartTaskParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.StartTaskResponse EndStartTask(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartUpdateDocumentBatch", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartUpdateDocumentBatchResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartUpdateDocumentBatchWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginStartUpdateDocumentBatch(Therefore.WebAPI.StartUpdateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.StartUpdateDocumentBatchResponse EndStartUpdateDocumentBatch(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartWorkflowInstance", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartWorkflowInstanceResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/StartWorkflowInstanceWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginStartWorkflowInstance(Therefore.WebAPI.StartWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.StartWorkflowInstanceResponse EndStartWorkflowInstance(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SubmitCreateDocumentBatch", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SubmitCreateDocumentBatchResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SubmitCreateDocumentBatchWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSubmitCreateDocumentBatch(Therefore.WebAPI.SubmitCreateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SubmitCreateDocumentBatchResponse EndSubmitCreateDocumentBatch(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SubmitUpdateDocumentBatch", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SubmitUpdateDocumentBatchResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SubmitUpdateDocumentBatchWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSubmitUpdateDocumentBatch(Therefore.WebAPI.SubmitUpdateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SubmitUpdateDocumentBatchResponse EndSubmitUpdateDocumentBatch(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UnlinkDocAndWFInstance", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UnlinkDocAndWFInstanceResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UnlinkDocAndWFInstanceWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUnlinkDocAndWFInstance(Therefore.WebAPI.UnlinkDocAndWFInstanceParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UnlinkDocAndWFInstanceResponse EndUnlinkDocAndWFInstance(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UnlinkDocuments", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UnlinkDocumentsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UnlinkDocumentsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUnlinkDocuments(Therefore.WebAPI.UnlinkDocumentsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UnlinkDocumentsResponse EndUnlinkDocuments(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateDictionaryKeyword", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateDictionaryKeywordResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateDictionaryKeywordWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUpdateDictionaryKeyword(Therefore.WebAPI.UpdateDictionaryKeywordParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UpdateDictionaryKeywordResponse EndUpdateDictionaryKeyword(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateDocument", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateDocumentResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateDocumentWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUpdateDocument(Therefore.WebAPI.UpdateDocumentParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UpdateDocumentResponse EndUpdateDocument(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateTask", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateTaskResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateTaskWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUpdateTask(Therefore.WebAPI.UpdateTaskParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UpdateTaskResponse EndUpdateTask(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateTaskComment", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateTaskCommentResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UpdateTaskCommentWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUpdateTaskComment(Therefore.WebAPI.UpdateTaskCommentParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UpdateTaskCommentResponse EndUpdateTaskComment(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadDocStreamToBatch", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadDocStreamToBatchResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadDocStreamToBatchWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUploadDocStreamToBatch(Therefore.WebAPI.UploadDocStreamToBatchParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UploadDocStreamToBatchResponse EndUploadDocStreamToBatch(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteDependentFieldsQuery", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteDependentFieldsQueryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ExecuteDependentFieldsQueryWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginExecuteDependentFieldsQuery(Therefore.WebAPI.ExecuteDependentFieldsQueryParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ExecuteDependentFieldsQueryResponse EndExecuteDependentFieldsQuery(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ValidateKeywords", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ValidateKeywordsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ValidateKeywordsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginValidateKeywords(Therefore.WebAPI.ValidateKeywordsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ValidateKeywordsResponse EndValidateKeywords(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConnectionToken", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConnectionTokenResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConnectionTokenWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetConnectionToken(Therefore.WebAPI.GetConnectionTokenParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetConnectionTokenResponse EndGetConnectionToken(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConnectionTokenFromADFSToken", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConnectionTokenFromADFSTokenResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetConnectionTokenFromADFSTokenWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetConnectionTokenFromADFSToken(Therefore.WebAPI.GetConnectionTokenFromADFSTokenParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetConnectionTokenFromADFSTokenResponse EndGetConnectionTokenFromADFSToken(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetJWTToken", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetJWTTokenResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetJWTTokenWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetJWTToken(Therefore.WebAPI.GetJWTTokenParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetJWTTokenResponse EndGetJWTToken(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ClearWorkflowInstanceErrors", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ClearWorkflowInstanceErrorsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/ClearWorkflowInstanceErrorsWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginClearWorkflowInstanceErrors(Therefore.WebAPI.ClearWorkflowInstanceErrorsParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.ClearWorkflowInstanceErrorsResponse EndClearWorkflowInstanceErrors(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CheckOutDocument", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CheckOutDocumentResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CheckOutDocumentWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginCheckOutDocument(Therefore.WebAPI.CheckOutDocumentParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.CheckOutDocumentResponse EndCheckOutDocument(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/TestCheckOutDocument", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/TestCheckOutDocumentResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/TestCheckOutDocumentWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginTestCheckOutDocument(Therefore.WebAPI.TestCheckOutDocumentParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.TestCheckOutDocumentResponse EndTestCheckOutDocument(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CheckInDocument", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CheckInDocumentResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/CheckInDocumentWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginCheckInDocument(Therefore.WebAPI.CheckInDocumentParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.CheckInDocumentResponse EndCheckInDocument(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UndoCheckOutDocument", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UndoCheckOutDocumentResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UndoCheckOutDocumentWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUndoCheckOutDocument(Therefore.WebAPI.UndoCheckOutDocumentParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UndoCheckOutDocumentResponse EndUndoCheckOutDocument(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetSystemCustomerId", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetSystemCustomerIdResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetSystemCustomerIdWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetSystemCustomerId(System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetSystemCustomerIdResponse EndGetSystemCustomerId(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveEForm", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveEFormResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveEFormWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSaveEForm(Therefore.WebAPI.SaveEFormParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SaveEFormResponse EndSaveEForm(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteEForm", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteEFormResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/DeleteEFormWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginDeleteEForm(Therefore.WebAPI.DeleteEFormParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.DeleteEFormResponse EndDeleteEForm(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetEForm", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetEFormResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetEFormWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetEForm(Therefore.WebAPI.GetEFormParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetEFormResponse EndGetEForm(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SubmitEForm", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SubmitEFormResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SubmitEFormWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSubmitEForm(Therefore.WebAPI.SubmitEFormParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SubmitEFormResponse EndSubmitEForm(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetKeywordsByKeyDic", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetKeywordsByKeyDicResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetKeywordsByKeyDicWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetKeywordsByKeyDic(Therefore.WebAPI.GetKeywordsByKeyDicParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetKeywordsByFieldNoResponse EndGetKeywordsByKeyDic(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadEFormFile", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadEFormFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/UploadEFormFileWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginUploadEFormFile(byte[] Uploading, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.UploadEFormFileResponse EndUploadEFormFile(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetUploadedEFormFile", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetUploadedEFormFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetUploadedEFormFileWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetUploadedEFormFile(string sFileId, System.AsyncCallback callback, object asyncState);

    byte[] EndGetUploadedEFormFile(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveEFormDefaultSubmission", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveEFormDefaultSubmissionResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/SaveEFormDefaultSubmissionWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginSaveEFormDefaultSubmission(Therefore.WebAPI.SaveEFormDefaultSubmissionParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.SaveEFormDefaultSubmissionResponse EndSaveEFormDefaultSubmission(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetFolder", ReplyAction = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetFolderResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Therefore.WebAPI.WSFaultDetails), Action = "http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
        "/GetFolderWSFaultDetailsFault", Name = "WSFaultDetails", Namespace = "http://schemas.therefore.net/webservices/interop/v0001/types")]
    System.IAsyncResult BeginGetFolder(Therefore.WebAPI.GetFolderParams parameters, System.AsyncCallback callback, object asyncState);

    Therefore.WebAPI.GetFolderResponse EndGetFolder(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IThereforeServiceChannel : IThereforeService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SaveFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SaveFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SaveFolderReponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SaveFolderReponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DeleteFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.DeleteFolderResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.DeleteFolderResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SetParentFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SetParentFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SetParentFolderResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SetParentFolderResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class QueryDependentFieldsDirectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public QueryDependentFieldsDirectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.QueryDependentFieldsDirectResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.QueryDependentFieldsDirectResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetReferencedTableInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetReferencedTableInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetReferencedTableInfoResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetReferencedTableInfoResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class VerifyReCaptchaTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public VerifyReCaptchaTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.VerifyReCaptchaResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.VerifyReCaptchaResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SaveEFormDraftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SaveEFormDraftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SaveEFormDraftResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SaveEFormDraftResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SearchEFormSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SearchEFormSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SearchEFormSubmissionResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SearchEFormSubmissionResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ClearLocalCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ClearLocalCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ClearLocalCacheResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ClearLocalCacheResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RenameObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public RenameObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.RenameObjectResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.RenameObjectResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteEFormDraftSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DeleteEFormDraftSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.DeleteEFormDraftSubmissionResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.DeleteEFormDraftSubmissionResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CopyEFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public CopyEFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.CopyEFormResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.CopyEFormResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class HandleESignaturePushNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public HandleESignaturePushNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.HandleESignaturePushResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.HandleESignaturePushResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetClientDiscoveryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetClientDiscoveryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetClientDiscoveryInfoResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetClientDiscoveryInfoResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UploadSessionStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UploadSessionStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UploadSessionStartResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UploadSessionStartResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UploadSessionAppendChunkRawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UploadSessionAppendChunkRawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UploadSessionAppendChunkRawResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UploadSessionAppendChunkRawResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MoveUserLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public MoveUserLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.MoveUserLicenseResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.MoveUserLicenseResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SignOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SignOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SignOutResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SignOutResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AddDictionaryKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public AddDictionaryKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.AddDictionaryKeywordResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.AddDictionaryKeywordResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AddStreamsToDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public AddStreamsToDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.AddStreamsToDocumentResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.AddStreamsToDocumentResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ClaimWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ClaimWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ClaimWorkflowInstanceResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ClaimWorkflowInstanceResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CloseCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public CloseCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.CloseCaseResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.CloseCaseResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ReopenCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ReopenCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ReopenCaseResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ReopenCaseResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CompleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public CompleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.CompleteTaskResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.CompleteTaskResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CreateCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public CreateCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.CreateCaseResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.CreateCaseResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class PreprocessIndexDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public PreprocessIndexDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.PreprocessIndexDataResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.PreprocessIndexDataResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class PreprocessTableRowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public PreprocessTableRowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.PreprocessTableRowResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.PreprocessTableRowResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CreateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public CreateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.CreateDocumentResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.CreateDocumentResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CreateLinkFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public CreateLinkFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.CreateLinkFileResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.CreateLinkFileResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DelegateWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DelegateWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.DelegateWorkflowInstanceResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.DelegateWorkflowInstanceResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DeleteCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.DeleteCaseResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.DeleteCaseResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteDictionaryKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DeleteDictionaryKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.DeleteDictionaryKeywordResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.DeleteDictionaryKeywordResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DeleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.DeleteDocumentResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.DeleteDocumentResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DeleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.DeleteTaskResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.DeleteTaskResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DeleteWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.DeleteWorkflowInstanceResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.DeleteWorkflowInstanceResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DisclaimWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DisclaimWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.DisclaimWorkflowInstanceResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.DisclaimWorkflowInstanceResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class EraseAllObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public EraseAllObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.EraseAllObjectsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.EraseAllObjectsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class EraseObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public EraseObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.EraseObjectsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.EraseObjectsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteAsyncFullTextQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteAsyncFullTextQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteAsyncFullTextQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteAsyncFullTextQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteAsyncMultiQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteAsyncMultiQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteAsyncMultiQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteAsyncMultiQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteAsyncSingleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteAsyncSingleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteAsyncSingleQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteAsyncSingleQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteFullTextQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteFullTextQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteFullTextQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteFullTextQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteMultiQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteMultiQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteMultiQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteMultiQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteReportResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteReportResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteSimpleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteSimpleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteSimpleQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteSimpleQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteSingleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteSingleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteSingleQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteSingleQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteTaskInfoQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteTaskInfoQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteTaskInfoQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteTaskInfoQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteUsersQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteUsersQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteUsersQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteUsersQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetUserDetailsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetUserDetailsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteWorkflowQueryForAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteWorkflowQueryForAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteWorkflowQueryForAllResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteWorkflowQueryForAllResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteWorkflowQueryForProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteWorkflowQueryForProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteWorkflowQueryForProcessResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteWorkflowQueryForProcessResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class FillDependentFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public FillDependentFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.FillDependentFieldsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.FillDependentFieldsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class FinishCurrentWorkflowTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public FinishCurrentWorkflowTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.FinishCurrentWorkflowTaskResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.FinishCurrentWorkflowTaskResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllTreeViewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetAllTreeViewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetAllTreeViewsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetAllTreeViewsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetCaseResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetCaseResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCaseDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetCaseDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetCaseDefinitionResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetCaseDefinitionResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCaseDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetCaseDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetCaseDocumentsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetCaseDocumentsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCaseHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetCaseHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetCaseHistoryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetCaseHistoryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCategoriesTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetCategoriesTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetCategoriesTreeResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetCategoriesTreeResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCategoryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetCategoryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetCategoryInfoResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetCategoryInfoResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetConnectedUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetConnectedUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetConnectedUserResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetConnectedUserResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetConvertedDocStreamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetConvertedDocStreamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetConvertedDocStreamsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetConvertedDocStreamsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetConvertedDocStreamsRawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetConvertedDocStreamsRawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public byte[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDictionaryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetDictionaryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetDictionaryInfoResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetDictionaryInfoResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetDocumentResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetDocumentResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDocumentCheckoutStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetDocumentCheckoutStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetDocumentCheckoutStateResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetDocumentCheckoutStateResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDocumentIndexDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetDocumentIndexDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetDocumentIndexDataResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetDocumentIndexDataResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDocumentPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetDocumentPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetDocumentPropertiesResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetDocumentPropertiesResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDocumentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetDocumentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetDocumentHistoryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetDocumentHistoryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDocumentStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetDocumentStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetDocumentStreamResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetDocumentStreamResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDocumentStreamRawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetDocumentStreamRawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public byte[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDomainInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetDomainInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetDomainInfoResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetDomainInfoResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetKeywordsByFieldNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetKeywordsByFieldNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetKeywordsByFieldNoResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetKeywordsByFieldNoResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetLinkedObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetLinkedObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetLinkedObjectsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetLinkedObjectsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetLinkedWorkflowsForDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetLinkedWorkflowsForDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetLinkedWorkflowsForDocResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetLinkedWorkflowsForDocResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetNextFullTextQueryRowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetNextFullTextQueryRowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetNextFullTextQueryRowsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetNextFullTextQueryRowsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetNextMultiQueryRowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetNextMultiQueryRowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetNextMultiQueryRowsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetNextMultiQueryRowsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetNextSingleQueryRowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetNextSingleQueryRowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetNextSingleQueryRowsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetNextSingleQueryRowsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetObjectRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetObjectRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetObjectRightsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetObjectRightsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetPermissionsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetPermissionsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetObjectsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetObjectsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetPermissionConstantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetPermissionConstantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetPermissionConstantsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetPermissionConstantsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetQuerySpecificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetQuerySpecificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.QuerySpecificationResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.QuerySpecificationResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetReportDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetReportDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetReportDefinitionResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetReportDefinitionResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetSettingIntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetSettingIntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetSettingIntResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetSettingIntResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetSettingStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetSettingStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetSettingStringResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetSettingStringResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetPublicSettingIntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetPublicSettingIntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetPublicSettingIntResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetPublicSettingIntResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetPublicSettingStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetPublicSettingStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetPublicSettingStringResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetPublicSettingStringResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetTaskResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetTaskResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetTaskInfoResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetTaskInfoResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetThumbnailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetThumbnailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetThumbnailResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetThumbnailResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTreeViewChildNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetTreeViewChildNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetTreeViewChildNodesResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetTreeViewChildNodesResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTreeViewNodeDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetTreeViewNodeDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetTreeViewNodeDocumentsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetTreeViewNodeDocumentsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTreeViewChildNodesAndDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetTreeViewChildNodesAndDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetWebAPIServerVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetWebAPIServerVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetWebAPIServerVersionResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetWebAPIServerVersionResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetWorkflowInstanceResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetWorkflowInstanceResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetWorkflowProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetWorkflowProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetWorkflowProcessResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetWorkflowProcessResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class HasPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public HasPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.HasPermissionsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.HasPermissionsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class LinkDocAndWFInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public LinkDocAndWFInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.LinkDocAndWFInstanceResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.LinkDocAndWFInstanceResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class LinkDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public LinkDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.LinkDocumentsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.LinkDocumentsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ReleaseFullTextQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ReleaseFullTextQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ReleaseFullTextQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ReleaseFullTextQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ReleaseMultiQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ReleaseMultiQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ReleaseMultiQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ReleaseMultiQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ReleaseSingleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ReleaseSingleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ReleaseSingleQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ReleaseSingleQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SaveCaseIndexDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SaveCaseIndexDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SaveCaseIndexDataResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SaveCaseIndexDataResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SaveCaseIndexDataQuickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SaveCaseIndexDataQuickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SaveCaseIndexDataQuickResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SaveCaseIndexDataQuickResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SaveDocumentIndexDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SaveDocumentIndexDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SaveDocumentIndexDataResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SaveDocumentIndexDataResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SaveDocumentIndexDataQuickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SaveDocumentIndexDataQuickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SaveDocumentIndexDataQuickResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SaveDocumentIndexDataQuickResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SetChecklistItemWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SetChecklistItemWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SetChecklistItemWorkflowResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SetChecklistItemWorkflowResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SetTaskStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SetTaskStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SetTaskStatusResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SetTaskStatusResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SetTextInfoWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SetTextInfoWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SetTextInfoWorkflowResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SetTextInfoWorkflowResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class StartCreateDocumentBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public StartCreateDocumentBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.StartCreateDocumentBatchResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.StartCreateDocumentBatchResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class StartTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public StartTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.StartTaskResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.StartTaskResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class StartUpdateDocumentBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public StartUpdateDocumentBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.StartUpdateDocumentBatchResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.StartUpdateDocumentBatchResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class StartWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public StartWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.StartWorkflowInstanceResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.StartWorkflowInstanceResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SubmitCreateDocumentBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SubmitCreateDocumentBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SubmitCreateDocumentBatchResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SubmitCreateDocumentBatchResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SubmitUpdateDocumentBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SubmitUpdateDocumentBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SubmitUpdateDocumentBatchResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SubmitUpdateDocumentBatchResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UnlinkDocAndWFInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UnlinkDocAndWFInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UnlinkDocAndWFInstanceResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UnlinkDocAndWFInstanceResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UnlinkDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UnlinkDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UnlinkDocumentsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UnlinkDocumentsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UpdateDictionaryKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UpdateDictionaryKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UpdateDictionaryKeywordResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UpdateDictionaryKeywordResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UpdateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UpdateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UpdateDocumentResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UpdateDocumentResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UpdateTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UpdateTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UpdateTaskResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UpdateTaskResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UpdateTaskCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UpdateTaskCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UpdateTaskCommentResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UpdateTaskCommentResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UploadDocStreamToBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UploadDocStreamToBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UploadDocStreamToBatchResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UploadDocStreamToBatchResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteDependentFieldsQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ExecuteDependentFieldsQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ExecuteDependentFieldsQueryResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ExecuteDependentFieldsQueryResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ValidateKeywordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ValidateKeywordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ValidateKeywordsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ValidateKeywordsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetConnectionTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetConnectionTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetConnectionTokenResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetConnectionTokenResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetConnectionTokenFromADFSTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetConnectionTokenFromADFSTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetConnectionTokenFromADFSTokenResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetConnectionTokenFromADFSTokenResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetJWTTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetJWTTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetJWTTokenResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetJWTTokenResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ClearWorkflowInstanceErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ClearWorkflowInstanceErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.ClearWorkflowInstanceErrorsResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.ClearWorkflowInstanceErrorsResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CheckOutDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public CheckOutDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.CheckOutDocumentResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.CheckOutDocumentResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class TestCheckOutDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public TestCheckOutDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.TestCheckOutDocumentResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.TestCheckOutDocumentResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CheckInDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public CheckInDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.CheckInDocumentResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.CheckInDocumentResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UndoCheckOutDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UndoCheckOutDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UndoCheckOutDocumentResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UndoCheckOutDocumentResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetSystemCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetSystemCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetSystemCustomerIdResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetSystemCustomerIdResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SaveEFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SaveEFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SaveEFormResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SaveEFormResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteEFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DeleteEFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.DeleteEFormResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.DeleteEFormResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetEFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetEFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetEFormResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetEFormResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SubmitEFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SubmitEFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SubmitEFormResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SubmitEFormResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetKeywordsByKeyDicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetKeywordsByKeyDicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetKeywordsByFieldNoResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetKeywordsByFieldNoResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UploadEFormFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public UploadEFormFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.UploadEFormFileResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.UploadEFormFileResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetUploadedEFormFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetUploadedEFormFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public byte[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SaveEFormDefaultSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public SaveEFormDefaultSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.SaveEFormDefaultSubmissionResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.SaveEFormDefaultSubmissionResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public Therefore.WebAPI.GetFolderResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Therefore.WebAPI.GetFolderResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ThereforeServiceClient : System.ServiceModel.ClientBase<IThereforeService>, IThereforeService
{

    private BeginOperationDelegate onBeginSaveFolderDelegate;

    private EndOperationDelegate onEndSaveFolderDelegate;

    private System.Threading.SendOrPostCallback onSaveFolderCompletedDelegate;

    private BeginOperationDelegate onBeginDeleteFolderDelegate;

    private EndOperationDelegate onEndDeleteFolderDelegate;

    private System.Threading.SendOrPostCallback onDeleteFolderCompletedDelegate;

    private BeginOperationDelegate onBeginSetParentFolderDelegate;

    private EndOperationDelegate onEndSetParentFolderDelegate;

    private System.Threading.SendOrPostCallback onSetParentFolderCompletedDelegate;

    private BeginOperationDelegate onBeginQueryDependentFieldsDirectDelegate;

    private EndOperationDelegate onEndQueryDependentFieldsDirectDelegate;

    private System.Threading.SendOrPostCallback onQueryDependentFieldsDirectCompletedDelegate;

    private BeginOperationDelegate onBeginGetReferencedTableInfoDelegate;

    private EndOperationDelegate onEndGetReferencedTableInfoDelegate;

    private System.Threading.SendOrPostCallback onGetReferencedTableInfoCompletedDelegate;

    private BeginOperationDelegate onBeginVerifyReCaptchaTokenDelegate;

    private EndOperationDelegate onEndVerifyReCaptchaTokenDelegate;

    private System.Threading.SendOrPostCallback onVerifyReCaptchaTokenCompletedDelegate;

    private BeginOperationDelegate onBeginSaveEFormDraftDelegate;

    private EndOperationDelegate onEndSaveEFormDraftDelegate;

    private System.Threading.SendOrPostCallback onSaveEFormDraftCompletedDelegate;

    private BeginOperationDelegate onBeginSearchEFormSubmissionDelegate;

    private EndOperationDelegate onEndSearchEFormSubmissionDelegate;

    private System.Threading.SendOrPostCallback onSearchEFormSubmissionCompletedDelegate;

    private BeginOperationDelegate onBeginClearLocalCacheDelegate;

    private EndOperationDelegate onEndClearLocalCacheDelegate;

    private System.Threading.SendOrPostCallback onClearLocalCacheCompletedDelegate;

    private BeginOperationDelegate onBeginRenameObjectDelegate;

    private EndOperationDelegate onEndRenameObjectDelegate;

    private System.Threading.SendOrPostCallback onRenameObjectCompletedDelegate;

    private BeginOperationDelegate onBeginDeleteEFormDraftSubmissionDelegate;

    private EndOperationDelegate onEndDeleteEFormDraftSubmissionDelegate;

    private System.Threading.SendOrPostCallback onDeleteEFormDraftSubmissionCompletedDelegate;

    private BeginOperationDelegate onBeginCopyEFormDelegate;

    private EndOperationDelegate onEndCopyEFormDelegate;

    private System.Threading.SendOrPostCallback onCopyEFormCompletedDelegate;

    private BeginOperationDelegate onBeginHandleESignaturePushNotificationDelegate;

    private EndOperationDelegate onEndHandleESignaturePushNotificationDelegate;

    private System.Threading.SendOrPostCallback onHandleESignaturePushNotificationCompletedDelegate;

    private BeginOperationDelegate onBeginGetClientDiscoveryInfoDelegate;

    private EndOperationDelegate onEndGetClientDiscoveryInfoDelegate;

    private System.Threading.SendOrPostCallback onGetClientDiscoveryInfoCompletedDelegate;

    private BeginOperationDelegate onBeginUploadSessionStartDelegate;

    private EndOperationDelegate onEndUploadSessionStartDelegate;

    private System.Threading.SendOrPostCallback onUploadSessionStartCompletedDelegate;

    private BeginOperationDelegate onBeginUploadSessionAppendChunkRawDelegate;

    private EndOperationDelegate onEndUploadSessionAppendChunkRawDelegate;

    private System.Threading.SendOrPostCallback onUploadSessionAppendChunkRawCompletedDelegate;

    private BeginOperationDelegate onBeginCrossOriginOptionsSupportDelegate;

    private EndOperationDelegate onEndCrossOriginOptionsSupportDelegate;

    private System.Threading.SendOrPostCallback onCrossOriginOptionsSupportCompletedDelegate;

    private BeginOperationDelegate onBeginMoveUserLicenseDelegate;

    private EndOperationDelegate onEndMoveUserLicenseDelegate;

    private System.Threading.SendOrPostCallback onMoveUserLicenseCompletedDelegate;

    private BeginOperationDelegate onBeginSignOutDelegate;

    private EndOperationDelegate onEndSignOutDelegate;

    private System.Threading.SendOrPostCallback onSignOutCompletedDelegate;

    private BeginOperationDelegate onBeginAddDictionaryKeywordDelegate;

    private EndOperationDelegate onEndAddDictionaryKeywordDelegate;

    private System.Threading.SendOrPostCallback onAddDictionaryKeywordCompletedDelegate;

    private BeginOperationDelegate onBeginAddStreamsToDocumentDelegate;

    private EndOperationDelegate onEndAddStreamsToDocumentDelegate;

    private System.Threading.SendOrPostCallback onAddStreamsToDocumentCompletedDelegate;

    private BeginOperationDelegate onBeginClaimWorkflowInstanceDelegate;

    private EndOperationDelegate onEndClaimWorkflowInstanceDelegate;

    private System.Threading.SendOrPostCallback onClaimWorkflowInstanceCompletedDelegate;

    private BeginOperationDelegate onBeginCloseCaseDelegate;

    private EndOperationDelegate onEndCloseCaseDelegate;

    private System.Threading.SendOrPostCallback onCloseCaseCompletedDelegate;

    private BeginOperationDelegate onBeginReopenCaseDelegate;

    private EndOperationDelegate onEndReopenCaseDelegate;

    private System.Threading.SendOrPostCallback onReopenCaseCompletedDelegate;

    private BeginOperationDelegate onBeginCompleteTaskDelegate;

    private EndOperationDelegate onEndCompleteTaskDelegate;

    private System.Threading.SendOrPostCallback onCompleteTaskCompletedDelegate;

    private BeginOperationDelegate onBeginCreateCaseDelegate;

    private EndOperationDelegate onEndCreateCaseDelegate;

    private System.Threading.SendOrPostCallback onCreateCaseCompletedDelegate;

    private BeginOperationDelegate onBeginPreprocessIndexDataDelegate;

    private EndOperationDelegate onEndPreprocessIndexDataDelegate;

    private System.Threading.SendOrPostCallback onPreprocessIndexDataCompletedDelegate;

    private BeginOperationDelegate onBeginPreprocessTableRowDelegate;

    private EndOperationDelegate onEndPreprocessTableRowDelegate;

    private System.Threading.SendOrPostCallback onPreprocessTableRowCompletedDelegate;

    private BeginOperationDelegate onBeginCreateDocumentDelegate;

    private EndOperationDelegate onEndCreateDocumentDelegate;

    private System.Threading.SendOrPostCallback onCreateDocumentCompletedDelegate;

    private BeginOperationDelegate onBeginCreateLinkFileDelegate;

    private EndOperationDelegate onEndCreateLinkFileDelegate;

    private System.Threading.SendOrPostCallback onCreateLinkFileCompletedDelegate;

    private BeginOperationDelegate onBeginDelegateWorkflowInstanceDelegate;

    private EndOperationDelegate onEndDelegateWorkflowInstanceDelegate;

    private System.Threading.SendOrPostCallback onDelegateWorkflowInstanceCompletedDelegate;

    private BeginOperationDelegate onBeginDeleteCaseDelegate;

    private EndOperationDelegate onEndDeleteCaseDelegate;

    private System.Threading.SendOrPostCallback onDeleteCaseCompletedDelegate;

    private BeginOperationDelegate onBeginDeleteDictionaryKeywordDelegate;

    private EndOperationDelegate onEndDeleteDictionaryKeywordDelegate;

    private System.Threading.SendOrPostCallback onDeleteDictionaryKeywordCompletedDelegate;

    private BeginOperationDelegate onBeginDeleteDocumentDelegate;

    private EndOperationDelegate onEndDeleteDocumentDelegate;

    private System.Threading.SendOrPostCallback onDeleteDocumentCompletedDelegate;

    private BeginOperationDelegate onBeginDeleteTaskDelegate;

    private EndOperationDelegate onEndDeleteTaskDelegate;

    private System.Threading.SendOrPostCallback onDeleteTaskCompletedDelegate;

    private BeginOperationDelegate onBeginDeleteWorkflowInstanceDelegate;

    private EndOperationDelegate onEndDeleteWorkflowInstanceDelegate;

    private System.Threading.SendOrPostCallback onDeleteWorkflowInstanceCompletedDelegate;

    private BeginOperationDelegate onBeginDisclaimWorkflowInstanceDelegate;

    private EndOperationDelegate onEndDisclaimWorkflowInstanceDelegate;

    private System.Threading.SendOrPostCallback onDisclaimWorkflowInstanceCompletedDelegate;

    private BeginOperationDelegate onBeginEraseAllObjectsDelegate;

    private EndOperationDelegate onEndEraseAllObjectsDelegate;

    private System.Threading.SendOrPostCallback onEraseAllObjectsCompletedDelegate;

    private BeginOperationDelegate onBeginEraseObjectsDelegate;

    private EndOperationDelegate onEndEraseObjectsDelegate;

    private System.Threading.SendOrPostCallback onEraseObjectsCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteAsyncFullTextQueryDelegate;

    private EndOperationDelegate onEndExecuteAsyncFullTextQueryDelegate;

    private System.Threading.SendOrPostCallback onExecuteAsyncFullTextQueryCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteAsyncMultiQueryDelegate;

    private EndOperationDelegate onEndExecuteAsyncMultiQueryDelegate;

    private System.Threading.SendOrPostCallback onExecuteAsyncMultiQueryCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteAsyncSingleQueryDelegate;

    private EndOperationDelegate onEndExecuteAsyncSingleQueryDelegate;

    private System.Threading.SendOrPostCallback onExecuteAsyncSingleQueryCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteFullTextQueryDelegate;

    private EndOperationDelegate onEndExecuteFullTextQueryDelegate;

    private System.Threading.SendOrPostCallback onExecuteFullTextQueryCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteMultiQueryDelegate;

    private EndOperationDelegate onEndExecuteMultiQueryDelegate;

    private System.Threading.SendOrPostCallback onExecuteMultiQueryCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteReportDelegate;

    private EndOperationDelegate onEndExecuteReportDelegate;

    private System.Threading.SendOrPostCallback onExecuteReportCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteSimpleQueryDelegate;

    private EndOperationDelegate onEndExecuteSimpleQueryDelegate;

    private System.Threading.SendOrPostCallback onExecuteSimpleQueryCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteSingleQueryDelegate;

    private EndOperationDelegate onEndExecuteSingleQueryDelegate;

    private System.Threading.SendOrPostCallback onExecuteSingleQueryCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteTaskInfoQueryDelegate;

    private EndOperationDelegate onEndExecuteTaskInfoQueryDelegate;

    private System.Threading.SendOrPostCallback onExecuteTaskInfoQueryCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteUsersQueryDelegate;

    private EndOperationDelegate onEndExecuteUsersQueryDelegate;

    private System.Threading.SendOrPostCallback onExecuteUsersQueryCompletedDelegate;

    private BeginOperationDelegate onBeginGetUserDetailsDelegate;

    private EndOperationDelegate onEndGetUserDetailsDelegate;

    private System.Threading.SendOrPostCallback onGetUserDetailsCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteWorkflowQueryForAllDelegate;

    private EndOperationDelegate onEndExecuteWorkflowQueryForAllDelegate;

    private System.Threading.SendOrPostCallback onExecuteWorkflowQueryForAllCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteWorkflowQueryForProcessDelegate;

    private EndOperationDelegate onEndExecuteWorkflowQueryForProcessDelegate;

    private System.Threading.SendOrPostCallback onExecuteWorkflowQueryForProcessCompletedDelegate;

    private BeginOperationDelegate onBeginFillDependentFieldsDelegate;

    private EndOperationDelegate onEndFillDependentFieldsDelegate;

    private System.Threading.SendOrPostCallback onFillDependentFieldsCompletedDelegate;

    private BeginOperationDelegate onBeginFinishCurrentWorkflowTaskDelegate;

    private EndOperationDelegate onEndFinishCurrentWorkflowTaskDelegate;

    private System.Threading.SendOrPostCallback onFinishCurrentWorkflowTaskCompletedDelegate;

    private BeginOperationDelegate onBeginGetAllTreeViewsDelegate;

    private EndOperationDelegate onEndGetAllTreeViewsDelegate;

    private System.Threading.SendOrPostCallback onGetAllTreeViewsCompletedDelegate;

    private BeginOperationDelegate onBeginGetCaseDelegate;

    private EndOperationDelegate onEndGetCaseDelegate;

    private System.Threading.SendOrPostCallback onGetCaseCompletedDelegate;

    private BeginOperationDelegate onBeginGetCaseDefinitionDelegate;

    private EndOperationDelegate onEndGetCaseDefinitionDelegate;

    private System.Threading.SendOrPostCallback onGetCaseDefinitionCompletedDelegate;

    private BeginOperationDelegate onBeginGetCaseDocumentsDelegate;

    private EndOperationDelegate onEndGetCaseDocumentsDelegate;

    private System.Threading.SendOrPostCallback onGetCaseDocumentsCompletedDelegate;

    private BeginOperationDelegate onBeginGetCaseHistoryDelegate;

    private EndOperationDelegate onEndGetCaseHistoryDelegate;

    private System.Threading.SendOrPostCallback onGetCaseHistoryCompletedDelegate;

    private BeginOperationDelegate onBeginGetCategoriesTreeDelegate;

    private EndOperationDelegate onEndGetCategoriesTreeDelegate;

    private System.Threading.SendOrPostCallback onGetCategoriesTreeCompletedDelegate;

    private BeginOperationDelegate onBeginGetCategoryInfoDelegate;

    private EndOperationDelegate onEndGetCategoryInfoDelegate;

    private System.Threading.SendOrPostCallback onGetCategoryInfoCompletedDelegate;

    private BeginOperationDelegate onBeginGetConnectedUserDelegate;

    private EndOperationDelegate onEndGetConnectedUserDelegate;

    private System.Threading.SendOrPostCallback onGetConnectedUserCompletedDelegate;

    private BeginOperationDelegate onBeginGetConvertedDocStreamsDelegate;

    private EndOperationDelegate onEndGetConvertedDocStreamsDelegate;

    private System.Threading.SendOrPostCallback onGetConvertedDocStreamsCompletedDelegate;

    private BeginOperationDelegate onBeginGetConvertedDocStreamsRawDelegate;

    private EndOperationDelegate onEndGetConvertedDocStreamsRawDelegate;

    private System.Threading.SendOrPostCallback onGetConvertedDocStreamsRawCompletedDelegate;

    private BeginOperationDelegate onBeginGetDictionaryInfoDelegate;

    private EndOperationDelegate onEndGetDictionaryInfoDelegate;

    private System.Threading.SendOrPostCallback onGetDictionaryInfoCompletedDelegate;

    private BeginOperationDelegate onBeginGetDocumentDelegate;

    private EndOperationDelegate onEndGetDocumentDelegate;

    private System.Threading.SendOrPostCallback onGetDocumentCompletedDelegate;

    private BeginOperationDelegate onBeginGetDocumentCheckoutStatusDelegate;

    private EndOperationDelegate onEndGetDocumentCheckoutStatusDelegate;

    private System.Threading.SendOrPostCallback onGetDocumentCheckoutStatusCompletedDelegate;

    private BeginOperationDelegate onBeginGetDocumentIndexDataDelegate;

    private EndOperationDelegate onEndGetDocumentIndexDataDelegate;

    private System.Threading.SendOrPostCallback onGetDocumentIndexDataCompletedDelegate;

    private BeginOperationDelegate onBeginGetDocumentPropertiesDelegate;

    private EndOperationDelegate onEndGetDocumentPropertiesDelegate;

    private System.Threading.SendOrPostCallback onGetDocumentPropertiesCompletedDelegate;

    private BeginOperationDelegate onBeginGetDocumentHistoryDelegate;

    private EndOperationDelegate onEndGetDocumentHistoryDelegate;

    private System.Threading.SendOrPostCallback onGetDocumentHistoryCompletedDelegate;

    private BeginOperationDelegate onBeginGetDocumentStreamDelegate;

    private EndOperationDelegate onEndGetDocumentStreamDelegate;

    private System.Threading.SendOrPostCallback onGetDocumentStreamCompletedDelegate;

    private BeginOperationDelegate onBeginGetDocumentStreamRawDelegate;

    private EndOperationDelegate onEndGetDocumentStreamRawDelegate;

    private System.Threading.SendOrPostCallback onGetDocumentStreamRawCompletedDelegate;

    private BeginOperationDelegate onBeginGetDomainInfoDelegate;

    private EndOperationDelegate onEndGetDomainInfoDelegate;

    private System.Threading.SendOrPostCallback onGetDomainInfoCompletedDelegate;

    private BeginOperationDelegate onBeginGetKeywordsByFieldNoDelegate;

    private EndOperationDelegate onEndGetKeywordsByFieldNoDelegate;

    private System.Threading.SendOrPostCallback onGetKeywordsByFieldNoCompletedDelegate;

    private BeginOperationDelegate onBeginGetLinkedObjectsDelegate;

    private EndOperationDelegate onEndGetLinkedObjectsDelegate;

    private System.Threading.SendOrPostCallback onGetLinkedObjectsCompletedDelegate;

    private BeginOperationDelegate onBeginGetLinkedWorkflowsForDocDelegate;

    private EndOperationDelegate onEndGetLinkedWorkflowsForDocDelegate;

    private System.Threading.SendOrPostCallback onGetLinkedWorkflowsForDocCompletedDelegate;

    private BeginOperationDelegate onBeginGetNextFullTextQueryRowsDelegate;

    private EndOperationDelegate onEndGetNextFullTextQueryRowsDelegate;

    private System.Threading.SendOrPostCallback onGetNextFullTextQueryRowsCompletedDelegate;

    private BeginOperationDelegate onBeginGetNextMultiQueryRowsDelegate;

    private EndOperationDelegate onEndGetNextMultiQueryRowsDelegate;

    private System.Threading.SendOrPostCallback onGetNextMultiQueryRowsCompletedDelegate;

    private BeginOperationDelegate onBeginGetNextSingleQueryRowsDelegate;

    private EndOperationDelegate onEndGetNextSingleQueryRowsDelegate;

    private System.Threading.SendOrPostCallback onGetNextSingleQueryRowsCompletedDelegate;

    private BeginOperationDelegate onBeginGetObjectRightsDelegate;

    private EndOperationDelegate onEndGetObjectRightsDelegate;

    private System.Threading.SendOrPostCallback onGetObjectRightsCompletedDelegate;

    private BeginOperationDelegate onBeginGetPermissionsDelegate;

    private EndOperationDelegate onEndGetPermissionsDelegate;

    private System.Threading.SendOrPostCallback onGetPermissionsCompletedDelegate;

    private BeginOperationDelegate onBeginGetObjectsDelegate;

    private EndOperationDelegate onEndGetObjectsDelegate;

    private System.Threading.SendOrPostCallback onGetObjectsCompletedDelegate;

    private BeginOperationDelegate onBeginGetPermissionConstantsDelegate;

    private EndOperationDelegate onEndGetPermissionConstantsDelegate;

    private System.Threading.SendOrPostCallback onGetPermissionConstantsCompletedDelegate;

    private BeginOperationDelegate onBeginGetQuerySpecificationDelegate;

    private EndOperationDelegate onEndGetQuerySpecificationDelegate;

    private System.Threading.SendOrPostCallback onGetQuerySpecificationCompletedDelegate;

    private BeginOperationDelegate onBeginGetReportDefinitionDelegate;

    private EndOperationDelegate onEndGetReportDefinitionDelegate;

    private System.Threading.SendOrPostCallback onGetReportDefinitionCompletedDelegate;

    private BeginOperationDelegate onBeginGetSettingIntDelegate;

    private EndOperationDelegate onEndGetSettingIntDelegate;

    private System.Threading.SendOrPostCallback onGetSettingIntCompletedDelegate;

    private BeginOperationDelegate onBeginGetSettingStringDelegate;

    private EndOperationDelegate onEndGetSettingStringDelegate;

    private System.Threading.SendOrPostCallback onGetSettingStringCompletedDelegate;

    private BeginOperationDelegate onBeginGetPublicSettingIntDelegate;

    private EndOperationDelegate onEndGetPublicSettingIntDelegate;

    private System.Threading.SendOrPostCallback onGetPublicSettingIntCompletedDelegate;

    private BeginOperationDelegate onBeginGetPublicSettingStringDelegate;

    private EndOperationDelegate onEndGetPublicSettingStringDelegate;

    private System.Threading.SendOrPostCallback onGetPublicSettingStringCompletedDelegate;

    private BeginOperationDelegate onBeginGetTaskDelegate;

    private EndOperationDelegate onEndGetTaskDelegate;

    private System.Threading.SendOrPostCallback onGetTaskCompletedDelegate;

    private BeginOperationDelegate onBeginGetTaskInfoDelegate;

    private EndOperationDelegate onEndGetTaskInfoDelegate;

    private System.Threading.SendOrPostCallback onGetTaskInfoCompletedDelegate;

    private BeginOperationDelegate onBeginGetThumbnailDelegate;

    private EndOperationDelegate onEndGetThumbnailDelegate;

    private System.Threading.SendOrPostCallback onGetThumbnailCompletedDelegate;

    private BeginOperationDelegate onBeginGetTreeViewChildNodesDelegate;

    private EndOperationDelegate onEndGetTreeViewChildNodesDelegate;

    private System.Threading.SendOrPostCallback onGetTreeViewChildNodesCompletedDelegate;

    private BeginOperationDelegate onBeginGetTreeViewNodeDocumentsDelegate;

    private EndOperationDelegate onEndGetTreeViewNodeDocumentsDelegate;

    private System.Threading.SendOrPostCallback onGetTreeViewNodeDocumentsCompletedDelegate;

    private BeginOperationDelegate onBeginGetTreeViewChildNodesAndDocumentsDelegate;

    private EndOperationDelegate onEndGetTreeViewChildNodesAndDocumentsDelegate;

    private System.Threading.SendOrPostCallback onGetTreeViewChildNodesAndDocumentsCompletedDelegate;

    private BeginOperationDelegate onBeginGetWebAPIServerVersionDelegate;

    private EndOperationDelegate onEndGetWebAPIServerVersionDelegate;

    private System.Threading.SendOrPostCallback onGetWebAPIServerVersionCompletedDelegate;

    private BeginOperationDelegate onBeginGetWorkflowInstanceDelegate;

    private EndOperationDelegate onEndGetWorkflowInstanceDelegate;

    private System.Threading.SendOrPostCallback onGetWorkflowInstanceCompletedDelegate;

    private BeginOperationDelegate onBeginGetWorkflowProcessDelegate;

    private EndOperationDelegate onEndGetWorkflowProcessDelegate;

    private System.Threading.SendOrPostCallback onGetWorkflowProcessCompletedDelegate;

    private BeginOperationDelegate onBeginHasPermissionsDelegate;

    private EndOperationDelegate onEndHasPermissionsDelegate;

    private System.Threading.SendOrPostCallback onHasPermissionsCompletedDelegate;

    private BeginOperationDelegate onBeginLinkDocAndWFInstanceDelegate;

    private EndOperationDelegate onEndLinkDocAndWFInstanceDelegate;

    private System.Threading.SendOrPostCallback onLinkDocAndWFInstanceCompletedDelegate;

    private BeginOperationDelegate onBeginLinkDocumentsDelegate;

    private EndOperationDelegate onEndLinkDocumentsDelegate;

    private System.Threading.SendOrPostCallback onLinkDocumentsCompletedDelegate;

    private BeginOperationDelegate onBeginReleaseFullTextQueryDelegate;

    private EndOperationDelegate onEndReleaseFullTextQueryDelegate;

    private System.Threading.SendOrPostCallback onReleaseFullTextQueryCompletedDelegate;

    private BeginOperationDelegate onBeginReleaseMultiQueryDelegate;

    private EndOperationDelegate onEndReleaseMultiQueryDelegate;

    private System.Threading.SendOrPostCallback onReleaseMultiQueryCompletedDelegate;

    private BeginOperationDelegate onBeginReleaseSingleQueryDelegate;

    private EndOperationDelegate onEndReleaseSingleQueryDelegate;

    private System.Threading.SendOrPostCallback onReleaseSingleQueryCompletedDelegate;

    private BeginOperationDelegate onBeginSaveCaseIndexDataDelegate;

    private EndOperationDelegate onEndSaveCaseIndexDataDelegate;

    private System.Threading.SendOrPostCallback onSaveCaseIndexDataCompletedDelegate;

    private BeginOperationDelegate onBeginSaveCaseIndexDataQuickDelegate;

    private EndOperationDelegate onEndSaveCaseIndexDataQuickDelegate;

    private System.Threading.SendOrPostCallback onSaveCaseIndexDataQuickCompletedDelegate;

    private BeginOperationDelegate onBeginSaveDocumentIndexDataDelegate;

    private EndOperationDelegate onEndSaveDocumentIndexDataDelegate;

    private System.Threading.SendOrPostCallback onSaveDocumentIndexDataCompletedDelegate;

    private BeginOperationDelegate onBeginSaveDocumentIndexDataQuickDelegate;

    private EndOperationDelegate onEndSaveDocumentIndexDataQuickDelegate;

    private System.Threading.SendOrPostCallback onSaveDocumentIndexDataQuickCompletedDelegate;

    private BeginOperationDelegate onBeginSetChecklistItemWorkflowDelegate;

    private EndOperationDelegate onEndSetChecklistItemWorkflowDelegate;

    private System.Threading.SendOrPostCallback onSetChecklistItemWorkflowCompletedDelegate;

    private BeginOperationDelegate onBeginSetTaskStatusDelegate;

    private EndOperationDelegate onEndSetTaskStatusDelegate;

    private System.Threading.SendOrPostCallback onSetTaskStatusCompletedDelegate;

    private BeginOperationDelegate onBeginSetTextInfoWorkflowDelegate;

    private EndOperationDelegate onEndSetTextInfoWorkflowDelegate;

    private System.Threading.SendOrPostCallback onSetTextInfoWorkflowCompletedDelegate;

    private BeginOperationDelegate onBeginStartCreateDocumentBatchDelegate;

    private EndOperationDelegate onEndStartCreateDocumentBatchDelegate;

    private System.Threading.SendOrPostCallback onStartCreateDocumentBatchCompletedDelegate;

    private BeginOperationDelegate onBeginStartTaskDelegate;

    private EndOperationDelegate onEndStartTaskDelegate;

    private System.Threading.SendOrPostCallback onStartTaskCompletedDelegate;

    private BeginOperationDelegate onBeginStartUpdateDocumentBatchDelegate;

    private EndOperationDelegate onEndStartUpdateDocumentBatchDelegate;

    private System.Threading.SendOrPostCallback onStartUpdateDocumentBatchCompletedDelegate;

    private BeginOperationDelegate onBeginStartWorkflowInstanceDelegate;

    private EndOperationDelegate onEndStartWorkflowInstanceDelegate;

    private System.Threading.SendOrPostCallback onStartWorkflowInstanceCompletedDelegate;

    private BeginOperationDelegate onBeginSubmitCreateDocumentBatchDelegate;

    private EndOperationDelegate onEndSubmitCreateDocumentBatchDelegate;

    private System.Threading.SendOrPostCallback onSubmitCreateDocumentBatchCompletedDelegate;

    private BeginOperationDelegate onBeginSubmitUpdateDocumentBatchDelegate;

    private EndOperationDelegate onEndSubmitUpdateDocumentBatchDelegate;

    private System.Threading.SendOrPostCallback onSubmitUpdateDocumentBatchCompletedDelegate;

    private BeginOperationDelegate onBeginUnlinkDocAndWFInstanceDelegate;

    private EndOperationDelegate onEndUnlinkDocAndWFInstanceDelegate;

    private System.Threading.SendOrPostCallback onUnlinkDocAndWFInstanceCompletedDelegate;

    private BeginOperationDelegate onBeginUnlinkDocumentsDelegate;

    private EndOperationDelegate onEndUnlinkDocumentsDelegate;

    private System.Threading.SendOrPostCallback onUnlinkDocumentsCompletedDelegate;

    private BeginOperationDelegate onBeginUpdateDictionaryKeywordDelegate;

    private EndOperationDelegate onEndUpdateDictionaryKeywordDelegate;

    private System.Threading.SendOrPostCallback onUpdateDictionaryKeywordCompletedDelegate;

    private BeginOperationDelegate onBeginUpdateDocumentDelegate;

    private EndOperationDelegate onEndUpdateDocumentDelegate;

    private System.Threading.SendOrPostCallback onUpdateDocumentCompletedDelegate;

    private BeginOperationDelegate onBeginUpdateTaskDelegate;

    private EndOperationDelegate onEndUpdateTaskDelegate;

    private System.Threading.SendOrPostCallback onUpdateTaskCompletedDelegate;

    private BeginOperationDelegate onBeginUpdateTaskCommentDelegate;

    private EndOperationDelegate onEndUpdateTaskCommentDelegate;

    private System.Threading.SendOrPostCallback onUpdateTaskCommentCompletedDelegate;

    private BeginOperationDelegate onBeginUploadDocStreamToBatchDelegate;

    private EndOperationDelegate onEndUploadDocStreamToBatchDelegate;

    private System.Threading.SendOrPostCallback onUploadDocStreamToBatchCompletedDelegate;

    private BeginOperationDelegate onBeginExecuteDependentFieldsQueryDelegate;

    private EndOperationDelegate onEndExecuteDependentFieldsQueryDelegate;

    private System.Threading.SendOrPostCallback onExecuteDependentFieldsQueryCompletedDelegate;

    private BeginOperationDelegate onBeginValidateKeywordsDelegate;

    private EndOperationDelegate onEndValidateKeywordsDelegate;

    private System.Threading.SendOrPostCallback onValidateKeywordsCompletedDelegate;

    private BeginOperationDelegate onBeginGetConnectionTokenDelegate;

    private EndOperationDelegate onEndGetConnectionTokenDelegate;

    private System.Threading.SendOrPostCallback onGetConnectionTokenCompletedDelegate;

    private BeginOperationDelegate onBeginGetConnectionTokenFromADFSTokenDelegate;

    private EndOperationDelegate onEndGetConnectionTokenFromADFSTokenDelegate;

    private System.Threading.SendOrPostCallback onGetConnectionTokenFromADFSTokenCompletedDelegate;

    private BeginOperationDelegate onBeginGetJWTTokenDelegate;

    private EndOperationDelegate onEndGetJWTTokenDelegate;

    private System.Threading.SendOrPostCallback onGetJWTTokenCompletedDelegate;

    private BeginOperationDelegate onBeginClearWorkflowInstanceErrorsDelegate;

    private EndOperationDelegate onEndClearWorkflowInstanceErrorsDelegate;

    private System.Threading.SendOrPostCallback onClearWorkflowInstanceErrorsCompletedDelegate;

    private BeginOperationDelegate onBeginCheckOutDocumentDelegate;

    private EndOperationDelegate onEndCheckOutDocumentDelegate;

    private System.Threading.SendOrPostCallback onCheckOutDocumentCompletedDelegate;

    private BeginOperationDelegate onBeginTestCheckOutDocumentDelegate;

    private EndOperationDelegate onEndTestCheckOutDocumentDelegate;

    private System.Threading.SendOrPostCallback onTestCheckOutDocumentCompletedDelegate;

    private BeginOperationDelegate onBeginCheckInDocumentDelegate;

    private EndOperationDelegate onEndCheckInDocumentDelegate;

    private System.Threading.SendOrPostCallback onCheckInDocumentCompletedDelegate;

    private BeginOperationDelegate onBeginUndoCheckOutDocumentDelegate;

    private EndOperationDelegate onEndUndoCheckOutDocumentDelegate;

    private System.Threading.SendOrPostCallback onUndoCheckOutDocumentCompletedDelegate;

    private BeginOperationDelegate onBeginGetSystemCustomerIdDelegate;

    private EndOperationDelegate onEndGetSystemCustomerIdDelegate;

    private System.Threading.SendOrPostCallback onGetSystemCustomerIdCompletedDelegate;

    private BeginOperationDelegate onBeginSaveEFormDelegate;

    private EndOperationDelegate onEndSaveEFormDelegate;

    private System.Threading.SendOrPostCallback onSaveEFormCompletedDelegate;

    private BeginOperationDelegate onBeginDeleteEFormDelegate;

    private EndOperationDelegate onEndDeleteEFormDelegate;

    private System.Threading.SendOrPostCallback onDeleteEFormCompletedDelegate;

    private BeginOperationDelegate onBeginGetEFormDelegate;

    private EndOperationDelegate onEndGetEFormDelegate;

    private System.Threading.SendOrPostCallback onGetEFormCompletedDelegate;

    private BeginOperationDelegate onBeginSubmitEFormDelegate;

    private EndOperationDelegate onEndSubmitEFormDelegate;

    private System.Threading.SendOrPostCallback onSubmitEFormCompletedDelegate;

    private BeginOperationDelegate onBeginGetKeywordsByKeyDicDelegate;

    private EndOperationDelegate onEndGetKeywordsByKeyDicDelegate;

    private System.Threading.SendOrPostCallback onGetKeywordsByKeyDicCompletedDelegate;

    private BeginOperationDelegate onBeginUploadEFormFileDelegate;

    private EndOperationDelegate onEndUploadEFormFileDelegate;

    private System.Threading.SendOrPostCallback onUploadEFormFileCompletedDelegate;

    private BeginOperationDelegate onBeginGetUploadedEFormFileDelegate;

    private EndOperationDelegate onEndGetUploadedEFormFileDelegate;

    private System.Threading.SendOrPostCallback onGetUploadedEFormFileCompletedDelegate;

    private BeginOperationDelegate onBeginSaveEFormDefaultSubmissionDelegate;

    private EndOperationDelegate onEndSaveEFormDefaultSubmissionDelegate;

    private System.Threading.SendOrPostCallback onSaveEFormDefaultSubmissionCompletedDelegate;

    private BeginOperationDelegate onBeginGetFolderDelegate;

    private EndOperationDelegate onEndGetFolderDelegate;

    private System.Threading.SendOrPostCallback onGetFolderCompletedDelegate;

    private BeginOperationDelegate onBeginOpenDelegate;

    private EndOperationDelegate onEndOpenDelegate;

    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;

    private BeginOperationDelegate onBeginCloseDelegate;

    private EndOperationDelegate onEndCloseDelegate;

    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;

    public ThereforeServiceClient()
    {
    }

    public ThereforeServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public ThereforeServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public ThereforeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public ThereforeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }

    public event System.EventHandler<SaveFolderCompletedEventArgs> SaveFolderCompleted;

    public event System.EventHandler<DeleteFolderCompletedEventArgs> DeleteFolderCompleted;

    public event System.EventHandler<SetParentFolderCompletedEventArgs> SetParentFolderCompleted;

    public event System.EventHandler<QueryDependentFieldsDirectCompletedEventArgs> QueryDependentFieldsDirectCompleted;

    public event System.EventHandler<GetReferencedTableInfoCompletedEventArgs> GetReferencedTableInfoCompleted;

    public event System.EventHandler<VerifyReCaptchaTokenCompletedEventArgs> VerifyReCaptchaTokenCompleted;

    public event System.EventHandler<SaveEFormDraftCompletedEventArgs> SaveEFormDraftCompleted;

    public event System.EventHandler<SearchEFormSubmissionCompletedEventArgs> SearchEFormSubmissionCompleted;

    public event System.EventHandler<ClearLocalCacheCompletedEventArgs> ClearLocalCacheCompleted;

    public event System.EventHandler<RenameObjectCompletedEventArgs> RenameObjectCompleted;

    public event System.EventHandler<DeleteEFormDraftSubmissionCompletedEventArgs> DeleteEFormDraftSubmissionCompleted;

    public event System.EventHandler<CopyEFormCompletedEventArgs> CopyEFormCompleted;

    public event System.EventHandler<HandleESignaturePushNotificationCompletedEventArgs> HandleESignaturePushNotificationCompleted;

    public event System.EventHandler<GetClientDiscoveryInfoCompletedEventArgs> GetClientDiscoveryInfoCompleted;

    public event System.EventHandler<UploadSessionStartCompletedEventArgs> UploadSessionStartCompleted;

    public event System.EventHandler<UploadSessionAppendChunkRawCompletedEventArgs> UploadSessionAppendChunkRawCompleted;

    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CrossOriginOptionsSupportCompleted;

    public event System.EventHandler<MoveUserLicenseCompletedEventArgs> MoveUserLicenseCompleted;

    public event System.EventHandler<SignOutCompletedEventArgs> SignOutCompleted;

    public event System.EventHandler<AddDictionaryKeywordCompletedEventArgs> AddDictionaryKeywordCompleted;

    public event System.EventHandler<AddStreamsToDocumentCompletedEventArgs> AddStreamsToDocumentCompleted;

    public event System.EventHandler<ClaimWorkflowInstanceCompletedEventArgs> ClaimWorkflowInstanceCompleted;

    public event System.EventHandler<CloseCaseCompletedEventArgs> CloseCaseCompleted;

    public event System.EventHandler<ReopenCaseCompletedEventArgs> ReopenCaseCompleted;

    public event System.EventHandler<CompleteTaskCompletedEventArgs> CompleteTaskCompleted;

    public event System.EventHandler<CreateCaseCompletedEventArgs> CreateCaseCompleted;

    public event System.EventHandler<PreprocessIndexDataCompletedEventArgs> PreprocessIndexDataCompleted;

    public event System.EventHandler<PreprocessTableRowCompletedEventArgs> PreprocessTableRowCompleted;

    public event System.EventHandler<CreateDocumentCompletedEventArgs> CreateDocumentCompleted;

    public event System.EventHandler<CreateLinkFileCompletedEventArgs> CreateLinkFileCompleted;

    public event System.EventHandler<DelegateWorkflowInstanceCompletedEventArgs> DelegateWorkflowInstanceCompleted;

    public event System.EventHandler<DeleteCaseCompletedEventArgs> DeleteCaseCompleted;

    public event System.EventHandler<DeleteDictionaryKeywordCompletedEventArgs> DeleteDictionaryKeywordCompleted;

    public event System.EventHandler<DeleteDocumentCompletedEventArgs> DeleteDocumentCompleted;

    public event System.EventHandler<DeleteTaskCompletedEventArgs> DeleteTaskCompleted;

    public event System.EventHandler<DeleteWorkflowInstanceCompletedEventArgs> DeleteWorkflowInstanceCompleted;

    public event System.EventHandler<DisclaimWorkflowInstanceCompletedEventArgs> DisclaimWorkflowInstanceCompleted;

    public event System.EventHandler<EraseAllObjectsCompletedEventArgs> EraseAllObjectsCompleted;

    public event System.EventHandler<EraseObjectsCompletedEventArgs> EraseObjectsCompleted;

    public event System.EventHandler<ExecuteAsyncFullTextQueryCompletedEventArgs> ExecuteAsyncFullTextQueryCompleted;

    public event System.EventHandler<ExecuteAsyncMultiQueryCompletedEventArgs> ExecuteAsyncMultiQueryCompleted;

    public event System.EventHandler<ExecuteAsyncSingleQueryCompletedEventArgs> ExecuteAsyncSingleQueryCompleted;

    public event System.EventHandler<ExecuteFullTextQueryCompletedEventArgs> ExecuteFullTextQueryCompleted;

    public event System.EventHandler<ExecuteMultiQueryCompletedEventArgs> ExecuteMultiQueryCompleted;

    public event System.EventHandler<ExecuteReportCompletedEventArgs> ExecuteReportCompleted;

    public event System.EventHandler<ExecuteSimpleQueryCompletedEventArgs> ExecuteSimpleQueryCompleted;

    public event System.EventHandler<ExecuteSingleQueryCompletedEventArgs> ExecuteSingleQueryCompleted;

    public event System.EventHandler<ExecuteTaskInfoQueryCompletedEventArgs> ExecuteTaskInfoQueryCompleted;

    public event System.EventHandler<ExecuteUsersQueryCompletedEventArgs> ExecuteUsersQueryCompleted;

    public event System.EventHandler<GetUserDetailsCompletedEventArgs> GetUserDetailsCompleted;

    public event System.EventHandler<ExecuteWorkflowQueryForAllCompletedEventArgs> ExecuteWorkflowQueryForAllCompleted;

    public event System.EventHandler<ExecuteWorkflowQueryForProcessCompletedEventArgs> ExecuteWorkflowQueryForProcessCompleted;

    public event System.EventHandler<FillDependentFieldsCompletedEventArgs> FillDependentFieldsCompleted;

    public event System.EventHandler<FinishCurrentWorkflowTaskCompletedEventArgs> FinishCurrentWorkflowTaskCompleted;

    public event System.EventHandler<GetAllTreeViewsCompletedEventArgs> GetAllTreeViewsCompleted;

    public event System.EventHandler<GetCaseCompletedEventArgs> GetCaseCompleted;

    public event System.EventHandler<GetCaseDefinitionCompletedEventArgs> GetCaseDefinitionCompleted;

    public event System.EventHandler<GetCaseDocumentsCompletedEventArgs> GetCaseDocumentsCompleted;

    public event System.EventHandler<GetCaseHistoryCompletedEventArgs> GetCaseHistoryCompleted;

    public event System.EventHandler<GetCategoriesTreeCompletedEventArgs> GetCategoriesTreeCompleted;

    public event System.EventHandler<GetCategoryInfoCompletedEventArgs> GetCategoryInfoCompleted;

    public event System.EventHandler<GetConnectedUserCompletedEventArgs> GetConnectedUserCompleted;

    public event System.EventHandler<GetConvertedDocStreamsCompletedEventArgs> GetConvertedDocStreamsCompleted;

    public event System.EventHandler<GetConvertedDocStreamsRawCompletedEventArgs> GetConvertedDocStreamsRawCompleted;

    public event System.EventHandler<GetDictionaryInfoCompletedEventArgs> GetDictionaryInfoCompleted;

    public event System.EventHandler<GetDocumentCompletedEventArgs> GetDocumentCompleted;

    public event System.EventHandler<GetDocumentCheckoutStatusCompletedEventArgs> GetDocumentCheckoutStatusCompleted;

    public event System.EventHandler<GetDocumentIndexDataCompletedEventArgs> GetDocumentIndexDataCompleted;

    public event System.EventHandler<GetDocumentPropertiesCompletedEventArgs> GetDocumentPropertiesCompleted;

    public event System.EventHandler<GetDocumentHistoryCompletedEventArgs> GetDocumentHistoryCompleted;

    public event System.EventHandler<GetDocumentStreamCompletedEventArgs> GetDocumentStreamCompleted;

    public event System.EventHandler<GetDocumentStreamRawCompletedEventArgs> GetDocumentStreamRawCompleted;

    public event System.EventHandler<GetDomainInfoCompletedEventArgs> GetDomainInfoCompleted;

    public event System.EventHandler<GetKeywordsByFieldNoCompletedEventArgs> GetKeywordsByFieldNoCompleted;

    public event System.EventHandler<GetLinkedObjectsCompletedEventArgs> GetLinkedObjectsCompleted;

    public event System.EventHandler<GetLinkedWorkflowsForDocCompletedEventArgs> GetLinkedWorkflowsForDocCompleted;

    public event System.EventHandler<GetNextFullTextQueryRowsCompletedEventArgs> GetNextFullTextQueryRowsCompleted;

    public event System.EventHandler<GetNextMultiQueryRowsCompletedEventArgs> GetNextMultiQueryRowsCompleted;

    public event System.EventHandler<GetNextSingleQueryRowsCompletedEventArgs> GetNextSingleQueryRowsCompleted;

    public event System.EventHandler<GetObjectRightsCompletedEventArgs> GetObjectRightsCompleted;

    public event System.EventHandler<GetPermissionsCompletedEventArgs> GetPermissionsCompleted;

    public event System.EventHandler<GetObjectsCompletedEventArgs> GetObjectsCompleted;

    public event System.EventHandler<GetPermissionConstantsCompletedEventArgs> GetPermissionConstantsCompleted;

    public event System.EventHandler<GetQuerySpecificationCompletedEventArgs> GetQuerySpecificationCompleted;

    public event System.EventHandler<GetReportDefinitionCompletedEventArgs> GetReportDefinitionCompleted;

    public event System.EventHandler<GetSettingIntCompletedEventArgs> GetSettingIntCompleted;

    public event System.EventHandler<GetSettingStringCompletedEventArgs> GetSettingStringCompleted;

    public event System.EventHandler<GetPublicSettingIntCompletedEventArgs> GetPublicSettingIntCompleted;

    public event System.EventHandler<GetPublicSettingStringCompletedEventArgs> GetPublicSettingStringCompleted;

    public event System.EventHandler<GetTaskCompletedEventArgs> GetTaskCompleted;

    public event System.EventHandler<GetTaskInfoCompletedEventArgs> GetTaskInfoCompleted;

    public event System.EventHandler<GetThumbnailCompletedEventArgs> GetThumbnailCompleted;

    public event System.EventHandler<GetTreeViewChildNodesCompletedEventArgs> GetTreeViewChildNodesCompleted;

    public event System.EventHandler<GetTreeViewNodeDocumentsCompletedEventArgs> GetTreeViewNodeDocumentsCompleted;

    public event System.EventHandler<GetTreeViewChildNodesAndDocumentsCompletedEventArgs> GetTreeViewChildNodesAndDocumentsCompleted;

    public event System.EventHandler<GetWebAPIServerVersionCompletedEventArgs> GetWebAPIServerVersionCompleted;

    public event System.EventHandler<GetWorkflowInstanceCompletedEventArgs> GetWorkflowInstanceCompleted;

    public event System.EventHandler<GetWorkflowProcessCompletedEventArgs> GetWorkflowProcessCompleted;

    public event System.EventHandler<HasPermissionsCompletedEventArgs> HasPermissionsCompleted;

    public event System.EventHandler<LinkDocAndWFInstanceCompletedEventArgs> LinkDocAndWFInstanceCompleted;

    public event System.EventHandler<LinkDocumentsCompletedEventArgs> LinkDocumentsCompleted;

    public event System.EventHandler<ReleaseFullTextQueryCompletedEventArgs> ReleaseFullTextQueryCompleted;

    public event System.EventHandler<ReleaseMultiQueryCompletedEventArgs> ReleaseMultiQueryCompleted;

    public event System.EventHandler<ReleaseSingleQueryCompletedEventArgs> ReleaseSingleQueryCompleted;

    public event System.EventHandler<SaveCaseIndexDataCompletedEventArgs> SaveCaseIndexDataCompleted;

    public event System.EventHandler<SaveCaseIndexDataQuickCompletedEventArgs> SaveCaseIndexDataQuickCompleted;

    public event System.EventHandler<SaveDocumentIndexDataCompletedEventArgs> SaveDocumentIndexDataCompleted;

    public event System.EventHandler<SaveDocumentIndexDataQuickCompletedEventArgs> SaveDocumentIndexDataQuickCompleted;

    public event System.EventHandler<SetChecklistItemWorkflowCompletedEventArgs> SetChecklistItemWorkflowCompleted;

    public event System.EventHandler<SetTaskStatusCompletedEventArgs> SetTaskStatusCompleted;

    public event System.EventHandler<SetTextInfoWorkflowCompletedEventArgs> SetTextInfoWorkflowCompleted;

    public event System.EventHandler<StartCreateDocumentBatchCompletedEventArgs> StartCreateDocumentBatchCompleted;

    public event System.EventHandler<StartTaskCompletedEventArgs> StartTaskCompleted;

    public event System.EventHandler<StartUpdateDocumentBatchCompletedEventArgs> StartUpdateDocumentBatchCompleted;

    public event System.EventHandler<StartWorkflowInstanceCompletedEventArgs> StartWorkflowInstanceCompleted;

    public event System.EventHandler<SubmitCreateDocumentBatchCompletedEventArgs> SubmitCreateDocumentBatchCompleted;

    public event System.EventHandler<SubmitUpdateDocumentBatchCompletedEventArgs> SubmitUpdateDocumentBatchCompleted;

    public event System.EventHandler<UnlinkDocAndWFInstanceCompletedEventArgs> UnlinkDocAndWFInstanceCompleted;

    public event System.EventHandler<UnlinkDocumentsCompletedEventArgs> UnlinkDocumentsCompleted;

    public event System.EventHandler<UpdateDictionaryKeywordCompletedEventArgs> UpdateDictionaryKeywordCompleted;

    public event System.EventHandler<UpdateDocumentCompletedEventArgs> UpdateDocumentCompleted;

    public event System.EventHandler<UpdateTaskCompletedEventArgs> UpdateTaskCompleted;

    public event System.EventHandler<UpdateTaskCommentCompletedEventArgs> UpdateTaskCommentCompleted;

    public event System.EventHandler<UploadDocStreamToBatchCompletedEventArgs> UploadDocStreamToBatchCompleted;

    public event System.EventHandler<ExecuteDependentFieldsQueryCompletedEventArgs> ExecuteDependentFieldsQueryCompleted;

    public event System.EventHandler<ValidateKeywordsCompletedEventArgs> ValidateKeywordsCompleted;

    public event System.EventHandler<GetConnectionTokenCompletedEventArgs> GetConnectionTokenCompleted;

    public event System.EventHandler<GetConnectionTokenFromADFSTokenCompletedEventArgs> GetConnectionTokenFromADFSTokenCompleted;

    public event System.EventHandler<GetJWTTokenCompletedEventArgs> GetJWTTokenCompleted;

    public event System.EventHandler<ClearWorkflowInstanceErrorsCompletedEventArgs> ClearWorkflowInstanceErrorsCompleted;

    public event System.EventHandler<CheckOutDocumentCompletedEventArgs> CheckOutDocumentCompleted;

    public event System.EventHandler<TestCheckOutDocumentCompletedEventArgs> TestCheckOutDocumentCompleted;

    public event System.EventHandler<CheckInDocumentCompletedEventArgs> CheckInDocumentCompleted;

    public event System.EventHandler<UndoCheckOutDocumentCompletedEventArgs> UndoCheckOutDocumentCompleted;

    public event System.EventHandler<GetSystemCustomerIdCompletedEventArgs> GetSystemCustomerIdCompleted;

    public event System.EventHandler<SaveEFormCompletedEventArgs> SaveEFormCompleted;

    public event System.EventHandler<DeleteEFormCompletedEventArgs> DeleteEFormCompleted;

    public event System.EventHandler<GetEFormCompletedEventArgs> GetEFormCompleted;

    public event System.EventHandler<SubmitEFormCompletedEventArgs> SubmitEFormCompleted;

    public event System.EventHandler<GetKeywordsByKeyDicCompletedEventArgs> GetKeywordsByKeyDicCompleted;

    public event System.EventHandler<UploadEFormFileCompletedEventArgs> UploadEFormFileCompleted;

    public event System.EventHandler<GetUploadedEFormFileCompletedEventArgs> GetUploadedEFormFileCompleted;

    public event System.EventHandler<SaveEFormDefaultSubmissionCompletedEventArgs> SaveEFormDefaultSubmissionCompleted;

    public event System.EventHandler<GetFolderCompletedEventArgs> GetFolderCompleted;

    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSaveFolder(Therefore.WebAPI.SaveFolderParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSaveFolder(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SaveFolderReponse IThereforeService.EndSaveFolder(System.IAsyncResult result)
    {
        return base.Channel.EndSaveFolder(result);
    }

    private System.IAsyncResult OnBeginSaveFolder(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SaveFolderParams parameters = ((Therefore.WebAPI.SaveFolderParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSaveFolder(parameters, callback, asyncState);
    }

    private object[] OnEndSaveFolder(System.IAsyncResult result)
    {
        Therefore.WebAPI.SaveFolderReponse retVal = ((IThereforeService)(this)).EndSaveFolder(result);
        return new object[] {
                retVal};
    }

    private void OnSaveFolderCompleted(object state)
    {
        if ((this.SaveFolderCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SaveFolderCompleted(this, new SaveFolderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SaveFolderAsync(Therefore.WebAPI.SaveFolderParams parameters)
    {
        this.SaveFolderAsync(parameters, null);
    }

    public void SaveFolderAsync(Therefore.WebAPI.SaveFolderParams parameters, object userState)
    {
        if ((this.onBeginSaveFolderDelegate == null))
        {
            this.onBeginSaveFolderDelegate = new BeginOperationDelegate(this.OnBeginSaveFolder);
        }
        if ((this.onEndSaveFolderDelegate == null))
        {
            this.onEndSaveFolderDelegate = new EndOperationDelegate(this.OnEndSaveFolder);
        }
        if ((this.onSaveFolderCompletedDelegate == null))
        {
            this.onSaveFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveFolderCompleted);
        }
        base.InvokeAsync(this.onBeginSaveFolderDelegate, new object[] {
                    parameters}, this.onEndSaveFolderDelegate, this.onSaveFolderCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginDeleteFolder(Therefore.WebAPI.DeleteFolderParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteFolder(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.DeleteFolderResponse IThereforeService.EndDeleteFolder(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteFolder(result);
    }

    private System.IAsyncResult OnBeginDeleteFolder(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.DeleteFolderParams parameters = ((Therefore.WebAPI.DeleteFolderParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginDeleteFolder(parameters, callback, asyncState);
    }

    private object[] OnEndDeleteFolder(System.IAsyncResult result)
    {
        Therefore.WebAPI.DeleteFolderResponse retVal = ((IThereforeService)(this)).EndDeleteFolder(result);
        return new object[] {
                retVal};
    }

    private void OnDeleteFolderCompleted(object state)
    {
        if ((this.DeleteFolderCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteFolderCompleted(this, new DeleteFolderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DeleteFolderAsync(Therefore.WebAPI.DeleteFolderParams parameters)
    {
        this.DeleteFolderAsync(parameters, null);
    }

    public void DeleteFolderAsync(Therefore.WebAPI.DeleteFolderParams parameters, object userState)
    {
        if ((this.onBeginDeleteFolderDelegate == null))
        {
            this.onBeginDeleteFolderDelegate = new BeginOperationDelegate(this.OnBeginDeleteFolder);
        }
        if ((this.onEndDeleteFolderDelegate == null))
        {
            this.onEndDeleteFolderDelegate = new EndOperationDelegate(this.OnEndDeleteFolder);
        }
        if ((this.onDeleteFolderCompletedDelegate == null))
        {
            this.onDeleteFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFolderCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteFolderDelegate, new object[] {
                    parameters}, this.onEndDeleteFolderDelegate, this.onDeleteFolderCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSetParentFolder(Therefore.WebAPI.SetParentFolderParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSetParentFolder(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SetParentFolderResponse IThereforeService.EndSetParentFolder(System.IAsyncResult result)
    {
        return base.Channel.EndSetParentFolder(result);
    }

    private System.IAsyncResult OnBeginSetParentFolder(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SetParentFolderParams parameters = ((Therefore.WebAPI.SetParentFolderParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSetParentFolder(parameters, callback, asyncState);
    }

    private object[] OnEndSetParentFolder(System.IAsyncResult result)
    {
        Therefore.WebAPI.SetParentFolderResponse retVal = ((IThereforeService)(this)).EndSetParentFolder(result);
        return new object[] {
                retVal};
    }

    private void OnSetParentFolderCompleted(object state)
    {
        if ((this.SetParentFolderCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SetParentFolderCompleted(this, new SetParentFolderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SetParentFolderAsync(Therefore.WebAPI.SetParentFolderParams parameters)
    {
        this.SetParentFolderAsync(parameters, null);
    }

    public void SetParentFolderAsync(Therefore.WebAPI.SetParentFolderParams parameters, object userState)
    {
        if ((this.onBeginSetParentFolderDelegate == null))
        {
            this.onBeginSetParentFolderDelegate = new BeginOperationDelegate(this.OnBeginSetParentFolder);
        }
        if ((this.onEndSetParentFolderDelegate == null))
        {
            this.onEndSetParentFolderDelegate = new EndOperationDelegate(this.OnEndSetParentFolder);
        }
        if ((this.onSetParentFolderCompletedDelegate == null))
        {
            this.onSetParentFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetParentFolderCompleted);
        }
        base.InvokeAsync(this.onBeginSetParentFolderDelegate, new object[] {
                    parameters}, this.onEndSetParentFolderDelegate, this.onSetParentFolderCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginQueryDependentFieldsDirect(Therefore.WebAPI.QueryDependentFieldsDirectParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginQueryDependentFieldsDirect(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.QueryDependentFieldsDirectResponse IThereforeService.EndQueryDependentFieldsDirect(System.IAsyncResult result)
    {
        return base.Channel.EndQueryDependentFieldsDirect(result);
    }

    private System.IAsyncResult OnBeginQueryDependentFieldsDirect(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.QueryDependentFieldsDirectParams parameters = ((Therefore.WebAPI.QueryDependentFieldsDirectParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginQueryDependentFieldsDirect(parameters, callback, asyncState);
    }

    private object[] OnEndQueryDependentFieldsDirect(System.IAsyncResult result)
    {
        Therefore.WebAPI.QueryDependentFieldsDirectResponse retVal = ((IThereforeService)(this)).EndQueryDependentFieldsDirect(result);
        return new object[] {
                retVal};
    }

    private void OnQueryDependentFieldsDirectCompleted(object state)
    {
        if ((this.QueryDependentFieldsDirectCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.QueryDependentFieldsDirectCompleted(this, new QueryDependentFieldsDirectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void QueryDependentFieldsDirectAsync(Therefore.WebAPI.QueryDependentFieldsDirectParams parameters)
    {
        this.QueryDependentFieldsDirectAsync(parameters, null);
    }

    public void QueryDependentFieldsDirectAsync(Therefore.WebAPI.QueryDependentFieldsDirectParams parameters, object userState)
    {
        if ((this.onBeginQueryDependentFieldsDirectDelegate == null))
        {
            this.onBeginQueryDependentFieldsDirectDelegate = new BeginOperationDelegate(this.OnBeginQueryDependentFieldsDirect);
        }
        if ((this.onEndQueryDependentFieldsDirectDelegate == null))
        {
            this.onEndQueryDependentFieldsDirectDelegate = new EndOperationDelegate(this.OnEndQueryDependentFieldsDirect);
        }
        if ((this.onQueryDependentFieldsDirectCompletedDelegate == null))
        {
            this.onQueryDependentFieldsDirectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryDependentFieldsDirectCompleted);
        }
        base.InvokeAsync(this.onBeginQueryDependentFieldsDirectDelegate, new object[] {
                    parameters}, this.onEndQueryDependentFieldsDirectDelegate, this.onQueryDependentFieldsDirectCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetReferencedTableInfo(Therefore.WebAPI.GetReferencedTableInfoParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetReferencedTableInfo(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetReferencedTableInfoResponse IThereforeService.EndGetReferencedTableInfo(System.IAsyncResult result)
    {
        return base.Channel.EndGetReferencedTableInfo(result);
    }

    private System.IAsyncResult OnBeginGetReferencedTableInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetReferencedTableInfoParams parameters = ((Therefore.WebAPI.GetReferencedTableInfoParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetReferencedTableInfo(parameters, callback, asyncState);
    }

    private object[] OnEndGetReferencedTableInfo(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetReferencedTableInfoResponse retVal = ((IThereforeService)(this)).EndGetReferencedTableInfo(result);
        return new object[] {
                retVal};
    }

    private void OnGetReferencedTableInfoCompleted(object state)
    {
        if ((this.GetReferencedTableInfoCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetReferencedTableInfoCompleted(this, new GetReferencedTableInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetReferencedTableInfoAsync(Therefore.WebAPI.GetReferencedTableInfoParams parameters)
    {
        this.GetReferencedTableInfoAsync(parameters, null);
    }

    public void GetReferencedTableInfoAsync(Therefore.WebAPI.GetReferencedTableInfoParams parameters, object userState)
    {
        if ((this.onBeginGetReferencedTableInfoDelegate == null))
        {
            this.onBeginGetReferencedTableInfoDelegate = new BeginOperationDelegate(this.OnBeginGetReferencedTableInfo);
        }
        if ((this.onEndGetReferencedTableInfoDelegate == null))
        {
            this.onEndGetReferencedTableInfoDelegate = new EndOperationDelegate(this.OnEndGetReferencedTableInfo);
        }
        if ((this.onGetReferencedTableInfoCompletedDelegate == null))
        {
            this.onGetReferencedTableInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReferencedTableInfoCompleted);
        }
        base.InvokeAsync(this.onBeginGetReferencedTableInfoDelegate, new object[] {
                    parameters}, this.onEndGetReferencedTableInfoDelegate, this.onGetReferencedTableInfoCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginVerifyReCaptchaToken(Therefore.WebAPI.VerifyReCaptchaParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginVerifyReCaptchaToken(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.VerifyReCaptchaResponse IThereforeService.EndVerifyReCaptchaToken(System.IAsyncResult result)
    {
        return base.Channel.EndVerifyReCaptchaToken(result);
    }

    private System.IAsyncResult OnBeginVerifyReCaptchaToken(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.VerifyReCaptchaParams parameters = ((Therefore.WebAPI.VerifyReCaptchaParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginVerifyReCaptchaToken(parameters, callback, asyncState);
    }

    private object[] OnEndVerifyReCaptchaToken(System.IAsyncResult result)
    {
        Therefore.WebAPI.VerifyReCaptchaResponse retVal = ((IThereforeService)(this)).EndVerifyReCaptchaToken(result);
        return new object[] {
                retVal};
    }

    private void OnVerifyReCaptchaTokenCompleted(object state)
    {
        if ((this.VerifyReCaptchaTokenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.VerifyReCaptchaTokenCompleted(this, new VerifyReCaptchaTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void VerifyReCaptchaTokenAsync(Therefore.WebAPI.VerifyReCaptchaParams parameters)
    {
        this.VerifyReCaptchaTokenAsync(parameters, null);
    }

    public void VerifyReCaptchaTokenAsync(Therefore.WebAPI.VerifyReCaptchaParams parameters, object userState)
    {
        if ((this.onBeginVerifyReCaptchaTokenDelegate == null))
        {
            this.onBeginVerifyReCaptchaTokenDelegate = new BeginOperationDelegate(this.OnBeginVerifyReCaptchaToken);
        }
        if ((this.onEndVerifyReCaptchaTokenDelegate == null))
        {
            this.onEndVerifyReCaptchaTokenDelegate = new EndOperationDelegate(this.OnEndVerifyReCaptchaToken);
        }
        if ((this.onVerifyReCaptchaTokenCompletedDelegate == null))
        {
            this.onVerifyReCaptchaTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyReCaptchaTokenCompleted);
        }
        base.InvokeAsync(this.onBeginVerifyReCaptchaTokenDelegate, new object[] {
                    parameters}, this.onEndVerifyReCaptchaTokenDelegate, this.onVerifyReCaptchaTokenCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSaveEFormDraft(Therefore.WebAPI.SaveEFormDraftParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSaveEFormDraft(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SaveEFormDraftResponse IThereforeService.EndSaveEFormDraft(System.IAsyncResult result)
    {
        return base.Channel.EndSaveEFormDraft(result);
    }

    private System.IAsyncResult OnBeginSaveEFormDraft(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SaveEFormDraftParams parameters = ((Therefore.WebAPI.SaveEFormDraftParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSaveEFormDraft(parameters, callback, asyncState);
    }

    private object[] OnEndSaveEFormDraft(System.IAsyncResult result)
    {
        Therefore.WebAPI.SaveEFormDraftResponse retVal = ((IThereforeService)(this)).EndSaveEFormDraft(result);
        return new object[] {
                retVal};
    }

    private void OnSaveEFormDraftCompleted(object state)
    {
        if ((this.SaveEFormDraftCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SaveEFormDraftCompleted(this, new SaveEFormDraftCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SaveEFormDraftAsync(Therefore.WebAPI.SaveEFormDraftParams parameters)
    {
        this.SaveEFormDraftAsync(parameters, null);
    }

    public void SaveEFormDraftAsync(Therefore.WebAPI.SaveEFormDraftParams parameters, object userState)
    {
        if ((this.onBeginSaveEFormDraftDelegate == null))
        {
            this.onBeginSaveEFormDraftDelegate = new BeginOperationDelegate(this.OnBeginSaveEFormDraft);
        }
        if ((this.onEndSaveEFormDraftDelegate == null))
        {
            this.onEndSaveEFormDraftDelegate = new EndOperationDelegate(this.OnEndSaveEFormDraft);
        }
        if ((this.onSaveEFormDraftCompletedDelegate == null))
        {
            this.onSaveEFormDraftCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEFormDraftCompleted);
        }
        base.InvokeAsync(this.onBeginSaveEFormDraftDelegate, new object[] {
                    parameters}, this.onEndSaveEFormDraftDelegate, this.onSaveEFormDraftCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSearchEFormSubmission(Therefore.WebAPI.SearchEFormSubmissionParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSearchEFormSubmission(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SearchEFormSubmissionResponse IThereforeService.EndSearchEFormSubmission(System.IAsyncResult result)
    {
        return base.Channel.EndSearchEFormSubmission(result);
    }

    private System.IAsyncResult OnBeginSearchEFormSubmission(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SearchEFormSubmissionParams parameters = ((Therefore.WebAPI.SearchEFormSubmissionParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSearchEFormSubmission(parameters, callback, asyncState);
    }

    private object[] OnEndSearchEFormSubmission(System.IAsyncResult result)
    {
        Therefore.WebAPI.SearchEFormSubmissionResponse retVal = ((IThereforeService)(this)).EndSearchEFormSubmission(result);
        return new object[] {
                retVal};
    }

    private void OnSearchEFormSubmissionCompleted(object state)
    {
        if ((this.SearchEFormSubmissionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SearchEFormSubmissionCompleted(this, new SearchEFormSubmissionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SearchEFormSubmissionAsync(Therefore.WebAPI.SearchEFormSubmissionParams parameters)
    {
        this.SearchEFormSubmissionAsync(parameters, null);
    }

    public void SearchEFormSubmissionAsync(Therefore.WebAPI.SearchEFormSubmissionParams parameters, object userState)
    {
        if ((this.onBeginSearchEFormSubmissionDelegate == null))
        {
            this.onBeginSearchEFormSubmissionDelegate = new BeginOperationDelegate(this.OnBeginSearchEFormSubmission);
        }
        if ((this.onEndSearchEFormSubmissionDelegate == null))
        {
            this.onEndSearchEFormSubmissionDelegate = new EndOperationDelegate(this.OnEndSearchEFormSubmission);
        }
        if ((this.onSearchEFormSubmissionCompletedDelegate == null))
        {
            this.onSearchEFormSubmissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchEFormSubmissionCompleted);
        }
        base.InvokeAsync(this.onBeginSearchEFormSubmissionDelegate, new object[] {
                    parameters}, this.onEndSearchEFormSubmissionDelegate, this.onSearchEFormSubmissionCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginClearLocalCache(Therefore.WebAPI.ClearLocalCacheParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginClearLocalCache(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ClearLocalCacheResponse IThereforeService.EndClearLocalCache(System.IAsyncResult result)
    {
        return base.Channel.EndClearLocalCache(result);
    }

    private System.IAsyncResult OnBeginClearLocalCache(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ClearLocalCacheParams parameters = ((Therefore.WebAPI.ClearLocalCacheParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginClearLocalCache(parameters, callback, asyncState);
    }

    private object[] OnEndClearLocalCache(System.IAsyncResult result)
    {
        Therefore.WebAPI.ClearLocalCacheResponse retVal = ((IThereforeService)(this)).EndClearLocalCache(result);
        return new object[] {
                retVal};
    }

    private void OnClearLocalCacheCompleted(object state)
    {
        if ((this.ClearLocalCacheCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ClearLocalCacheCompleted(this, new ClearLocalCacheCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ClearLocalCacheAsync(Therefore.WebAPI.ClearLocalCacheParams parameters)
    {
        this.ClearLocalCacheAsync(parameters, null);
    }

    public void ClearLocalCacheAsync(Therefore.WebAPI.ClearLocalCacheParams parameters, object userState)
    {
        if ((this.onBeginClearLocalCacheDelegate == null))
        {
            this.onBeginClearLocalCacheDelegate = new BeginOperationDelegate(this.OnBeginClearLocalCache);
        }
        if ((this.onEndClearLocalCacheDelegate == null))
        {
            this.onEndClearLocalCacheDelegate = new EndOperationDelegate(this.OnEndClearLocalCache);
        }
        if ((this.onClearLocalCacheCompletedDelegate == null))
        {
            this.onClearLocalCacheCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearLocalCacheCompleted);
        }
        base.InvokeAsync(this.onBeginClearLocalCacheDelegate, new object[] {
                    parameters}, this.onEndClearLocalCacheDelegate, this.onClearLocalCacheCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginRenameObject(Therefore.WebAPI.RenameObjectParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginRenameObject(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.RenameObjectResponse IThereforeService.EndRenameObject(System.IAsyncResult result)
    {
        return base.Channel.EndRenameObject(result);
    }

    private System.IAsyncResult OnBeginRenameObject(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.RenameObjectParams parameters = ((Therefore.WebAPI.RenameObjectParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginRenameObject(parameters, callback, asyncState);
    }

    private object[] OnEndRenameObject(System.IAsyncResult result)
    {
        Therefore.WebAPI.RenameObjectResponse retVal = ((IThereforeService)(this)).EndRenameObject(result);
        return new object[] {
                retVal};
    }

    private void OnRenameObjectCompleted(object state)
    {
        if ((this.RenameObjectCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.RenameObjectCompleted(this, new RenameObjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void RenameObjectAsync(Therefore.WebAPI.RenameObjectParams parameters)
    {
        this.RenameObjectAsync(parameters, null);
    }

    public void RenameObjectAsync(Therefore.WebAPI.RenameObjectParams parameters, object userState)
    {
        if ((this.onBeginRenameObjectDelegate == null))
        {
            this.onBeginRenameObjectDelegate = new BeginOperationDelegate(this.OnBeginRenameObject);
        }
        if ((this.onEndRenameObjectDelegate == null))
        {
            this.onEndRenameObjectDelegate = new EndOperationDelegate(this.OnEndRenameObject);
        }
        if ((this.onRenameObjectCompletedDelegate == null))
        {
            this.onRenameObjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRenameObjectCompleted);
        }
        base.InvokeAsync(this.onBeginRenameObjectDelegate, new object[] {
                    parameters}, this.onEndRenameObjectDelegate, this.onRenameObjectCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginDeleteEFormDraftSubmission(Therefore.WebAPI.DeleteEFormDraftSubmissionParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteEFormDraftSubmission(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.DeleteEFormDraftSubmissionResponse IThereforeService.EndDeleteEFormDraftSubmission(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteEFormDraftSubmission(result);
    }

    private System.IAsyncResult OnBeginDeleteEFormDraftSubmission(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.DeleteEFormDraftSubmissionParams parameters = ((Therefore.WebAPI.DeleteEFormDraftSubmissionParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginDeleteEFormDraftSubmission(parameters, callback, asyncState);
    }

    private object[] OnEndDeleteEFormDraftSubmission(System.IAsyncResult result)
    {
        Therefore.WebAPI.DeleteEFormDraftSubmissionResponse retVal = ((IThereforeService)(this)).EndDeleteEFormDraftSubmission(result);
        return new object[] {
                retVal};
    }

    private void OnDeleteEFormDraftSubmissionCompleted(object state)
    {
        if ((this.DeleteEFormDraftSubmissionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteEFormDraftSubmissionCompleted(this, new DeleteEFormDraftSubmissionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DeleteEFormDraftSubmissionAsync(Therefore.WebAPI.DeleteEFormDraftSubmissionParams parameters)
    {
        this.DeleteEFormDraftSubmissionAsync(parameters, null);
    }

    public void DeleteEFormDraftSubmissionAsync(Therefore.WebAPI.DeleteEFormDraftSubmissionParams parameters, object userState)
    {
        if ((this.onBeginDeleteEFormDraftSubmissionDelegate == null))
        {
            this.onBeginDeleteEFormDraftSubmissionDelegate = new BeginOperationDelegate(this.OnBeginDeleteEFormDraftSubmission);
        }
        if ((this.onEndDeleteEFormDraftSubmissionDelegate == null))
        {
            this.onEndDeleteEFormDraftSubmissionDelegate = new EndOperationDelegate(this.OnEndDeleteEFormDraftSubmission);
        }
        if ((this.onDeleteEFormDraftSubmissionCompletedDelegate == null))
        {
            this.onDeleteEFormDraftSubmissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEFormDraftSubmissionCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteEFormDraftSubmissionDelegate, new object[] {
                    parameters}, this.onEndDeleteEFormDraftSubmissionDelegate, this.onDeleteEFormDraftSubmissionCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginCopyEForm(Therefore.WebAPI.CopyEFormParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCopyEForm(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.CopyEFormResponse IThereforeService.EndCopyEForm(System.IAsyncResult result)
    {
        return base.Channel.EndCopyEForm(result);
    }

    private System.IAsyncResult OnBeginCopyEForm(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.CopyEFormParams parameters = ((Therefore.WebAPI.CopyEFormParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginCopyEForm(parameters, callback, asyncState);
    }

    private object[] OnEndCopyEForm(System.IAsyncResult result)
    {
        Therefore.WebAPI.CopyEFormResponse retVal = ((IThereforeService)(this)).EndCopyEForm(result);
        return new object[] {
                retVal};
    }

    private void OnCopyEFormCompleted(object state)
    {
        if ((this.CopyEFormCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CopyEFormCompleted(this, new CopyEFormCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CopyEFormAsync(Therefore.WebAPI.CopyEFormParams parameters)
    {
        this.CopyEFormAsync(parameters, null);
    }

    public void CopyEFormAsync(Therefore.WebAPI.CopyEFormParams parameters, object userState)
    {
        if ((this.onBeginCopyEFormDelegate == null))
        {
            this.onBeginCopyEFormDelegate = new BeginOperationDelegate(this.OnBeginCopyEForm);
        }
        if ((this.onEndCopyEFormDelegate == null))
        {
            this.onEndCopyEFormDelegate = new EndOperationDelegate(this.OnEndCopyEForm);
        }
        if ((this.onCopyEFormCompletedDelegate == null))
        {
            this.onCopyEFormCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyEFormCompleted);
        }
        base.InvokeAsync(this.onBeginCopyEFormDelegate, new object[] {
                    parameters}, this.onEndCopyEFormDelegate, this.onCopyEFormCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginHandleESignaturePushNotification(Therefore.WebAPI.HandleESignaturePushParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginHandleESignaturePushNotification(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.HandleESignaturePushResponse IThereforeService.EndHandleESignaturePushNotification(System.IAsyncResult result)
    {
        return base.Channel.EndHandleESignaturePushNotification(result);
    }

    private System.IAsyncResult OnBeginHandleESignaturePushNotification(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.HandleESignaturePushParams parameters = ((Therefore.WebAPI.HandleESignaturePushParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginHandleESignaturePushNotification(parameters, callback, asyncState);
    }

    private object[] OnEndHandleESignaturePushNotification(System.IAsyncResult result)
    {
        Therefore.WebAPI.HandleESignaturePushResponse retVal = ((IThereforeService)(this)).EndHandleESignaturePushNotification(result);
        return new object[] {
                retVal};
    }

    private void OnHandleESignaturePushNotificationCompleted(object state)
    {
        if ((this.HandleESignaturePushNotificationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.HandleESignaturePushNotificationCompleted(this, new HandleESignaturePushNotificationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void HandleESignaturePushNotificationAsync(Therefore.WebAPI.HandleESignaturePushParams parameters)
    {
        this.HandleESignaturePushNotificationAsync(parameters, null);
    }

    public void HandleESignaturePushNotificationAsync(Therefore.WebAPI.HandleESignaturePushParams parameters, object userState)
    {
        if ((this.onBeginHandleESignaturePushNotificationDelegate == null))
        {
            this.onBeginHandleESignaturePushNotificationDelegate = new BeginOperationDelegate(this.OnBeginHandleESignaturePushNotification);
        }
        if ((this.onEndHandleESignaturePushNotificationDelegate == null))
        {
            this.onEndHandleESignaturePushNotificationDelegate = new EndOperationDelegate(this.OnEndHandleESignaturePushNotification);
        }
        if ((this.onHandleESignaturePushNotificationCompletedDelegate == null))
        {
            this.onHandleESignaturePushNotificationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleESignaturePushNotificationCompleted);
        }
        base.InvokeAsync(this.onBeginHandleESignaturePushNotificationDelegate, new object[] {
                    parameters}, this.onEndHandleESignaturePushNotificationDelegate, this.onHandleESignaturePushNotificationCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetClientDiscoveryInfo(Therefore.WebAPI.GetClientDiscoveryInfoParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetClientDiscoveryInfo(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetClientDiscoveryInfoResponse IThereforeService.EndGetClientDiscoveryInfo(System.IAsyncResult result)
    {
        return base.Channel.EndGetClientDiscoveryInfo(result);
    }

    private System.IAsyncResult OnBeginGetClientDiscoveryInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetClientDiscoveryInfoParams parameters = ((Therefore.WebAPI.GetClientDiscoveryInfoParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetClientDiscoveryInfo(parameters, callback, asyncState);
    }

    private object[] OnEndGetClientDiscoveryInfo(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetClientDiscoveryInfoResponse retVal = ((IThereforeService)(this)).EndGetClientDiscoveryInfo(result);
        return new object[] {
                retVal};
    }

    private void OnGetClientDiscoveryInfoCompleted(object state)
    {
        if ((this.GetClientDiscoveryInfoCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetClientDiscoveryInfoCompleted(this, new GetClientDiscoveryInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetClientDiscoveryInfoAsync(Therefore.WebAPI.GetClientDiscoveryInfoParams parameters)
    {
        this.GetClientDiscoveryInfoAsync(parameters, null);
    }

    public void GetClientDiscoveryInfoAsync(Therefore.WebAPI.GetClientDiscoveryInfoParams parameters, object userState)
    {
        if ((this.onBeginGetClientDiscoveryInfoDelegate == null))
        {
            this.onBeginGetClientDiscoveryInfoDelegate = new BeginOperationDelegate(this.OnBeginGetClientDiscoveryInfo);
        }
        if ((this.onEndGetClientDiscoveryInfoDelegate == null))
        {
            this.onEndGetClientDiscoveryInfoDelegate = new EndOperationDelegate(this.OnEndGetClientDiscoveryInfo);
        }
        if ((this.onGetClientDiscoveryInfoCompletedDelegate == null))
        {
            this.onGetClientDiscoveryInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientDiscoveryInfoCompleted);
        }
        base.InvokeAsync(this.onBeginGetClientDiscoveryInfoDelegate, new object[] {
                    parameters}, this.onEndGetClientDiscoveryInfoDelegate, this.onGetClientDiscoveryInfoCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUploadSessionStart(Therefore.WebAPI.UploadSessionStartParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUploadSessionStart(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UploadSessionStartResponse IThereforeService.EndUploadSessionStart(System.IAsyncResult result)
    {
        return base.Channel.EndUploadSessionStart(result);
    }

    private System.IAsyncResult OnBeginUploadSessionStart(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.UploadSessionStartParams parameters = ((Therefore.WebAPI.UploadSessionStartParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginUploadSessionStart(parameters, callback, asyncState);
    }

    private object[] OnEndUploadSessionStart(System.IAsyncResult result)
    {
        Therefore.WebAPI.UploadSessionStartResponse retVal = ((IThereforeService)(this)).EndUploadSessionStart(result);
        return new object[] {
                retVal};
    }

    private void OnUploadSessionStartCompleted(object state)
    {
        if ((this.UploadSessionStartCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UploadSessionStartCompleted(this, new UploadSessionStartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UploadSessionStartAsync(Therefore.WebAPI.UploadSessionStartParams parameters)
    {
        this.UploadSessionStartAsync(parameters, null);
    }

    public void UploadSessionStartAsync(Therefore.WebAPI.UploadSessionStartParams parameters, object userState)
    {
        if ((this.onBeginUploadSessionStartDelegate == null))
        {
            this.onBeginUploadSessionStartDelegate = new BeginOperationDelegate(this.OnBeginUploadSessionStart);
        }
        if ((this.onEndUploadSessionStartDelegate == null))
        {
            this.onEndUploadSessionStartDelegate = new EndOperationDelegate(this.OnEndUploadSessionStart);
        }
        if ((this.onUploadSessionStartCompletedDelegate == null))
        {
            this.onUploadSessionStartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadSessionStartCompleted);
        }
        base.InvokeAsync(this.onBeginUploadSessionStartDelegate, new object[] {
                    parameters}, this.onEndUploadSessionStartDelegate, this.onUploadSessionStartCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUploadSessionAppendChunkRaw(byte[] inputStream, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUploadSessionAppendChunkRaw(inputStream, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UploadSessionAppendChunkRawResponse IThereforeService.EndUploadSessionAppendChunkRaw(System.IAsyncResult result)
    {
        return base.Channel.EndUploadSessionAppendChunkRaw(result);
    }

    private System.IAsyncResult OnBeginUploadSessionAppendChunkRaw(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        byte[] inputStream = ((byte[])(inValues[0]));
        return ((IThereforeService)(this)).BeginUploadSessionAppendChunkRaw(inputStream, callback, asyncState);
    }

    private object[] OnEndUploadSessionAppendChunkRaw(System.IAsyncResult result)
    {
        Therefore.WebAPI.UploadSessionAppendChunkRawResponse retVal = ((IThereforeService)(this)).EndUploadSessionAppendChunkRaw(result);
        return new object[] {
                retVal};
    }

    private void OnUploadSessionAppendChunkRawCompleted(object state)
    {
        if ((this.UploadSessionAppendChunkRawCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UploadSessionAppendChunkRawCompleted(this, new UploadSessionAppendChunkRawCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UploadSessionAppendChunkRawAsync(byte[] inputStream)
    {
        this.UploadSessionAppendChunkRawAsync(inputStream, null);
    }

    public void UploadSessionAppendChunkRawAsync(byte[] inputStream, object userState)
    {
        if ((this.onBeginUploadSessionAppendChunkRawDelegate == null))
        {
            this.onBeginUploadSessionAppendChunkRawDelegate = new BeginOperationDelegate(this.OnBeginUploadSessionAppendChunkRaw);
        }
        if ((this.onEndUploadSessionAppendChunkRawDelegate == null))
        {
            this.onEndUploadSessionAppendChunkRawDelegate = new EndOperationDelegate(this.OnEndUploadSessionAppendChunkRaw);
        }
        if ((this.onUploadSessionAppendChunkRawCompletedDelegate == null))
        {
            this.onUploadSessionAppendChunkRawCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadSessionAppendChunkRawCompleted);
        }
        base.InvokeAsync(this.onBeginUploadSessionAppendChunkRawDelegate, new object[] {
                    inputStream}, this.onEndUploadSessionAppendChunkRawDelegate, this.onUploadSessionAppendChunkRawCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginCrossOriginOptionsSupport(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCrossOriginOptionsSupport(callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IThereforeService.EndCrossOriginOptionsSupport(System.IAsyncResult result)
    {
        base.Channel.EndCrossOriginOptionsSupport(result);
    }

    private System.IAsyncResult OnBeginCrossOriginOptionsSupport(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IThereforeService)(this)).BeginCrossOriginOptionsSupport(callback, asyncState);
    }

    private object[] OnEndCrossOriginOptionsSupport(System.IAsyncResult result)
    {
        ((IThereforeService)(this)).EndCrossOriginOptionsSupport(result);
        return null;
    }

    private void OnCrossOriginOptionsSupportCompleted(object state)
    {
        if ((this.CrossOriginOptionsSupportCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CrossOriginOptionsSupportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CrossOriginOptionsSupportAsync()
    {
        this.CrossOriginOptionsSupportAsync(null);
    }

    public void CrossOriginOptionsSupportAsync(object userState)
    {
        if ((this.onBeginCrossOriginOptionsSupportDelegate == null))
        {
            this.onBeginCrossOriginOptionsSupportDelegate = new BeginOperationDelegate(this.OnBeginCrossOriginOptionsSupport);
        }
        if ((this.onEndCrossOriginOptionsSupportDelegate == null))
        {
            this.onEndCrossOriginOptionsSupportDelegate = new EndOperationDelegate(this.OnEndCrossOriginOptionsSupport);
        }
        if ((this.onCrossOriginOptionsSupportCompletedDelegate == null))
        {
            this.onCrossOriginOptionsSupportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCrossOriginOptionsSupportCompleted);
        }
        base.InvokeAsync(this.onBeginCrossOriginOptionsSupportDelegate, null, this.onEndCrossOriginOptionsSupportDelegate, this.onCrossOriginOptionsSupportCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginMoveUserLicense(Therefore.WebAPI.MoveUserLicenseRequest parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginMoveUserLicense(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.MoveUserLicenseResponse IThereforeService.EndMoveUserLicense(System.IAsyncResult result)
    {
        return base.Channel.EndMoveUserLicense(result);
    }

    private System.IAsyncResult OnBeginMoveUserLicense(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.MoveUserLicenseRequest parameters = ((Therefore.WebAPI.MoveUserLicenseRequest)(inValues[0]));
        return ((IThereforeService)(this)).BeginMoveUserLicense(parameters, callback, asyncState);
    }

    private object[] OnEndMoveUserLicense(System.IAsyncResult result)
    {
        Therefore.WebAPI.MoveUserLicenseResponse retVal = ((IThereforeService)(this)).EndMoveUserLicense(result);
        return new object[] {
                retVal};
    }

    private void OnMoveUserLicenseCompleted(object state)
    {
        if ((this.MoveUserLicenseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.MoveUserLicenseCompleted(this, new MoveUserLicenseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void MoveUserLicenseAsync(Therefore.WebAPI.MoveUserLicenseRequest parameters)
    {
        this.MoveUserLicenseAsync(parameters, null);
    }

    public void MoveUserLicenseAsync(Therefore.WebAPI.MoveUserLicenseRequest parameters, object userState)
    {
        if ((this.onBeginMoveUserLicenseDelegate == null))
        {
            this.onBeginMoveUserLicenseDelegate = new BeginOperationDelegate(this.OnBeginMoveUserLicense);
        }
        if ((this.onEndMoveUserLicenseDelegate == null))
        {
            this.onEndMoveUserLicenseDelegate = new EndOperationDelegate(this.OnEndMoveUserLicense);
        }
        if ((this.onMoveUserLicenseCompletedDelegate == null))
        {
            this.onMoveUserLicenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveUserLicenseCompleted);
        }
        base.InvokeAsync(this.onBeginMoveUserLicenseDelegate, new object[] {
                    parameters}, this.onEndMoveUserLicenseDelegate, this.onMoveUserLicenseCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSignOut(Therefore.WebAPI.SignOutRequest parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSignOut(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SignOutResponse IThereforeService.EndSignOut(System.IAsyncResult result)
    {
        return base.Channel.EndSignOut(result);
    }

    private System.IAsyncResult OnBeginSignOut(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SignOutRequest parameters = ((Therefore.WebAPI.SignOutRequest)(inValues[0]));
        return ((IThereforeService)(this)).BeginSignOut(parameters, callback, asyncState);
    }

    private object[] OnEndSignOut(System.IAsyncResult result)
    {
        Therefore.WebAPI.SignOutResponse retVal = ((IThereforeService)(this)).EndSignOut(result);
        return new object[] {
                retVal};
    }

    private void OnSignOutCompleted(object state)
    {
        if ((this.SignOutCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SignOutCompleted(this, new SignOutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SignOutAsync(Therefore.WebAPI.SignOutRequest parameters)
    {
        this.SignOutAsync(parameters, null);
    }

    public void SignOutAsync(Therefore.WebAPI.SignOutRequest parameters, object userState)
    {
        if ((this.onBeginSignOutDelegate == null))
        {
            this.onBeginSignOutDelegate = new BeginOperationDelegate(this.OnBeginSignOut);
        }
        if ((this.onEndSignOutDelegate == null))
        {
            this.onEndSignOutDelegate = new EndOperationDelegate(this.OnEndSignOut);
        }
        if ((this.onSignOutCompletedDelegate == null))
        {
            this.onSignOutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignOutCompleted);
        }
        base.InvokeAsync(this.onBeginSignOutDelegate, new object[] {
                    parameters}, this.onEndSignOutDelegate, this.onSignOutCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginAddDictionaryKeyword(Therefore.WebAPI.AddDictionaryKeywordParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginAddDictionaryKeyword(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.AddDictionaryKeywordResponse IThereforeService.EndAddDictionaryKeyword(System.IAsyncResult result)
    {
        return base.Channel.EndAddDictionaryKeyword(result);
    }

    private System.IAsyncResult OnBeginAddDictionaryKeyword(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.AddDictionaryKeywordParams parameters = ((Therefore.WebAPI.AddDictionaryKeywordParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginAddDictionaryKeyword(parameters, callback, asyncState);
    }

    private object[] OnEndAddDictionaryKeyword(System.IAsyncResult result)
    {
        Therefore.WebAPI.AddDictionaryKeywordResponse retVal = ((IThereforeService)(this)).EndAddDictionaryKeyword(result);
        return new object[] {
                retVal};
    }

    private void OnAddDictionaryKeywordCompleted(object state)
    {
        if ((this.AddDictionaryKeywordCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.AddDictionaryKeywordCompleted(this, new AddDictionaryKeywordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void AddDictionaryKeywordAsync(Therefore.WebAPI.AddDictionaryKeywordParams parameters)
    {
        this.AddDictionaryKeywordAsync(parameters, null);
    }

    public void AddDictionaryKeywordAsync(Therefore.WebAPI.AddDictionaryKeywordParams parameters, object userState)
    {
        if ((this.onBeginAddDictionaryKeywordDelegate == null))
        {
            this.onBeginAddDictionaryKeywordDelegate = new BeginOperationDelegate(this.OnBeginAddDictionaryKeyword);
        }
        if ((this.onEndAddDictionaryKeywordDelegate == null))
        {
            this.onEndAddDictionaryKeywordDelegate = new EndOperationDelegate(this.OnEndAddDictionaryKeyword);
        }
        if ((this.onAddDictionaryKeywordCompletedDelegate == null))
        {
            this.onAddDictionaryKeywordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddDictionaryKeywordCompleted);
        }
        base.InvokeAsync(this.onBeginAddDictionaryKeywordDelegate, new object[] {
                    parameters}, this.onEndAddDictionaryKeywordDelegate, this.onAddDictionaryKeywordCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginAddStreamsToDocument(Therefore.WebAPI.AddStreamsToDocumentParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginAddStreamsToDocument(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.AddStreamsToDocumentResponse IThereforeService.EndAddStreamsToDocument(System.IAsyncResult result)
    {
        return base.Channel.EndAddStreamsToDocument(result);
    }

    private System.IAsyncResult OnBeginAddStreamsToDocument(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.AddStreamsToDocumentParams parameters = ((Therefore.WebAPI.AddStreamsToDocumentParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginAddStreamsToDocument(parameters, callback, asyncState);
    }

    private object[] OnEndAddStreamsToDocument(System.IAsyncResult result)
    {
        Therefore.WebAPI.AddStreamsToDocumentResponse retVal = ((IThereforeService)(this)).EndAddStreamsToDocument(result);
        return new object[] {
                retVal};
    }

    private void OnAddStreamsToDocumentCompleted(object state)
    {
        if ((this.AddStreamsToDocumentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.AddStreamsToDocumentCompleted(this, new AddStreamsToDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void AddStreamsToDocumentAsync(Therefore.WebAPI.AddStreamsToDocumentParams parameters)
    {
        this.AddStreamsToDocumentAsync(parameters, null);
    }

    public void AddStreamsToDocumentAsync(Therefore.WebAPI.AddStreamsToDocumentParams parameters, object userState)
    {
        if ((this.onBeginAddStreamsToDocumentDelegate == null))
        {
            this.onBeginAddStreamsToDocumentDelegate = new BeginOperationDelegate(this.OnBeginAddStreamsToDocument);
        }
        if ((this.onEndAddStreamsToDocumentDelegate == null))
        {
            this.onEndAddStreamsToDocumentDelegate = new EndOperationDelegate(this.OnEndAddStreamsToDocument);
        }
        if ((this.onAddStreamsToDocumentCompletedDelegate == null))
        {
            this.onAddStreamsToDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddStreamsToDocumentCompleted);
        }
        base.InvokeAsync(this.onBeginAddStreamsToDocumentDelegate, new object[] {
                    parameters}, this.onEndAddStreamsToDocumentDelegate, this.onAddStreamsToDocumentCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginClaimWorkflowInstance(Therefore.WebAPI.ClaimWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginClaimWorkflowInstance(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ClaimWorkflowInstanceResponse IThereforeService.EndClaimWorkflowInstance(System.IAsyncResult result)
    {
        return base.Channel.EndClaimWorkflowInstance(result);
    }

    private System.IAsyncResult OnBeginClaimWorkflowInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ClaimWorkflowInstanceParams parameters = ((Therefore.WebAPI.ClaimWorkflowInstanceParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginClaimWorkflowInstance(parameters, callback, asyncState);
    }

    private object[] OnEndClaimWorkflowInstance(System.IAsyncResult result)
    {
        Therefore.WebAPI.ClaimWorkflowInstanceResponse retVal = ((IThereforeService)(this)).EndClaimWorkflowInstance(result);
        return new object[] {
                retVal};
    }

    private void OnClaimWorkflowInstanceCompleted(object state)
    {
        if ((this.ClaimWorkflowInstanceCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ClaimWorkflowInstanceCompleted(this, new ClaimWorkflowInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ClaimWorkflowInstanceAsync(Therefore.WebAPI.ClaimWorkflowInstanceParams parameters)
    {
        this.ClaimWorkflowInstanceAsync(parameters, null);
    }

    public void ClaimWorkflowInstanceAsync(Therefore.WebAPI.ClaimWorkflowInstanceParams parameters, object userState)
    {
        if ((this.onBeginClaimWorkflowInstanceDelegate == null))
        {
            this.onBeginClaimWorkflowInstanceDelegate = new BeginOperationDelegate(this.OnBeginClaimWorkflowInstance);
        }
        if ((this.onEndClaimWorkflowInstanceDelegate == null))
        {
            this.onEndClaimWorkflowInstanceDelegate = new EndOperationDelegate(this.OnEndClaimWorkflowInstance);
        }
        if ((this.onClaimWorkflowInstanceCompletedDelegate == null))
        {
            this.onClaimWorkflowInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClaimWorkflowInstanceCompleted);
        }
        base.InvokeAsync(this.onBeginClaimWorkflowInstanceDelegate, new object[] {
                    parameters}, this.onEndClaimWorkflowInstanceDelegate, this.onClaimWorkflowInstanceCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginCloseCase(Therefore.WebAPI.CloseCaseParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCloseCase(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.CloseCaseResponse IThereforeService.EndCloseCase(System.IAsyncResult result)
    {
        return base.Channel.EndCloseCase(result);
    }

    private System.IAsyncResult OnBeginCloseCase(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.CloseCaseParams parameters = ((Therefore.WebAPI.CloseCaseParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginCloseCase(parameters, callback, asyncState);
    }

    private object[] OnEndCloseCase(System.IAsyncResult result)
    {
        Therefore.WebAPI.CloseCaseResponse retVal = ((IThereforeService)(this)).EndCloseCase(result);
        return new object[] {
                retVal};
    }

    private void OnCloseCaseCompleted(object state)
    {
        if ((this.CloseCaseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCaseCompleted(this, new CloseCaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CloseCaseAsync(Therefore.WebAPI.CloseCaseParams parameters)
    {
        this.CloseCaseAsync(parameters, null);
    }

    public void CloseCaseAsync(Therefore.WebAPI.CloseCaseParams parameters, object userState)
    {
        if ((this.onBeginCloseCaseDelegate == null))
        {
            this.onBeginCloseCaseDelegate = new BeginOperationDelegate(this.OnBeginCloseCase);
        }
        if ((this.onEndCloseCaseDelegate == null))
        {
            this.onEndCloseCaseDelegate = new EndOperationDelegate(this.OnEndCloseCase);
        }
        if ((this.onCloseCaseCompletedDelegate == null))
        {
            this.onCloseCaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCaseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseCaseDelegate, new object[] {
                    parameters}, this.onEndCloseCaseDelegate, this.onCloseCaseCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginReopenCase(Therefore.WebAPI.ReopenCaseParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReopenCase(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ReopenCaseResponse IThereforeService.EndReopenCase(System.IAsyncResult result)
    {
        return base.Channel.EndReopenCase(result);
    }

    private System.IAsyncResult OnBeginReopenCase(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ReopenCaseParams parameters = ((Therefore.WebAPI.ReopenCaseParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginReopenCase(parameters, callback, asyncState);
    }

    private object[] OnEndReopenCase(System.IAsyncResult result)
    {
        Therefore.WebAPI.ReopenCaseResponse retVal = ((IThereforeService)(this)).EndReopenCase(result);
        return new object[] {
                retVal};
    }

    private void OnReopenCaseCompleted(object state)
    {
        if ((this.ReopenCaseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReopenCaseCompleted(this, new ReopenCaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ReopenCaseAsync(Therefore.WebAPI.ReopenCaseParams parameters)
    {
        this.ReopenCaseAsync(parameters, null);
    }

    public void ReopenCaseAsync(Therefore.WebAPI.ReopenCaseParams parameters, object userState)
    {
        if ((this.onBeginReopenCaseDelegate == null))
        {
            this.onBeginReopenCaseDelegate = new BeginOperationDelegate(this.OnBeginReopenCase);
        }
        if ((this.onEndReopenCaseDelegate == null))
        {
            this.onEndReopenCaseDelegate = new EndOperationDelegate(this.OnEndReopenCase);
        }
        if ((this.onReopenCaseCompletedDelegate == null))
        {
            this.onReopenCaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReopenCaseCompleted);
        }
        base.InvokeAsync(this.onBeginReopenCaseDelegate, new object[] {
                    parameters}, this.onEndReopenCaseDelegate, this.onReopenCaseCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginCompleteTask(Therefore.WebAPI.CompleteTaskParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCompleteTask(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.CompleteTaskResponse IThereforeService.EndCompleteTask(System.IAsyncResult result)
    {
        return base.Channel.EndCompleteTask(result);
    }

    private System.IAsyncResult OnBeginCompleteTask(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.CompleteTaskParams parameters = ((Therefore.WebAPI.CompleteTaskParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginCompleteTask(parameters, callback, asyncState);
    }

    private object[] OnEndCompleteTask(System.IAsyncResult result)
    {
        Therefore.WebAPI.CompleteTaskResponse retVal = ((IThereforeService)(this)).EndCompleteTask(result);
        return new object[] {
                retVal};
    }

    private void OnCompleteTaskCompleted(object state)
    {
        if ((this.CompleteTaskCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CompleteTaskCompleted(this, new CompleteTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CompleteTaskAsync(Therefore.WebAPI.CompleteTaskParams parameters)
    {
        this.CompleteTaskAsync(parameters, null);
    }

    public void CompleteTaskAsync(Therefore.WebAPI.CompleteTaskParams parameters, object userState)
    {
        if ((this.onBeginCompleteTaskDelegate == null))
        {
            this.onBeginCompleteTaskDelegate = new BeginOperationDelegate(this.OnBeginCompleteTask);
        }
        if ((this.onEndCompleteTaskDelegate == null))
        {
            this.onEndCompleteTaskDelegate = new EndOperationDelegate(this.OnEndCompleteTask);
        }
        if ((this.onCompleteTaskCompletedDelegate == null))
        {
            this.onCompleteTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCompleteTaskCompleted);
        }
        base.InvokeAsync(this.onBeginCompleteTaskDelegate, new object[] {
                    parameters}, this.onEndCompleteTaskDelegate, this.onCompleteTaskCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginCreateCase(Therefore.WebAPI.CreateCaseParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCreateCase(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.CreateCaseResponse IThereforeService.EndCreateCase(System.IAsyncResult result)
    {
        return base.Channel.EndCreateCase(result);
    }

    private System.IAsyncResult OnBeginCreateCase(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.CreateCaseParams parameters = ((Therefore.WebAPI.CreateCaseParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginCreateCase(parameters, callback, asyncState);
    }

    private object[] OnEndCreateCase(System.IAsyncResult result)
    {
        Therefore.WebAPI.CreateCaseResponse retVal = ((IThereforeService)(this)).EndCreateCase(result);
        return new object[] {
                retVal};
    }

    private void OnCreateCaseCompleted(object state)
    {
        if ((this.CreateCaseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CreateCaseCompleted(this, new CreateCaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CreateCaseAsync(Therefore.WebAPI.CreateCaseParams parameters)
    {
        this.CreateCaseAsync(parameters, null);
    }

    public void CreateCaseAsync(Therefore.WebAPI.CreateCaseParams parameters, object userState)
    {
        if ((this.onBeginCreateCaseDelegate == null))
        {
            this.onBeginCreateCaseDelegate = new BeginOperationDelegate(this.OnBeginCreateCase);
        }
        if ((this.onEndCreateCaseDelegate == null))
        {
            this.onEndCreateCaseDelegate = new EndOperationDelegate(this.OnEndCreateCase);
        }
        if ((this.onCreateCaseCompletedDelegate == null))
        {
            this.onCreateCaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCaseCompleted);
        }
        base.InvokeAsync(this.onBeginCreateCaseDelegate, new object[] {
                    parameters}, this.onEndCreateCaseDelegate, this.onCreateCaseCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginPreprocessIndexData(Therefore.WebAPI.PreprocessIndexDataParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginPreprocessIndexData(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.PreprocessIndexDataResponse IThereforeService.EndPreprocessIndexData(System.IAsyncResult result)
    {
        return base.Channel.EndPreprocessIndexData(result);
    }

    private System.IAsyncResult OnBeginPreprocessIndexData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.PreprocessIndexDataParams parameters = ((Therefore.WebAPI.PreprocessIndexDataParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginPreprocessIndexData(parameters, callback, asyncState);
    }

    private object[] OnEndPreprocessIndexData(System.IAsyncResult result)
    {
        Therefore.WebAPI.PreprocessIndexDataResponse retVal = ((IThereforeService)(this)).EndPreprocessIndexData(result);
        return new object[] {
                retVal};
    }

    private void OnPreprocessIndexDataCompleted(object state)
    {
        if ((this.PreprocessIndexDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.PreprocessIndexDataCompleted(this, new PreprocessIndexDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void PreprocessIndexDataAsync(Therefore.WebAPI.PreprocessIndexDataParams parameters)
    {
        this.PreprocessIndexDataAsync(parameters, null);
    }

    public void PreprocessIndexDataAsync(Therefore.WebAPI.PreprocessIndexDataParams parameters, object userState)
    {
        if ((this.onBeginPreprocessIndexDataDelegate == null))
        {
            this.onBeginPreprocessIndexDataDelegate = new BeginOperationDelegate(this.OnBeginPreprocessIndexData);
        }
        if ((this.onEndPreprocessIndexDataDelegate == null))
        {
            this.onEndPreprocessIndexDataDelegate = new EndOperationDelegate(this.OnEndPreprocessIndexData);
        }
        if ((this.onPreprocessIndexDataCompletedDelegate == null))
        {
            this.onPreprocessIndexDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPreprocessIndexDataCompleted);
        }
        base.InvokeAsync(this.onBeginPreprocessIndexDataDelegate, new object[] {
                    parameters}, this.onEndPreprocessIndexDataDelegate, this.onPreprocessIndexDataCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginPreprocessTableRow(Therefore.WebAPI.PreprocessTableRowParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginPreprocessTableRow(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.PreprocessTableRowResponse IThereforeService.EndPreprocessTableRow(System.IAsyncResult result)
    {
        return base.Channel.EndPreprocessTableRow(result);
    }

    private System.IAsyncResult OnBeginPreprocessTableRow(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.PreprocessTableRowParams parameters = ((Therefore.WebAPI.PreprocessTableRowParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginPreprocessTableRow(parameters, callback, asyncState);
    }

    private object[] OnEndPreprocessTableRow(System.IAsyncResult result)
    {
        Therefore.WebAPI.PreprocessTableRowResponse retVal = ((IThereforeService)(this)).EndPreprocessTableRow(result);
        return new object[] {
                retVal};
    }

    private void OnPreprocessTableRowCompleted(object state)
    {
        if ((this.PreprocessTableRowCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.PreprocessTableRowCompleted(this, new PreprocessTableRowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void PreprocessTableRowAsync(Therefore.WebAPI.PreprocessTableRowParams parameters)
    {
        this.PreprocessTableRowAsync(parameters, null);
    }

    public void PreprocessTableRowAsync(Therefore.WebAPI.PreprocessTableRowParams parameters, object userState)
    {
        if ((this.onBeginPreprocessTableRowDelegate == null))
        {
            this.onBeginPreprocessTableRowDelegate = new BeginOperationDelegate(this.OnBeginPreprocessTableRow);
        }
        if ((this.onEndPreprocessTableRowDelegate == null))
        {
            this.onEndPreprocessTableRowDelegate = new EndOperationDelegate(this.OnEndPreprocessTableRow);
        }
        if ((this.onPreprocessTableRowCompletedDelegate == null))
        {
            this.onPreprocessTableRowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPreprocessTableRowCompleted);
        }
        base.InvokeAsync(this.onBeginPreprocessTableRowDelegate, new object[] {
                    parameters}, this.onEndPreprocessTableRowDelegate, this.onPreprocessTableRowCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginCreateDocument(Therefore.WebAPI.CreateDocumentParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCreateDocument(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.CreateDocumentResponse IThereforeService.EndCreateDocument(System.IAsyncResult result)
    {
        return base.Channel.EndCreateDocument(result);
    }

    private System.IAsyncResult OnBeginCreateDocument(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.CreateDocumentParams parameters = ((Therefore.WebAPI.CreateDocumentParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginCreateDocument(parameters, callback, asyncState);
    }

    private object[] OnEndCreateDocument(System.IAsyncResult result)
    {
        Therefore.WebAPI.CreateDocumentResponse retVal = ((IThereforeService)(this)).EndCreateDocument(result);
        return new object[] {
                retVal};
    }

    private void OnCreateDocumentCompleted(object state)
    {
        if ((this.CreateDocumentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CreateDocumentCompleted(this, new CreateDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CreateDocumentAsync(Therefore.WebAPI.CreateDocumentParams parameters)
    {
        this.CreateDocumentAsync(parameters, null);
    }

    public void CreateDocumentAsync(Therefore.WebAPI.CreateDocumentParams parameters, object userState)
    {
        if ((this.onBeginCreateDocumentDelegate == null))
        {
            this.onBeginCreateDocumentDelegate = new BeginOperationDelegate(this.OnBeginCreateDocument);
        }
        if ((this.onEndCreateDocumentDelegate == null))
        {
            this.onEndCreateDocumentDelegate = new EndOperationDelegate(this.OnEndCreateDocument);
        }
        if ((this.onCreateDocumentCompletedDelegate == null))
        {
            this.onCreateDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateDocumentCompleted);
        }
        base.InvokeAsync(this.onBeginCreateDocumentDelegate, new object[] {
                    parameters}, this.onEndCreateDocumentDelegate, this.onCreateDocumentCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginCreateLinkFile(Therefore.WebAPI.CreateLinkFileParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCreateLinkFile(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.CreateLinkFileResponse IThereforeService.EndCreateLinkFile(System.IAsyncResult result)
    {
        return base.Channel.EndCreateLinkFile(result);
    }

    private System.IAsyncResult OnBeginCreateLinkFile(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.CreateLinkFileParams parameters = ((Therefore.WebAPI.CreateLinkFileParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginCreateLinkFile(parameters, callback, asyncState);
    }

    private object[] OnEndCreateLinkFile(System.IAsyncResult result)
    {
        Therefore.WebAPI.CreateLinkFileResponse retVal = ((IThereforeService)(this)).EndCreateLinkFile(result);
        return new object[] {
                retVal};
    }

    private void OnCreateLinkFileCompleted(object state)
    {
        if ((this.CreateLinkFileCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CreateLinkFileCompleted(this, new CreateLinkFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CreateLinkFileAsync(Therefore.WebAPI.CreateLinkFileParams parameters)
    {
        this.CreateLinkFileAsync(parameters, null);
    }

    public void CreateLinkFileAsync(Therefore.WebAPI.CreateLinkFileParams parameters, object userState)
    {
        if ((this.onBeginCreateLinkFileDelegate == null))
        {
            this.onBeginCreateLinkFileDelegate = new BeginOperationDelegate(this.OnBeginCreateLinkFile);
        }
        if ((this.onEndCreateLinkFileDelegate == null))
        {
            this.onEndCreateLinkFileDelegate = new EndOperationDelegate(this.OnEndCreateLinkFile);
        }
        if ((this.onCreateLinkFileCompletedDelegate == null))
        {
            this.onCreateLinkFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateLinkFileCompleted);
        }
        base.InvokeAsync(this.onBeginCreateLinkFileDelegate, new object[] {
                    parameters}, this.onEndCreateLinkFileDelegate, this.onCreateLinkFileCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginDelegateWorkflowInstance(Therefore.WebAPI.DelegateWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDelegateWorkflowInstance(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.DelegateWorkflowInstanceResponse IThereforeService.EndDelegateWorkflowInstance(System.IAsyncResult result)
    {
        return base.Channel.EndDelegateWorkflowInstance(result);
    }

    private System.IAsyncResult OnBeginDelegateWorkflowInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.DelegateWorkflowInstanceParams parameters = ((Therefore.WebAPI.DelegateWorkflowInstanceParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginDelegateWorkflowInstance(parameters, callback, asyncState);
    }

    private object[] OnEndDelegateWorkflowInstance(System.IAsyncResult result)
    {
        Therefore.WebAPI.DelegateWorkflowInstanceResponse retVal = ((IThereforeService)(this)).EndDelegateWorkflowInstance(result);
        return new object[] {
                retVal};
    }

    private void OnDelegateWorkflowInstanceCompleted(object state)
    {
        if ((this.DelegateWorkflowInstanceCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DelegateWorkflowInstanceCompleted(this, new DelegateWorkflowInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DelegateWorkflowInstanceAsync(Therefore.WebAPI.DelegateWorkflowInstanceParams parameters)
    {
        this.DelegateWorkflowInstanceAsync(parameters, null);
    }

    public void DelegateWorkflowInstanceAsync(Therefore.WebAPI.DelegateWorkflowInstanceParams parameters, object userState)
    {
        if ((this.onBeginDelegateWorkflowInstanceDelegate == null))
        {
            this.onBeginDelegateWorkflowInstanceDelegate = new BeginOperationDelegate(this.OnBeginDelegateWorkflowInstance);
        }
        if ((this.onEndDelegateWorkflowInstanceDelegate == null))
        {
            this.onEndDelegateWorkflowInstanceDelegate = new EndOperationDelegate(this.OnEndDelegateWorkflowInstance);
        }
        if ((this.onDelegateWorkflowInstanceCompletedDelegate == null))
        {
            this.onDelegateWorkflowInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelegateWorkflowInstanceCompleted);
        }
        base.InvokeAsync(this.onBeginDelegateWorkflowInstanceDelegate, new object[] {
                    parameters}, this.onEndDelegateWorkflowInstanceDelegate, this.onDelegateWorkflowInstanceCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginDeleteCase(Therefore.WebAPI.DeleteCaseParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteCase(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.DeleteCaseResponse IThereforeService.EndDeleteCase(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteCase(result);
    }

    private System.IAsyncResult OnBeginDeleteCase(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.DeleteCaseParams parameters = ((Therefore.WebAPI.DeleteCaseParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginDeleteCase(parameters, callback, asyncState);
    }

    private object[] OnEndDeleteCase(System.IAsyncResult result)
    {
        Therefore.WebAPI.DeleteCaseResponse retVal = ((IThereforeService)(this)).EndDeleteCase(result);
        return new object[] {
                retVal};
    }

    private void OnDeleteCaseCompleted(object state)
    {
        if ((this.DeleteCaseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteCaseCompleted(this, new DeleteCaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DeleteCaseAsync(Therefore.WebAPI.DeleteCaseParams parameters)
    {
        this.DeleteCaseAsync(parameters, null);
    }

    public void DeleteCaseAsync(Therefore.WebAPI.DeleteCaseParams parameters, object userState)
    {
        if ((this.onBeginDeleteCaseDelegate == null))
        {
            this.onBeginDeleteCaseDelegate = new BeginOperationDelegate(this.OnBeginDeleteCase);
        }
        if ((this.onEndDeleteCaseDelegate == null))
        {
            this.onEndDeleteCaseDelegate = new EndOperationDelegate(this.OnEndDeleteCase);
        }
        if ((this.onDeleteCaseCompletedDelegate == null))
        {
            this.onDeleteCaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCaseCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteCaseDelegate, new object[] {
                    parameters}, this.onEndDeleteCaseDelegate, this.onDeleteCaseCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginDeleteDictionaryKeyword(Therefore.WebAPI.DeleteDictionaryKeywordParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteDictionaryKeyword(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.DeleteDictionaryKeywordResponse IThereforeService.EndDeleteDictionaryKeyword(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteDictionaryKeyword(result);
    }

    private System.IAsyncResult OnBeginDeleteDictionaryKeyword(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.DeleteDictionaryKeywordParams parameters = ((Therefore.WebAPI.DeleteDictionaryKeywordParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginDeleteDictionaryKeyword(parameters, callback, asyncState);
    }

    private object[] OnEndDeleteDictionaryKeyword(System.IAsyncResult result)
    {
        Therefore.WebAPI.DeleteDictionaryKeywordResponse retVal = ((IThereforeService)(this)).EndDeleteDictionaryKeyword(result);
        return new object[] {
                retVal};
    }

    private void OnDeleteDictionaryKeywordCompleted(object state)
    {
        if ((this.DeleteDictionaryKeywordCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteDictionaryKeywordCompleted(this, new DeleteDictionaryKeywordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DeleteDictionaryKeywordAsync(Therefore.WebAPI.DeleteDictionaryKeywordParams parameters)
    {
        this.DeleteDictionaryKeywordAsync(parameters, null);
    }

    public void DeleteDictionaryKeywordAsync(Therefore.WebAPI.DeleteDictionaryKeywordParams parameters, object userState)
    {
        if ((this.onBeginDeleteDictionaryKeywordDelegate == null))
        {
            this.onBeginDeleteDictionaryKeywordDelegate = new BeginOperationDelegate(this.OnBeginDeleteDictionaryKeyword);
        }
        if ((this.onEndDeleteDictionaryKeywordDelegate == null))
        {
            this.onEndDeleteDictionaryKeywordDelegate = new EndOperationDelegate(this.OnEndDeleteDictionaryKeyword);
        }
        if ((this.onDeleteDictionaryKeywordCompletedDelegate == null))
        {
            this.onDeleteDictionaryKeywordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDictionaryKeywordCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteDictionaryKeywordDelegate, new object[] {
                    parameters}, this.onEndDeleteDictionaryKeywordDelegate, this.onDeleteDictionaryKeywordCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginDeleteDocument(Therefore.WebAPI.DeleteDocumentParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteDocument(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.DeleteDocumentResponse IThereforeService.EndDeleteDocument(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteDocument(result);
    }

    private System.IAsyncResult OnBeginDeleteDocument(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.DeleteDocumentParams parameters = ((Therefore.WebAPI.DeleteDocumentParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginDeleteDocument(parameters, callback, asyncState);
    }

    private object[] OnEndDeleteDocument(System.IAsyncResult result)
    {
        Therefore.WebAPI.DeleteDocumentResponse retVal = ((IThereforeService)(this)).EndDeleteDocument(result);
        return new object[] {
                retVal};
    }

    private void OnDeleteDocumentCompleted(object state)
    {
        if ((this.DeleteDocumentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteDocumentCompleted(this, new DeleteDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DeleteDocumentAsync(Therefore.WebAPI.DeleteDocumentParams parameters)
    {
        this.DeleteDocumentAsync(parameters, null);
    }

    public void DeleteDocumentAsync(Therefore.WebAPI.DeleteDocumentParams parameters, object userState)
    {
        if ((this.onBeginDeleteDocumentDelegate == null))
        {
            this.onBeginDeleteDocumentDelegate = new BeginOperationDelegate(this.OnBeginDeleteDocument);
        }
        if ((this.onEndDeleteDocumentDelegate == null))
        {
            this.onEndDeleteDocumentDelegate = new EndOperationDelegate(this.OnEndDeleteDocument);
        }
        if ((this.onDeleteDocumentCompletedDelegate == null))
        {
            this.onDeleteDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteDocumentDelegate, new object[] {
                    parameters}, this.onEndDeleteDocumentDelegate, this.onDeleteDocumentCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginDeleteTask(Therefore.WebAPI.DeleteTaskParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteTask(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.DeleteTaskResponse IThereforeService.EndDeleteTask(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteTask(result);
    }

    private System.IAsyncResult OnBeginDeleteTask(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.DeleteTaskParams parameters = ((Therefore.WebAPI.DeleteTaskParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginDeleteTask(parameters, callback, asyncState);
    }

    private object[] OnEndDeleteTask(System.IAsyncResult result)
    {
        Therefore.WebAPI.DeleteTaskResponse retVal = ((IThereforeService)(this)).EndDeleteTask(result);
        return new object[] {
                retVal};
    }

    private void OnDeleteTaskCompleted(object state)
    {
        if ((this.DeleteTaskCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteTaskCompleted(this, new DeleteTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DeleteTaskAsync(Therefore.WebAPI.DeleteTaskParams parameters)
    {
        this.DeleteTaskAsync(parameters, null);
    }

    public void DeleteTaskAsync(Therefore.WebAPI.DeleteTaskParams parameters, object userState)
    {
        if ((this.onBeginDeleteTaskDelegate == null))
        {
            this.onBeginDeleteTaskDelegate = new BeginOperationDelegate(this.OnBeginDeleteTask);
        }
        if ((this.onEndDeleteTaskDelegate == null))
        {
            this.onEndDeleteTaskDelegate = new EndOperationDelegate(this.OnEndDeleteTask);
        }
        if ((this.onDeleteTaskCompletedDelegate == null))
        {
            this.onDeleteTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTaskCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteTaskDelegate, new object[] {
                    parameters}, this.onEndDeleteTaskDelegate, this.onDeleteTaskCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginDeleteWorkflowInstance(Therefore.WebAPI.DeleteWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteWorkflowInstance(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.DeleteWorkflowInstanceResponse IThereforeService.EndDeleteWorkflowInstance(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteWorkflowInstance(result);
    }

    private System.IAsyncResult OnBeginDeleteWorkflowInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.DeleteWorkflowInstanceParams parameters = ((Therefore.WebAPI.DeleteWorkflowInstanceParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginDeleteWorkflowInstance(parameters, callback, asyncState);
    }

    private object[] OnEndDeleteWorkflowInstance(System.IAsyncResult result)
    {
        Therefore.WebAPI.DeleteWorkflowInstanceResponse retVal = ((IThereforeService)(this)).EndDeleteWorkflowInstance(result);
        return new object[] {
                retVal};
    }

    private void OnDeleteWorkflowInstanceCompleted(object state)
    {
        if ((this.DeleteWorkflowInstanceCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteWorkflowInstanceCompleted(this, new DeleteWorkflowInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DeleteWorkflowInstanceAsync(Therefore.WebAPI.DeleteWorkflowInstanceParams parameters)
    {
        this.DeleteWorkflowInstanceAsync(parameters, null);
    }

    public void DeleteWorkflowInstanceAsync(Therefore.WebAPI.DeleteWorkflowInstanceParams parameters, object userState)
    {
        if ((this.onBeginDeleteWorkflowInstanceDelegate == null))
        {
            this.onBeginDeleteWorkflowInstanceDelegate = new BeginOperationDelegate(this.OnBeginDeleteWorkflowInstance);
        }
        if ((this.onEndDeleteWorkflowInstanceDelegate == null))
        {
            this.onEndDeleteWorkflowInstanceDelegate = new EndOperationDelegate(this.OnEndDeleteWorkflowInstance);
        }
        if ((this.onDeleteWorkflowInstanceCompletedDelegate == null))
        {
            this.onDeleteWorkflowInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteWorkflowInstanceCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteWorkflowInstanceDelegate, new object[] {
                    parameters}, this.onEndDeleteWorkflowInstanceDelegate, this.onDeleteWorkflowInstanceCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginDisclaimWorkflowInstance(Therefore.WebAPI.DisclaimWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDisclaimWorkflowInstance(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.DisclaimWorkflowInstanceResponse IThereforeService.EndDisclaimWorkflowInstance(System.IAsyncResult result)
    {
        return base.Channel.EndDisclaimWorkflowInstance(result);
    }

    private System.IAsyncResult OnBeginDisclaimWorkflowInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.DisclaimWorkflowInstanceParams parameters = ((Therefore.WebAPI.DisclaimWorkflowInstanceParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginDisclaimWorkflowInstance(parameters, callback, asyncState);
    }

    private object[] OnEndDisclaimWorkflowInstance(System.IAsyncResult result)
    {
        Therefore.WebAPI.DisclaimWorkflowInstanceResponse retVal = ((IThereforeService)(this)).EndDisclaimWorkflowInstance(result);
        return new object[] {
                retVal};
    }

    private void OnDisclaimWorkflowInstanceCompleted(object state)
    {
        if ((this.DisclaimWorkflowInstanceCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DisclaimWorkflowInstanceCompleted(this, new DisclaimWorkflowInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DisclaimWorkflowInstanceAsync(Therefore.WebAPI.DisclaimWorkflowInstanceParams parameters)
    {
        this.DisclaimWorkflowInstanceAsync(parameters, null);
    }

    public void DisclaimWorkflowInstanceAsync(Therefore.WebAPI.DisclaimWorkflowInstanceParams parameters, object userState)
    {
        if ((this.onBeginDisclaimWorkflowInstanceDelegate == null))
        {
            this.onBeginDisclaimWorkflowInstanceDelegate = new BeginOperationDelegate(this.OnBeginDisclaimWorkflowInstance);
        }
        if ((this.onEndDisclaimWorkflowInstanceDelegate == null))
        {
            this.onEndDisclaimWorkflowInstanceDelegate = new EndOperationDelegate(this.OnEndDisclaimWorkflowInstance);
        }
        if ((this.onDisclaimWorkflowInstanceCompletedDelegate == null))
        {
            this.onDisclaimWorkflowInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisclaimWorkflowInstanceCompleted);
        }
        base.InvokeAsync(this.onBeginDisclaimWorkflowInstanceDelegate, new object[] {
                    parameters}, this.onEndDisclaimWorkflowInstanceDelegate, this.onDisclaimWorkflowInstanceCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginEraseAllObjects(Therefore.WebAPI.EraseAllObjectsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginEraseAllObjects(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.EraseAllObjectsResponse IThereforeService.EndEraseAllObjects(System.IAsyncResult result)
    {
        return base.Channel.EndEraseAllObjects(result);
    }

    private System.IAsyncResult OnBeginEraseAllObjects(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.EraseAllObjectsParams parameters = ((Therefore.WebAPI.EraseAllObjectsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginEraseAllObjects(parameters, callback, asyncState);
    }

    private object[] OnEndEraseAllObjects(System.IAsyncResult result)
    {
        Therefore.WebAPI.EraseAllObjectsResponse retVal = ((IThereforeService)(this)).EndEraseAllObjects(result);
        return new object[] {
                retVal};
    }

    private void OnEraseAllObjectsCompleted(object state)
    {
        if ((this.EraseAllObjectsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.EraseAllObjectsCompleted(this, new EraseAllObjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void EraseAllObjectsAsync(Therefore.WebAPI.EraseAllObjectsParams parameters)
    {
        this.EraseAllObjectsAsync(parameters, null);
    }

    public void EraseAllObjectsAsync(Therefore.WebAPI.EraseAllObjectsParams parameters, object userState)
    {
        if ((this.onBeginEraseAllObjectsDelegate == null))
        {
            this.onBeginEraseAllObjectsDelegate = new BeginOperationDelegate(this.OnBeginEraseAllObjects);
        }
        if ((this.onEndEraseAllObjectsDelegate == null))
        {
            this.onEndEraseAllObjectsDelegate = new EndOperationDelegate(this.OnEndEraseAllObjects);
        }
        if ((this.onEraseAllObjectsCompletedDelegate == null))
        {
            this.onEraseAllObjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEraseAllObjectsCompleted);
        }
        base.InvokeAsync(this.onBeginEraseAllObjectsDelegate, new object[] {
                    parameters}, this.onEndEraseAllObjectsDelegate, this.onEraseAllObjectsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginEraseObjects(Therefore.WebAPI.EraseObjectsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginEraseObjects(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.EraseObjectsResponse IThereforeService.EndEraseObjects(System.IAsyncResult result)
    {
        return base.Channel.EndEraseObjects(result);
    }

    private System.IAsyncResult OnBeginEraseObjects(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.EraseObjectsParams parameters = ((Therefore.WebAPI.EraseObjectsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginEraseObjects(parameters, callback, asyncState);
    }

    private object[] OnEndEraseObjects(System.IAsyncResult result)
    {
        Therefore.WebAPI.EraseObjectsResponse retVal = ((IThereforeService)(this)).EndEraseObjects(result);
        return new object[] {
                retVal};
    }

    private void OnEraseObjectsCompleted(object state)
    {
        if ((this.EraseObjectsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.EraseObjectsCompleted(this, new EraseObjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void EraseObjectsAsync(Therefore.WebAPI.EraseObjectsParams parameters)
    {
        this.EraseObjectsAsync(parameters, null);
    }

    public void EraseObjectsAsync(Therefore.WebAPI.EraseObjectsParams parameters, object userState)
    {
        if ((this.onBeginEraseObjectsDelegate == null))
        {
            this.onBeginEraseObjectsDelegate = new BeginOperationDelegate(this.OnBeginEraseObjects);
        }
        if ((this.onEndEraseObjectsDelegate == null))
        {
            this.onEndEraseObjectsDelegate = new EndOperationDelegate(this.OnEndEraseObjects);
        }
        if ((this.onEraseObjectsCompletedDelegate == null))
        {
            this.onEraseObjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEraseObjectsCompleted);
        }
        base.InvokeAsync(this.onBeginEraseObjectsDelegate, new object[] {
                    parameters}, this.onEndEraseObjectsDelegate, this.onEraseObjectsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteAsyncFullTextQuery(Therefore.WebAPI.ExecuteAsyncFullTextQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteAsyncFullTextQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteAsyncFullTextQueryResponse IThereforeService.EndExecuteAsyncFullTextQuery(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteAsyncFullTextQuery(result);
    }

    private System.IAsyncResult OnBeginExecuteAsyncFullTextQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteAsyncFullTextQueryParams parameters = ((Therefore.WebAPI.ExecuteAsyncFullTextQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteAsyncFullTextQuery(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteAsyncFullTextQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteAsyncFullTextQueryResponse retVal = ((IThereforeService)(this)).EndExecuteAsyncFullTextQuery(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteAsyncFullTextQueryCompleted(object state)
    {
        if ((this.ExecuteAsyncFullTextQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteAsyncFullTextQueryCompleted(this, new ExecuteAsyncFullTextQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteAsyncFullTextQueryAsync(Therefore.WebAPI.ExecuteAsyncFullTextQueryParams parameters)
    {
        this.ExecuteAsyncFullTextQueryAsync(parameters, null);
    }

    public void ExecuteAsyncFullTextQueryAsync(Therefore.WebAPI.ExecuteAsyncFullTextQueryParams parameters, object userState)
    {
        if ((this.onBeginExecuteAsyncFullTextQueryDelegate == null))
        {
            this.onBeginExecuteAsyncFullTextQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteAsyncFullTextQuery);
        }
        if ((this.onEndExecuteAsyncFullTextQueryDelegate == null))
        {
            this.onEndExecuteAsyncFullTextQueryDelegate = new EndOperationDelegate(this.OnEndExecuteAsyncFullTextQuery);
        }
        if ((this.onExecuteAsyncFullTextQueryCompletedDelegate == null))
        {
            this.onExecuteAsyncFullTextQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteAsyncFullTextQueryCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteAsyncFullTextQueryDelegate, new object[] {
                    parameters}, this.onEndExecuteAsyncFullTextQueryDelegate, this.onExecuteAsyncFullTextQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteAsyncMultiQuery(Therefore.WebAPI.ExecuteAsyncMultiQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteAsyncMultiQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteAsyncMultiQueryResponse IThereforeService.EndExecuteAsyncMultiQuery(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteAsyncMultiQuery(result);
    }

    private System.IAsyncResult OnBeginExecuteAsyncMultiQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteAsyncMultiQueryParams parameters = ((Therefore.WebAPI.ExecuteAsyncMultiQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteAsyncMultiQuery(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteAsyncMultiQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteAsyncMultiQueryResponse retVal = ((IThereforeService)(this)).EndExecuteAsyncMultiQuery(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteAsyncMultiQueryCompleted(object state)
    {
        if ((this.ExecuteAsyncMultiQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteAsyncMultiQueryCompleted(this, new ExecuteAsyncMultiQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteAsyncMultiQueryAsync(Therefore.WebAPI.ExecuteAsyncMultiQueryParams parameters)
    {
        this.ExecuteAsyncMultiQueryAsync(parameters, null);
    }

    public void ExecuteAsyncMultiQueryAsync(Therefore.WebAPI.ExecuteAsyncMultiQueryParams parameters, object userState)
    {
        if ((this.onBeginExecuteAsyncMultiQueryDelegate == null))
        {
            this.onBeginExecuteAsyncMultiQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteAsyncMultiQuery);
        }
        if ((this.onEndExecuteAsyncMultiQueryDelegate == null))
        {
            this.onEndExecuteAsyncMultiQueryDelegate = new EndOperationDelegate(this.OnEndExecuteAsyncMultiQuery);
        }
        if ((this.onExecuteAsyncMultiQueryCompletedDelegate == null))
        {
            this.onExecuteAsyncMultiQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteAsyncMultiQueryCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteAsyncMultiQueryDelegate, new object[] {
                    parameters}, this.onEndExecuteAsyncMultiQueryDelegate, this.onExecuteAsyncMultiQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteAsyncSingleQuery(Therefore.WebAPI.ExecuteAsyncSingleQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteAsyncSingleQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteAsyncSingleQueryResponse IThereforeService.EndExecuteAsyncSingleQuery(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteAsyncSingleQuery(result);
    }

    private System.IAsyncResult OnBeginExecuteAsyncSingleQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteAsyncSingleQueryParams parameters = ((Therefore.WebAPI.ExecuteAsyncSingleQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteAsyncSingleQuery(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteAsyncSingleQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteAsyncSingleQueryResponse retVal = ((IThereforeService)(this)).EndExecuteAsyncSingleQuery(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteAsyncSingleQueryCompleted(object state)
    {
        if ((this.ExecuteAsyncSingleQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteAsyncSingleQueryCompleted(this, new ExecuteAsyncSingleQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteAsyncSingleQueryAsync(Therefore.WebAPI.ExecuteAsyncSingleQueryParams parameters)
    {
        this.ExecuteAsyncSingleQueryAsync(parameters, null);
    }

    public void ExecuteAsyncSingleQueryAsync(Therefore.WebAPI.ExecuteAsyncSingleQueryParams parameters, object userState)
    {
        if ((this.onBeginExecuteAsyncSingleQueryDelegate == null))
        {
            this.onBeginExecuteAsyncSingleQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteAsyncSingleQuery);
        }
        if ((this.onEndExecuteAsyncSingleQueryDelegate == null))
        {
            this.onEndExecuteAsyncSingleQueryDelegate = new EndOperationDelegate(this.OnEndExecuteAsyncSingleQuery);
        }
        if ((this.onExecuteAsyncSingleQueryCompletedDelegate == null))
        {
            this.onExecuteAsyncSingleQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteAsyncSingleQueryCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteAsyncSingleQueryDelegate, new object[] {
                    parameters}, this.onEndExecuteAsyncSingleQueryDelegate, this.onExecuteAsyncSingleQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteFullTextQuery(Therefore.WebAPI.ExecuteFullTextQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteFullTextQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteFullTextQueryResponse IThereforeService.EndExecuteFullTextQuery(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteFullTextQuery(result);
    }

    private System.IAsyncResult OnBeginExecuteFullTextQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteFullTextQueryParams parameters = ((Therefore.WebAPI.ExecuteFullTextQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteFullTextQuery(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteFullTextQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteFullTextQueryResponse retVal = ((IThereforeService)(this)).EndExecuteFullTextQuery(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteFullTextQueryCompleted(object state)
    {
        if ((this.ExecuteFullTextQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteFullTextQueryCompleted(this, new ExecuteFullTextQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteFullTextQueryAsync(Therefore.WebAPI.ExecuteFullTextQueryParams parameters)
    {
        this.ExecuteFullTextQueryAsync(parameters, null);
    }

    public void ExecuteFullTextQueryAsync(Therefore.WebAPI.ExecuteFullTextQueryParams parameters, object userState)
    {
        if ((this.onBeginExecuteFullTextQueryDelegate == null))
        {
            this.onBeginExecuteFullTextQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteFullTextQuery);
        }
        if ((this.onEndExecuteFullTextQueryDelegate == null))
        {
            this.onEndExecuteFullTextQueryDelegate = new EndOperationDelegate(this.OnEndExecuteFullTextQuery);
        }
        if ((this.onExecuteFullTextQueryCompletedDelegate == null))
        {
            this.onExecuteFullTextQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteFullTextQueryCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteFullTextQueryDelegate, new object[] {
                    parameters}, this.onEndExecuteFullTextQueryDelegate, this.onExecuteFullTextQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteMultiQuery(Therefore.WebAPI.ExecuteMultiQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteMultiQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteMultiQueryResponse IThereforeService.EndExecuteMultiQuery(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteMultiQuery(result);
    }

    private System.IAsyncResult OnBeginExecuteMultiQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteMultiQueryParams parameters = ((Therefore.WebAPI.ExecuteMultiQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteMultiQuery(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteMultiQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteMultiQueryResponse retVal = ((IThereforeService)(this)).EndExecuteMultiQuery(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteMultiQueryCompleted(object state)
    {
        if ((this.ExecuteMultiQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteMultiQueryCompleted(this, new ExecuteMultiQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteMultiQueryAsync(Therefore.WebAPI.ExecuteMultiQueryParams parameters)
    {
        this.ExecuteMultiQueryAsync(parameters, null);
    }

    public void ExecuteMultiQueryAsync(Therefore.WebAPI.ExecuteMultiQueryParams parameters, object userState)
    {
        if ((this.onBeginExecuteMultiQueryDelegate == null))
        {
            this.onBeginExecuteMultiQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteMultiQuery);
        }
        if ((this.onEndExecuteMultiQueryDelegate == null))
        {
            this.onEndExecuteMultiQueryDelegate = new EndOperationDelegate(this.OnEndExecuteMultiQuery);
        }
        if ((this.onExecuteMultiQueryCompletedDelegate == null))
        {
            this.onExecuteMultiQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteMultiQueryCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteMultiQueryDelegate, new object[] {
                    parameters}, this.onEndExecuteMultiQueryDelegate, this.onExecuteMultiQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteReport(Therefore.WebAPI.ExecuteReportParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteReport(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteReportResponse IThereforeService.EndExecuteReport(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteReport(result);
    }

    private System.IAsyncResult OnBeginExecuteReport(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteReportParams parameters = ((Therefore.WebAPI.ExecuteReportParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteReport(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteReport(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteReportResponse retVal = ((IThereforeService)(this)).EndExecuteReport(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteReportCompleted(object state)
    {
        if ((this.ExecuteReportCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteReportCompleted(this, new ExecuteReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteReportAsync(Therefore.WebAPI.ExecuteReportParams parameters)
    {
        this.ExecuteReportAsync(parameters, null);
    }

    public void ExecuteReportAsync(Therefore.WebAPI.ExecuteReportParams parameters, object userState)
    {
        if ((this.onBeginExecuteReportDelegate == null))
        {
            this.onBeginExecuteReportDelegate = new BeginOperationDelegate(this.OnBeginExecuteReport);
        }
        if ((this.onEndExecuteReportDelegate == null))
        {
            this.onEndExecuteReportDelegate = new EndOperationDelegate(this.OnEndExecuteReport);
        }
        if ((this.onExecuteReportCompletedDelegate == null))
        {
            this.onExecuteReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteReportCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteReportDelegate, new object[] {
                    parameters}, this.onEndExecuteReportDelegate, this.onExecuteReportCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteSimpleQuery(Therefore.WebAPI.ExecuteSimpleQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteSimpleQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteSimpleQueryResponse IThereforeService.EndExecuteSimpleQuery(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteSimpleQuery(result);
    }

    private System.IAsyncResult OnBeginExecuteSimpleQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteSimpleQueryParams parameters = ((Therefore.WebAPI.ExecuteSimpleQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteSimpleQuery(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteSimpleQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteSimpleQueryResponse retVal = ((IThereforeService)(this)).EndExecuteSimpleQuery(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteSimpleQueryCompleted(object state)
    {
        if ((this.ExecuteSimpleQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteSimpleQueryCompleted(this, new ExecuteSimpleQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteSimpleQueryAsync(Therefore.WebAPI.ExecuteSimpleQueryParams parameters)
    {
        this.ExecuteSimpleQueryAsync(parameters, null);
    }

    public void ExecuteSimpleQueryAsync(Therefore.WebAPI.ExecuteSimpleQueryParams parameters, object userState)
    {
        if ((this.onBeginExecuteSimpleQueryDelegate == null))
        {
            this.onBeginExecuteSimpleQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteSimpleQuery);
        }
        if ((this.onEndExecuteSimpleQueryDelegate == null))
        {
            this.onEndExecuteSimpleQueryDelegate = new EndOperationDelegate(this.OnEndExecuteSimpleQuery);
        }
        if ((this.onExecuteSimpleQueryCompletedDelegate == null))
        {
            this.onExecuteSimpleQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteSimpleQueryCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteSimpleQueryDelegate, new object[] {
                    parameters}, this.onEndExecuteSimpleQueryDelegate, this.onExecuteSimpleQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteSingleQuery(Therefore.WebAPI.ExecuteSingleQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteSingleQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteSingleQueryResponse IThereforeService.EndExecuteSingleQuery(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteSingleQuery(result);
    }

    private System.IAsyncResult OnBeginExecuteSingleQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteSingleQueryParams parameters = ((Therefore.WebAPI.ExecuteSingleQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteSingleQuery(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteSingleQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteSingleQueryResponse retVal = ((IThereforeService)(this)).EndExecuteSingleQuery(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteSingleQueryCompleted(object state)
    {
        if ((this.ExecuteSingleQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteSingleQueryCompleted(this, new ExecuteSingleQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteSingleQueryAsync(Therefore.WebAPI.ExecuteSingleQueryParams parameters)
    {
        this.ExecuteSingleQueryAsync(parameters, null);
    }

    public void ExecuteSingleQueryAsync(Therefore.WebAPI.ExecuteSingleQueryParams parameters, object userState)
    {
        if ((this.onBeginExecuteSingleQueryDelegate == null))
        {
            this.onBeginExecuteSingleQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteSingleQuery);
        }
        if ((this.onEndExecuteSingleQueryDelegate == null))
        {
            this.onEndExecuteSingleQueryDelegate = new EndOperationDelegate(this.OnEndExecuteSingleQuery);
        }
        if ((this.onExecuteSingleQueryCompletedDelegate == null))
        {
            this.onExecuteSingleQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteSingleQueryCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteSingleQueryDelegate, new object[] {
                    parameters}, this.onEndExecuteSingleQueryDelegate, this.onExecuteSingleQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteTaskInfoQuery(Therefore.WebAPI.ExecuteTaskInfoQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteTaskInfoQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteTaskInfoQueryResponse IThereforeService.EndExecuteTaskInfoQuery(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteTaskInfoQuery(result);
    }

    private System.IAsyncResult OnBeginExecuteTaskInfoQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteTaskInfoQueryParams parameters = ((Therefore.WebAPI.ExecuteTaskInfoQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteTaskInfoQuery(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteTaskInfoQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteTaskInfoQueryResponse retVal = ((IThereforeService)(this)).EndExecuteTaskInfoQuery(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteTaskInfoQueryCompleted(object state)
    {
        if ((this.ExecuteTaskInfoQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteTaskInfoQueryCompleted(this, new ExecuteTaskInfoQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteTaskInfoQueryAsync(Therefore.WebAPI.ExecuteTaskInfoQueryParams parameters)
    {
        this.ExecuteTaskInfoQueryAsync(parameters, null);
    }

    public void ExecuteTaskInfoQueryAsync(Therefore.WebAPI.ExecuteTaskInfoQueryParams parameters, object userState)
    {
        if ((this.onBeginExecuteTaskInfoQueryDelegate == null))
        {
            this.onBeginExecuteTaskInfoQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteTaskInfoQuery);
        }
        if ((this.onEndExecuteTaskInfoQueryDelegate == null))
        {
            this.onEndExecuteTaskInfoQueryDelegate = new EndOperationDelegate(this.OnEndExecuteTaskInfoQuery);
        }
        if ((this.onExecuteTaskInfoQueryCompletedDelegate == null))
        {
            this.onExecuteTaskInfoQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteTaskInfoQueryCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteTaskInfoQueryDelegate, new object[] {
                    parameters}, this.onEndExecuteTaskInfoQueryDelegate, this.onExecuteTaskInfoQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteUsersQuery(Therefore.WebAPI.ExecuteUsersQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteUsersQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteUsersQueryResponse IThereforeService.EndExecuteUsersQuery(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteUsersQuery(result);
    }

    private System.IAsyncResult OnBeginExecuteUsersQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteUsersQueryParams parameters = ((Therefore.WebAPI.ExecuteUsersQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteUsersQuery(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteUsersQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteUsersQueryResponse retVal = ((IThereforeService)(this)).EndExecuteUsersQuery(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteUsersQueryCompleted(object state)
    {
        if ((this.ExecuteUsersQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteUsersQueryCompleted(this, new ExecuteUsersQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteUsersQueryAsync(Therefore.WebAPI.ExecuteUsersQueryParams parameters)
    {
        this.ExecuteUsersQueryAsync(parameters, null);
    }

    public void ExecuteUsersQueryAsync(Therefore.WebAPI.ExecuteUsersQueryParams parameters, object userState)
    {
        if ((this.onBeginExecuteUsersQueryDelegate == null))
        {
            this.onBeginExecuteUsersQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteUsersQuery);
        }
        if ((this.onEndExecuteUsersQueryDelegate == null))
        {
            this.onEndExecuteUsersQueryDelegate = new EndOperationDelegate(this.OnEndExecuteUsersQuery);
        }
        if ((this.onExecuteUsersQueryCompletedDelegate == null))
        {
            this.onExecuteUsersQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteUsersQueryCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteUsersQueryDelegate, new object[] {
                    parameters}, this.onEndExecuteUsersQueryDelegate, this.onExecuteUsersQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetUserDetails(Therefore.WebAPI.GetUserDetailsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetUserDetails(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetUserDetailsResponse IThereforeService.EndGetUserDetails(System.IAsyncResult result)
    {
        return base.Channel.EndGetUserDetails(result);
    }

    private System.IAsyncResult OnBeginGetUserDetails(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetUserDetailsParams parameters = ((Therefore.WebAPI.GetUserDetailsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetUserDetails(parameters, callback, asyncState);
    }

    private object[] OnEndGetUserDetails(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetUserDetailsResponse retVal = ((IThereforeService)(this)).EndGetUserDetails(result);
        return new object[] {
                retVal};
    }

    private void OnGetUserDetailsCompleted(object state)
    {
        if ((this.GetUserDetailsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetUserDetailsCompleted(this, new GetUserDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetUserDetailsAsync(Therefore.WebAPI.GetUserDetailsParams parameters)
    {
        this.GetUserDetailsAsync(parameters, null);
    }

    public void GetUserDetailsAsync(Therefore.WebAPI.GetUserDetailsParams parameters, object userState)
    {
        if ((this.onBeginGetUserDetailsDelegate == null))
        {
            this.onBeginGetUserDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetUserDetails);
        }
        if ((this.onEndGetUserDetailsDelegate == null))
        {
            this.onEndGetUserDetailsDelegate = new EndOperationDelegate(this.OnEndGetUserDetails);
        }
        if ((this.onGetUserDetailsCompletedDelegate == null))
        {
            this.onGetUserDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserDetailsCompleted);
        }
        base.InvokeAsync(this.onBeginGetUserDetailsDelegate, new object[] {
                    parameters}, this.onEndGetUserDetailsDelegate, this.onGetUserDetailsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteWorkflowQueryForAll(Therefore.WebAPI.ExecuteWorkflowQueryForAllParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteWorkflowQueryForAll(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteWorkflowQueryForAllResponse IThereforeService.EndExecuteWorkflowQueryForAll(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteWorkflowQueryForAll(result);
    }

    private System.IAsyncResult OnBeginExecuteWorkflowQueryForAll(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteWorkflowQueryForAllParams parameters = ((Therefore.WebAPI.ExecuteWorkflowQueryForAllParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteWorkflowQueryForAll(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteWorkflowQueryForAll(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteWorkflowQueryForAllResponse retVal = ((IThereforeService)(this)).EndExecuteWorkflowQueryForAll(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteWorkflowQueryForAllCompleted(object state)
    {
        if ((this.ExecuteWorkflowQueryForAllCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteWorkflowQueryForAllCompleted(this, new ExecuteWorkflowQueryForAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteWorkflowQueryForAllAsync(Therefore.WebAPI.ExecuteWorkflowQueryForAllParams parameters)
    {
        this.ExecuteWorkflowQueryForAllAsync(parameters, null);
    }

    public void ExecuteWorkflowQueryForAllAsync(Therefore.WebAPI.ExecuteWorkflowQueryForAllParams parameters, object userState)
    {
        if ((this.onBeginExecuteWorkflowQueryForAllDelegate == null))
        {
            this.onBeginExecuteWorkflowQueryForAllDelegate = new BeginOperationDelegate(this.OnBeginExecuteWorkflowQueryForAll);
        }
        if ((this.onEndExecuteWorkflowQueryForAllDelegate == null))
        {
            this.onEndExecuteWorkflowQueryForAllDelegate = new EndOperationDelegate(this.OnEndExecuteWorkflowQueryForAll);
        }
        if ((this.onExecuteWorkflowQueryForAllCompletedDelegate == null))
        {
            this.onExecuteWorkflowQueryForAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteWorkflowQueryForAllCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteWorkflowQueryForAllDelegate, new object[] {
                    parameters}, this.onEndExecuteWorkflowQueryForAllDelegate, this.onExecuteWorkflowQueryForAllCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteWorkflowQueryForProcess(Therefore.WebAPI.ExecuteWorkflowQueryForProcessParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteWorkflowQueryForProcess(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteWorkflowQueryForProcessResponse IThereforeService.EndExecuteWorkflowQueryForProcess(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteWorkflowQueryForProcess(result);
    }

    private System.IAsyncResult OnBeginExecuteWorkflowQueryForProcess(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteWorkflowQueryForProcessParams parameters = ((Therefore.WebAPI.ExecuteWorkflowQueryForProcessParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteWorkflowQueryForProcess(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteWorkflowQueryForProcess(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteWorkflowQueryForProcessResponse retVal = ((IThereforeService)(this)).EndExecuteWorkflowQueryForProcess(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteWorkflowQueryForProcessCompleted(object state)
    {
        if ((this.ExecuteWorkflowQueryForProcessCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteWorkflowQueryForProcessCompleted(this, new ExecuteWorkflowQueryForProcessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteWorkflowQueryForProcessAsync(Therefore.WebAPI.ExecuteWorkflowQueryForProcessParams parameters)
    {
        this.ExecuteWorkflowQueryForProcessAsync(parameters, null);
    }

    public void ExecuteWorkflowQueryForProcessAsync(Therefore.WebAPI.ExecuteWorkflowQueryForProcessParams parameters, object userState)
    {
        if ((this.onBeginExecuteWorkflowQueryForProcessDelegate == null))
        {
            this.onBeginExecuteWorkflowQueryForProcessDelegate = new BeginOperationDelegate(this.OnBeginExecuteWorkflowQueryForProcess);
        }
        if ((this.onEndExecuteWorkflowQueryForProcessDelegate == null))
        {
            this.onEndExecuteWorkflowQueryForProcessDelegate = new EndOperationDelegate(this.OnEndExecuteWorkflowQueryForProcess);
        }
        if ((this.onExecuteWorkflowQueryForProcessCompletedDelegate == null))
        {
            this.onExecuteWorkflowQueryForProcessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteWorkflowQueryForProcessCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteWorkflowQueryForProcessDelegate, new object[] {
                    parameters}, this.onEndExecuteWorkflowQueryForProcessDelegate, this.onExecuteWorkflowQueryForProcessCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginFillDependentFields(Therefore.WebAPI.FillDependentFieldsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginFillDependentFields(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.FillDependentFieldsResponse IThereforeService.EndFillDependentFields(System.IAsyncResult result)
    {
        return base.Channel.EndFillDependentFields(result);
    }

    private System.IAsyncResult OnBeginFillDependentFields(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.FillDependentFieldsParams parameters = ((Therefore.WebAPI.FillDependentFieldsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginFillDependentFields(parameters, callback, asyncState);
    }

    private object[] OnEndFillDependentFields(System.IAsyncResult result)
    {
        Therefore.WebAPI.FillDependentFieldsResponse retVal = ((IThereforeService)(this)).EndFillDependentFields(result);
        return new object[] {
                retVal};
    }

    private void OnFillDependentFieldsCompleted(object state)
    {
        if ((this.FillDependentFieldsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.FillDependentFieldsCompleted(this, new FillDependentFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void FillDependentFieldsAsync(Therefore.WebAPI.FillDependentFieldsParams parameters)
    {
        this.FillDependentFieldsAsync(parameters, null);
    }

    public void FillDependentFieldsAsync(Therefore.WebAPI.FillDependentFieldsParams parameters, object userState)
    {
        if ((this.onBeginFillDependentFieldsDelegate == null))
        {
            this.onBeginFillDependentFieldsDelegate = new BeginOperationDelegate(this.OnBeginFillDependentFields);
        }
        if ((this.onEndFillDependentFieldsDelegate == null))
        {
            this.onEndFillDependentFieldsDelegate = new EndOperationDelegate(this.OnEndFillDependentFields);
        }
        if ((this.onFillDependentFieldsCompletedDelegate == null))
        {
            this.onFillDependentFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFillDependentFieldsCompleted);
        }
        base.InvokeAsync(this.onBeginFillDependentFieldsDelegate, new object[] {
                    parameters}, this.onEndFillDependentFieldsDelegate, this.onFillDependentFieldsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginFinishCurrentWorkflowTask(Therefore.WebAPI.FinishCurrentWorkflowTaskParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginFinishCurrentWorkflowTask(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.FinishCurrentWorkflowTaskResponse IThereforeService.EndFinishCurrentWorkflowTask(System.IAsyncResult result)
    {
        return base.Channel.EndFinishCurrentWorkflowTask(result);
    }

    private System.IAsyncResult OnBeginFinishCurrentWorkflowTask(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.FinishCurrentWorkflowTaskParams parameters = ((Therefore.WebAPI.FinishCurrentWorkflowTaskParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginFinishCurrentWorkflowTask(parameters, callback, asyncState);
    }

    private object[] OnEndFinishCurrentWorkflowTask(System.IAsyncResult result)
    {
        Therefore.WebAPI.FinishCurrentWorkflowTaskResponse retVal = ((IThereforeService)(this)).EndFinishCurrentWorkflowTask(result);
        return new object[] {
                retVal};
    }

    private void OnFinishCurrentWorkflowTaskCompleted(object state)
    {
        if ((this.FinishCurrentWorkflowTaskCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.FinishCurrentWorkflowTaskCompleted(this, new FinishCurrentWorkflowTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void FinishCurrentWorkflowTaskAsync(Therefore.WebAPI.FinishCurrentWorkflowTaskParams parameters)
    {
        this.FinishCurrentWorkflowTaskAsync(parameters, null);
    }

    public void FinishCurrentWorkflowTaskAsync(Therefore.WebAPI.FinishCurrentWorkflowTaskParams parameters, object userState)
    {
        if ((this.onBeginFinishCurrentWorkflowTaskDelegate == null))
        {
            this.onBeginFinishCurrentWorkflowTaskDelegate = new BeginOperationDelegate(this.OnBeginFinishCurrentWorkflowTask);
        }
        if ((this.onEndFinishCurrentWorkflowTaskDelegate == null))
        {
            this.onEndFinishCurrentWorkflowTaskDelegate = new EndOperationDelegate(this.OnEndFinishCurrentWorkflowTask);
        }
        if ((this.onFinishCurrentWorkflowTaskCompletedDelegate == null))
        {
            this.onFinishCurrentWorkflowTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFinishCurrentWorkflowTaskCompleted);
        }
        base.InvokeAsync(this.onBeginFinishCurrentWorkflowTaskDelegate, new object[] {
                    parameters}, this.onEndFinishCurrentWorkflowTaskDelegate, this.onFinishCurrentWorkflowTaskCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetAllTreeViews(Therefore.WebAPI.GetAllTreeViewsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllTreeViews(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetAllTreeViewsResponse IThereforeService.EndGetAllTreeViews(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllTreeViews(result);
    }

    private System.IAsyncResult OnBeginGetAllTreeViews(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetAllTreeViewsParams parameters = ((Therefore.WebAPI.GetAllTreeViewsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetAllTreeViews(parameters, callback, asyncState);
    }

    private object[] OnEndGetAllTreeViews(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetAllTreeViewsResponse retVal = ((IThereforeService)(this)).EndGetAllTreeViews(result);
        return new object[] {
                retVal};
    }

    private void OnGetAllTreeViewsCompleted(object state)
    {
        if ((this.GetAllTreeViewsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllTreeViewsCompleted(this, new GetAllTreeViewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetAllTreeViewsAsync(Therefore.WebAPI.GetAllTreeViewsParams parameters)
    {
        this.GetAllTreeViewsAsync(parameters, null);
    }

    public void GetAllTreeViewsAsync(Therefore.WebAPI.GetAllTreeViewsParams parameters, object userState)
    {
        if ((this.onBeginGetAllTreeViewsDelegate == null))
        {
            this.onBeginGetAllTreeViewsDelegate = new BeginOperationDelegate(this.OnBeginGetAllTreeViews);
        }
        if ((this.onEndGetAllTreeViewsDelegate == null))
        {
            this.onEndGetAllTreeViewsDelegate = new EndOperationDelegate(this.OnEndGetAllTreeViews);
        }
        if ((this.onGetAllTreeViewsCompletedDelegate == null))
        {
            this.onGetAllTreeViewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTreeViewsCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllTreeViewsDelegate, new object[] {
                    parameters}, this.onEndGetAllTreeViewsDelegate, this.onGetAllTreeViewsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetCase(Therefore.WebAPI.GetCaseParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetCase(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetCaseResponse IThereforeService.EndGetCase(System.IAsyncResult result)
    {
        return base.Channel.EndGetCase(result);
    }

    private System.IAsyncResult OnBeginGetCase(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetCaseParams parameters = ((Therefore.WebAPI.GetCaseParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetCase(parameters, callback, asyncState);
    }

    private object[] OnEndGetCase(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetCaseResponse retVal = ((IThereforeService)(this)).EndGetCase(result);
        return new object[] {
                retVal};
    }

    private void OnGetCaseCompleted(object state)
    {
        if ((this.GetCaseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetCaseCompleted(this, new GetCaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetCaseAsync(Therefore.WebAPI.GetCaseParams parameters)
    {
        this.GetCaseAsync(parameters, null);
    }

    public void GetCaseAsync(Therefore.WebAPI.GetCaseParams parameters, object userState)
    {
        if ((this.onBeginGetCaseDelegate == null))
        {
            this.onBeginGetCaseDelegate = new BeginOperationDelegate(this.OnBeginGetCase);
        }
        if ((this.onEndGetCaseDelegate == null))
        {
            this.onEndGetCaseDelegate = new EndOperationDelegate(this.OnEndGetCase);
        }
        if ((this.onGetCaseCompletedDelegate == null))
        {
            this.onGetCaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCaseCompleted);
        }
        base.InvokeAsync(this.onBeginGetCaseDelegate, new object[] {
                    parameters}, this.onEndGetCaseDelegate, this.onGetCaseCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetCaseDefinition(Therefore.WebAPI.GetCaseDefinitionParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetCaseDefinition(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetCaseDefinitionResponse IThereforeService.EndGetCaseDefinition(System.IAsyncResult result)
    {
        return base.Channel.EndGetCaseDefinition(result);
    }

    private System.IAsyncResult OnBeginGetCaseDefinition(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetCaseDefinitionParams parameters = ((Therefore.WebAPI.GetCaseDefinitionParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetCaseDefinition(parameters, callback, asyncState);
    }

    private object[] OnEndGetCaseDefinition(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetCaseDefinitionResponse retVal = ((IThereforeService)(this)).EndGetCaseDefinition(result);
        return new object[] {
                retVal};
    }

    private void OnGetCaseDefinitionCompleted(object state)
    {
        if ((this.GetCaseDefinitionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetCaseDefinitionCompleted(this, new GetCaseDefinitionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetCaseDefinitionAsync(Therefore.WebAPI.GetCaseDefinitionParams parameters)
    {
        this.GetCaseDefinitionAsync(parameters, null);
    }

    public void GetCaseDefinitionAsync(Therefore.WebAPI.GetCaseDefinitionParams parameters, object userState)
    {
        if ((this.onBeginGetCaseDefinitionDelegate == null))
        {
            this.onBeginGetCaseDefinitionDelegate = new BeginOperationDelegate(this.OnBeginGetCaseDefinition);
        }
        if ((this.onEndGetCaseDefinitionDelegate == null))
        {
            this.onEndGetCaseDefinitionDelegate = new EndOperationDelegate(this.OnEndGetCaseDefinition);
        }
        if ((this.onGetCaseDefinitionCompletedDelegate == null))
        {
            this.onGetCaseDefinitionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCaseDefinitionCompleted);
        }
        base.InvokeAsync(this.onBeginGetCaseDefinitionDelegate, new object[] {
                    parameters}, this.onEndGetCaseDefinitionDelegate, this.onGetCaseDefinitionCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetCaseDocuments(Therefore.WebAPI.GetCaseDocumentsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetCaseDocuments(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetCaseDocumentsResponse IThereforeService.EndGetCaseDocuments(System.IAsyncResult result)
    {
        return base.Channel.EndGetCaseDocuments(result);
    }

    private System.IAsyncResult OnBeginGetCaseDocuments(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetCaseDocumentsParams parameters = ((Therefore.WebAPI.GetCaseDocumentsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetCaseDocuments(parameters, callback, asyncState);
    }

    private object[] OnEndGetCaseDocuments(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetCaseDocumentsResponse retVal = ((IThereforeService)(this)).EndGetCaseDocuments(result);
        return new object[] {
                retVal};
    }

    private void OnGetCaseDocumentsCompleted(object state)
    {
        if ((this.GetCaseDocumentsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetCaseDocumentsCompleted(this, new GetCaseDocumentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetCaseDocumentsAsync(Therefore.WebAPI.GetCaseDocumentsParams parameters)
    {
        this.GetCaseDocumentsAsync(parameters, null);
    }

    public void GetCaseDocumentsAsync(Therefore.WebAPI.GetCaseDocumentsParams parameters, object userState)
    {
        if ((this.onBeginGetCaseDocumentsDelegate == null))
        {
            this.onBeginGetCaseDocumentsDelegate = new BeginOperationDelegate(this.OnBeginGetCaseDocuments);
        }
        if ((this.onEndGetCaseDocumentsDelegate == null))
        {
            this.onEndGetCaseDocumentsDelegate = new EndOperationDelegate(this.OnEndGetCaseDocuments);
        }
        if ((this.onGetCaseDocumentsCompletedDelegate == null))
        {
            this.onGetCaseDocumentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCaseDocumentsCompleted);
        }
        base.InvokeAsync(this.onBeginGetCaseDocumentsDelegate, new object[] {
                    parameters}, this.onEndGetCaseDocumentsDelegate, this.onGetCaseDocumentsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetCaseHistory(Therefore.WebAPI.GetCaseHistoryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetCaseHistory(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetCaseHistoryResponse IThereforeService.EndGetCaseHistory(System.IAsyncResult result)
    {
        return base.Channel.EndGetCaseHistory(result);
    }

    private System.IAsyncResult OnBeginGetCaseHistory(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetCaseHistoryParams parameters = ((Therefore.WebAPI.GetCaseHistoryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetCaseHistory(parameters, callback, asyncState);
    }

    private object[] OnEndGetCaseHistory(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetCaseHistoryResponse retVal = ((IThereforeService)(this)).EndGetCaseHistory(result);
        return new object[] {
                retVal};
    }

    private void OnGetCaseHistoryCompleted(object state)
    {
        if ((this.GetCaseHistoryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetCaseHistoryCompleted(this, new GetCaseHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetCaseHistoryAsync(Therefore.WebAPI.GetCaseHistoryParams parameters)
    {
        this.GetCaseHistoryAsync(parameters, null);
    }

    public void GetCaseHistoryAsync(Therefore.WebAPI.GetCaseHistoryParams parameters, object userState)
    {
        if ((this.onBeginGetCaseHistoryDelegate == null))
        {
            this.onBeginGetCaseHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetCaseHistory);
        }
        if ((this.onEndGetCaseHistoryDelegate == null))
        {
            this.onEndGetCaseHistoryDelegate = new EndOperationDelegate(this.OnEndGetCaseHistory);
        }
        if ((this.onGetCaseHistoryCompletedDelegate == null))
        {
            this.onGetCaseHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCaseHistoryCompleted);
        }
        base.InvokeAsync(this.onBeginGetCaseHistoryDelegate, new object[] {
                    parameters}, this.onEndGetCaseHistoryDelegate, this.onGetCaseHistoryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetCategoriesTree(Therefore.WebAPI.GetCategoriesTreeParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetCategoriesTree(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetCategoriesTreeResponse IThereforeService.EndGetCategoriesTree(System.IAsyncResult result)
    {
        return base.Channel.EndGetCategoriesTree(result);
    }

    private System.IAsyncResult OnBeginGetCategoriesTree(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetCategoriesTreeParams parameters = ((Therefore.WebAPI.GetCategoriesTreeParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetCategoriesTree(parameters, callback, asyncState);
    }

    private object[] OnEndGetCategoriesTree(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetCategoriesTreeResponse retVal = ((IThereforeService)(this)).EndGetCategoriesTree(result);
        return new object[] {
                retVal};
    }

    private void OnGetCategoriesTreeCompleted(object state)
    {
        if ((this.GetCategoriesTreeCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetCategoriesTreeCompleted(this, new GetCategoriesTreeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetCategoriesTreeAsync(Therefore.WebAPI.GetCategoriesTreeParams parameters)
    {
        this.GetCategoriesTreeAsync(parameters, null);
    }

    public void GetCategoriesTreeAsync(Therefore.WebAPI.GetCategoriesTreeParams parameters, object userState)
    {
        if ((this.onBeginGetCategoriesTreeDelegate == null))
        {
            this.onBeginGetCategoriesTreeDelegate = new BeginOperationDelegate(this.OnBeginGetCategoriesTree);
        }
        if ((this.onEndGetCategoriesTreeDelegate == null))
        {
            this.onEndGetCategoriesTreeDelegate = new EndOperationDelegate(this.OnEndGetCategoriesTree);
        }
        if ((this.onGetCategoriesTreeCompletedDelegate == null))
        {
            this.onGetCategoriesTreeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoriesTreeCompleted);
        }
        base.InvokeAsync(this.onBeginGetCategoriesTreeDelegate, new object[] {
                    parameters}, this.onEndGetCategoriesTreeDelegate, this.onGetCategoriesTreeCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetCategoryInfo(Therefore.WebAPI.GetCategoryInfoParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetCategoryInfo(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetCategoryInfoResponse IThereforeService.EndGetCategoryInfo(System.IAsyncResult result)
    {
        return base.Channel.EndGetCategoryInfo(result);
    }

    private System.IAsyncResult OnBeginGetCategoryInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetCategoryInfoParams parameters = ((Therefore.WebAPI.GetCategoryInfoParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetCategoryInfo(parameters, callback, asyncState);
    }

    private object[] OnEndGetCategoryInfo(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetCategoryInfoResponse retVal = ((IThereforeService)(this)).EndGetCategoryInfo(result);
        return new object[] {
                retVal};
    }

    private void OnGetCategoryInfoCompleted(object state)
    {
        if ((this.GetCategoryInfoCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetCategoryInfoCompleted(this, new GetCategoryInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetCategoryInfoAsync(Therefore.WebAPI.GetCategoryInfoParams parameters)
    {
        this.GetCategoryInfoAsync(parameters, null);
    }

    public void GetCategoryInfoAsync(Therefore.WebAPI.GetCategoryInfoParams parameters, object userState)
    {
        if ((this.onBeginGetCategoryInfoDelegate == null))
        {
            this.onBeginGetCategoryInfoDelegate = new BeginOperationDelegate(this.OnBeginGetCategoryInfo);
        }
        if ((this.onEndGetCategoryInfoDelegate == null))
        {
            this.onEndGetCategoryInfoDelegate = new EndOperationDelegate(this.OnEndGetCategoryInfo);
        }
        if ((this.onGetCategoryInfoCompletedDelegate == null))
        {
            this.onGetCategoryInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoryInfoCompleted);
        }
        base.InvokeAsync(this.onBeginGetCategoryInfoDelegate, new object[] {
                    parameters}, this.onEndGetCategoryInfoDelegate, this.onGetCategoryInfoCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetConnectedUser(Therefore.WebAPI.GetConnectedUserParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetConnectedUser(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetConnectedUserResponse IThereforeService.EndGetConnectedUser(System.IAsyncResult result)
    {
        return base.Channel.EndGetConnectedUser(result);
    }

    private System.IAsyncResult OnBeginGetConnectedUser(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetConnectedUserParams parameters = ((Therefore.WebAPI.GetConnectedUserParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetConnectedUser(parameters, callback, asyncState);
    }

    private object[] OnEndGetConnectedUser(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetConnectedUserResponse retVal = ((IThereforeService)(this)).EndGetConnectedUser(result);
        return new object[] {
                retVal};
    }

    private void OnGetConnectedUserCompleted(object state)
    {
        if ((this.GetConnectedUserCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetConnectedUserCompleted(this, new GetConnectedUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetConnectedUserAsync(Therefore.WebAPI.GetConnectedUserParams parameters)
    {
        this.GetConnectedUserAsync(parameters, null);
    }

    public void GetConnectedUserAsync(Therefore.WebAPI.GetConnectedUserParams parameters, object userState)
    {
        if ((this.onBeginGetConnectedUserDelegate == null))
        {
            this.onBeginGetConnectedUserDelegate = new BeginOperationDelegate(this.OnBeginGetConnectedUser);
        }
        if ((this.onEndGetConnectedUserDelegate == null))
        {
            this.onEndGetConnectedUserDelegate = new EndOperationDelegate(this.OnEndGetConnectedUser);
        }
        if ((this.onGetConnectedUserCompletedDelegate == null))
        {
            this.onGetConnectedUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConnectedUserCompleted);
        }
        base.InvokeAsync(this.onBeginGetConnectedUserDelegate, new object[] {
                    parameters}, this.onEndGetConnectedUserDelegate, this.onGetConnectedUserCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetConvertedDocStreams(Therefore.WebAPI.GetConvertedDocStreamsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetConvertedDocStreams(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetConvertedDocStreamsResponse IThereforeService.EndGetConvertedDocStreams(System.IAsyncResult result)
    {
        return base.Channel.EndGetConvertedDocStreams(result);
    }

    private System.IAsyncResult OnBeginGetConvertedDocStreams(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetConvertedDocStreamsParams parameters = ((Therefore.WebAPI.GetConvertedDocStreamsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetConvertedDocStreams(parameters, callback, asyncState);
    }

    private object[] OnEndGetConvertedDocStreams(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetConvertedDocStreamsResponse retVal = ((IThereforeService)(this)).EndGetConvertedDocStreams(result);
        return new object[] {
                retVal};
    }

    private void OnGetConvertedDocStreamsCompleted(object state)
    {
        if ((this.GetConvertedDocStreamsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetConvertedDocStreamsCompleted(this, new GetConvertedDocStreamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetConvertedDocStreamsAsync(Therefore.WebAPI.GetConvertedDocStreamsParams parameters)
    {
        this.GetConvertedDocStreamsAsync(parameters, null);
    }

    public void GetConvertedDocStreamsAsync(Therefore.WebAPI.GetConvertedDocStreamsParams parameters, object userState)
    {
        if ((this.onBeginGetConvertedDocStreamsDelegate == null))
        {
            this.onBeginGetConvertedDocStreamsDelegate = new BeginOperationDelegate(this.OnBeginGetConvertedDocStreams);
        }
        if ((this.onEndGetConvertedDocStreamsDelegate == null))
        {
            this.onEndGetConvertedDocStreamsDelegate = new EndOperationDelegate(this.OnEndGetConvertedDocStreams);
        }
        if ((this.onGetConvertedDocStreamsCompletedDelegate == null))
        {
            this.onGetConvertedDocStreamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConvertedDocStreamsCompleted);
        }
        base.InvokeAsync(this.onBeginGetConvertedDocStreamsDelegate, new object[] {
                    parameters}, this.onEndGetConvertedDocStreamsDelegate, this.onGetConvertedDocStreamsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetConvertedDocStreamsRaw(Therefore.WebAPI.GetConvertedDocStreamsRawParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetConvertedDocStreamsRaw(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    byte[] IThereforeService.EndGetConvertedDocStreamsRaw(System.IAsyncResult result)
    {
        return base.Channel.EndGetConvertedDocStreamsRaw(result);
    }

    private System.IAsyncResult OnBeginGetConvertedDocStreamsRaw(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetConvertedDocStreamsRawParams parameters = ((Therefore.WebAPI.GetConvertedDocStreamsRawParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetConvertedDocStreamsRaw(parameters, callback, asyncState);
    }

    private object[] OnEndGetConvertedDocStreamsRaw(System.IAsyncResult result)
    {
        byte[] retVal = ((IThereforeService)(this)).EndGetConvertedDocStreamsRaw(result);
        return new object[] {
                retVal};
    }

    private void OnGetConvertedDocStreamsRawCompleted(object state)
    {
        if ((this.GetConvertedDocStreamsRawCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetConvertedDocStreamsRawCompleted(this, new GetConvertedDocStreamsRawCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetConvertedDocStreamsRawAsync(Therefore.WebAPI.GetConvertedDocStreamsRawParams parameters)
    {
        this.GetConvertedDocStreamsRawAsync(parameters, null);
    }

    public void GetConvertedDocStreamsRawAsync(Therefore.WebAPI.GetConvertedDocStreamsRawParams parameters, object userState)
    {
        if ((this.onBeginGetConvertedDocStreamsRawDelegate == null))
        {
            this.onBeginGetConvertedDocStreamsRawDelegate = new BeginOperationDelegate(this.OnBeginGetConvertedDocStreamsRaw);
        }
        if ((this.onEndGetConvertedDocStreamsRawDelegate == null))
        {
            this.onEndGetConvertedDocStreamsRawDelegate = new EndOperationDelegate(this.OnEndGetConvertedDocStreamsRaw);
        }
        if ((this.onGetConvertedDocStreamsRawCompletedDelegate == null))
        {
            this.onGetConvertedDocStreamsRawCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConvertedDocStreamsRawCompleted);
        }
        base.InvokeAsync(this.onBeginGetConvertedDocStreamsRawDelegate, new object[] {
                    parameters}, this.onEndGetConvertedDocStreamsRawDelegate, this.onGetConvertedDocStreamsRawCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetDictionaryInfo(Therefore.WebAPI.GetDictionaryInfoParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDictionaryInfo(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetDictionaryInfoResponse IThereforeService.EndGetDictionaryInfo(System.IAsyncResult result)
    {
        return base.Channel.EndGetDictionaryInfo(result);
    }

    private System.IAsyncResult OnBeginGetDictionaryInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetDictionaryInfoParams parameters = ((Therefore.WebAPI.GetDictionaryInfoParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetDictionaryInfo(parameters, callback, asyncState);
    }

    private object[] OnEndGetDictionaryInfo(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetDictionaryInfoResponse retVal = ((IThereforeService)(this)).EndGetDictionaryInfo(result);
        return new object[] {
                retVal};
    }

    private void OnGetDictionaryInfoCompleted(object state)
    {
        if ((this.GetDictionaryInfoCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDictionaryInfoCompleted(this, new GetDictionaryInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetDictionaryInfoAsync(Therefore.WebAPI.GetDictionaryInfoParams parameters)
    {
        this.GetDictionaryInfoAsync(parameters, null);
    }

    public void GetDictionaryInfoAsync(Therefore.WebAPI.GetDictionaryInfoParams parameters, object userState)
    {
        if ((this.onBeginGetDictionaryInfoDelegate == null))
        {
            this.onBeginGetDictionaryInfoDelegate = new BeginOperationDelegate(this.OnBeginGetDictionaryInfo);
        }
        if ((this.onEndGetDictionaryInfoDelegate == null))
        {
            this.onEndGetDictionaryInfoDelegate = new EndOperationDelegate(this.OnEndGetDictionaryInfo);
        }
        if ((this.onGetDictionaryInfoCompletedDelegate == null))
        {
            this.onGetDictionaryInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDictionaryInfoCompleted);
        }
        base.InvokeAsync(this.onBeginGetDictionaryInfoDelegate, new object[] {
                    parameters}, this.onEndGetDictionaryInfoDelegate, this.onGetDictionaryInfoCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetDocument(Therefore.WebAPI.GetDocumentParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDocument(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetDocumentResponse IThereforeService.EndGetDocument(System.IAsyncResult result)
    {
        return base.Channel.EndGetDocument(result);
    }

    private System.IAsyncResult OnBeginGetDocument(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetDocumentParams parameters = ((Therefore.WebAPI.GetDocumentParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetDocument(parameters, callback, asyncState);
    }

    private object[] OnEndGetDocument(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetDocumentResponse retVal = ((IThereforeService)(this)).EndGetDocument(result);
        return new object[] {
                retVal};
    }

    private void OnGetDocumentCompleted(object state)
    {
        if ((this.GetDocumentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDocumentCompleted(this, new GetDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetDocumentAsync(Therefore.WebAPI.GetDocumentParams parameters)
    {
        this.GetDocumentAsync(parameters, null);
    }

    public void GetDocumentAsync(Therefore.WebAPI.GetDocumentParams parameters, object userState)
    {
        if ((this.onBeginGetDocumentDelegate == null))
        {
            this.onBeginGetDocumentDelegate = new BeginOperationDelegate(this.OnBeginGetDocument);
        }
        if ((this.onEndGetDocumentDelegate == null))
        {
            this.onEndGetDocumentDelegate = new EndOperationDelegate(this.OnEndGetDocument);
        }
        if ((this.onGetDocumentCompletedDelegate == null))
        {
            this.onGetDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentCompleted);
        }
        base.InvokeAsync(this.onBeginGetDocumentDelegate, new object[] {
                    parameters}, this.onEndGetDocumentDelegate, this.onGetDocumentCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetDocumentCheckoutStatus(Therefore.WebAPI.GetDocumentCheckoutStateParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDocumentCheckoutStatus(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetDocumentCheckoutStateResponse IThereforeService.EndGetDocumentCheckoutStatus(System.IAsyncResult result)
    {
        return base.Channel.EndGetDocumentCheckoutStatus(result);
    }

    private System.IAsyncResult OnBeginGetDocumentCheckoutStatus(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetDocumentCheckoutStateParams parameters = ((Therefore.WebAPI.GetDocumentCheckoutStateParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetDocumentCheckoutStatus(parameters, callback, asyncState);
    }

    private object[] OnEndGetDocumentCheckoutStatus(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetDocumentCheckoutStateResponse retVal = ((IThereforeService)(this)).EndGetDocumentCheckoutStatus(result);
        return new object[] {
                retVal};
    }

    private void OnGetDocumentCheckoutStatusCompleted(object state)
    {
        if ((this.GetDocumentCheckoutStatusCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDocumentCheckoutStatusCompleted(this, new GetDocumentCheckoutStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetDocumentCheckoutStatusAsync(Therefore.WebAPI.GetDocumentCheckoutStateParams parameters)
    {
        this.GetDocumentCheckoutStatusAsync(parameters, null);
    }

    public void GetDocumentCheckoutStatusAsync(Therefore.WebAPI.GetDocumentCheckoutStateParams parameters, object userState)
    {
        if ((this.onBeginGetDocumentCheckoutStatusDelegate == null))
        {
            this.onBeginGetDocumentCheckoutStatusDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentCheckoutStatus);
        }
        if ((this.onEndGetDocumentCheckoutStatusDelegate == null))
        {
            this.onEndGetDocumentCheckoutStatusDelegate = new EndOperationDelegate(this.OnEndGetDocumentCheckoutStatus);
        }
        if ((this.onGetDocumentCheckoutStatusCompletedDelegate == null))
        {
            this.onGetDocumentCheckoutStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentCheckoutStatusCompleted);
        }
        base.InvokeAsync(this.onBeginGetDocumentCheckoutStatusDelegate, new object[] {
                    parameters}, this.onEndGetDocumentCheckoutStatusDelegate, this.onGetDocumentCheckoutStatusCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetDocumentIndexData(Therefore.WebAPI.GetDocumentIndexDataParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDocumentIndexData(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetDocumentIndexDataResponse IThereforeService.EndGetDocumentIndexData(System.IAsyncResult result)
    {
        return base.Channel.EndGetDocumentIndexData(result);
    }

    private System.IAsyncResult OnBeginGetDocumentIndexData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetDocumentIndexDataParams parameters = ((Therefore.WebAPI.GetDocumentIndexDataParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetDocumentIndexData(parameters, callback, asyncState);
    }

    private object[] OnEndGetDocumentIndexData(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetDocumentIndexDataResponse retVal = ((IThereforeService)(this)).EndGetDocumentIndexData(result);
        return new object[] {
                retVal};
    }

    private void OnGetDocumentIndexDataCompleted(object state)
    {
        if ((this.GetDocumentIndexDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDocumentIndexDataCompleted(this, new GetDocumentIndexDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetDocumentIndexDataAsync(Therefore.WebAPI.GetDocumentIndexDataParams parameters)
    {
        this.GetDocumentIndexDataAsync(parameters, null);
    }

    public void GetDocumentIndexDataAsync(Therefore.WebAPI.GetDocumentIndexDataParams parameters, object userState)
    {
        if ((this.onBeginGetDocumentIndexDataDelegate == null))
        {
            this.onBeginGetDocumentIndexDataDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentIndexData);
        }
        if ((this.onEndGetDocumentIndexDataDelegate == null))
        {
            this.onEndGetDocumentIndexDataDelegate = new EndOperationDelegate(this.OnEndGetDocumentIndexData);
        }
        if ((this.onGetDocumentIndexDataCompletedDelegate == null))
        {
            this.onGetDocumentIndexDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentIndexDataCompleted);
        }
        base.InvokeAsync(this.onBeginGetDocumentIndexDataDelegate, new object[] {
                    parameters}, this.onEndGetDocumentIndexDataDelegate, this.onGetDocumentIndexDataCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetDocumentProperties(Therefore.WebAPI.GetDocumentPropertiesParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDocumentProperties(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetDocumentPropertiesResponse IThereforeService.EndGetDocumentProperties(System.IAsyncResult result)
    {
        return base.Channel.EndGetDocumentProperties(result);
    }

    private System.IAsyncResult OnBeginGetDocumentProperties(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetDocumentPropertiesParams parameters = ((Therefore.WebAPI.GetDocumentPropertiesParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetDocumentProperties(parameters, callback, asyncState);
    }

    private object[] OnEndGetDocumentProperties(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetDocumentPropertiesResponse retVal = ((IThereforeService)(this)).EndGetDocumentProperties(result);
        return new object[] {
                retVal};
    }

    private void OnGetDocumentPropertiesCompleted(object state)
    {
        if ((this.GetDocumentPropertiesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDocumentPropertiesCompleted(this, new GetDocumentPropertiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetDocumentPropertiesAsync(Therefore.WebAPI.GetDocumentPropertiesParams parameters)
    {
        this.GetDocumentPropertiesAsync(parameters, null);
    }

    public void GetDocumentPropertiesAsync(Therefore.WebAPI.GetDocumentPropertiesParams parameters, object userState)
    {
        if ((this.onBeginGetDocumentPropertiesDelegate == null))
        {
            this.onBeginGetDocumentPropertiesDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentProperties);
        }
        if ((this.onEndGetDocumentPropertiesDelegate == null))
        {
            this.onEndGetDocumentPropertiesDelegate = new EndOperationDelegate(this.OnEndGetDocumentProperties);
        }
        if ((this.onGetDocumentPropertiesCompletedDelegate == null))
        {
            this.onGetDocumentPropertiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentPropertiesCompleted);
        }
        base.InvokeAsync(this.onBeginGetDocumentPropertiesDelegate, new object[] {
                    parameters}, this.onEndGetDocumentPropertiesDelegate, this.onGetDocumentPropertiesCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetDocumentHistory(Therefore.WebAPI.GetDocumentHistoryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDocumentHistory(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetDocumentHistoryResponse IThereforeService.EndGetDocumentHistory(System.IAsyncResult result)
    {
        return base.Channel.EndGetDocumentHistory(result);
    }

    private System.IAsyncResult OnBeginGetDocumentHistory(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetDocumentHistoryParams parameters = ((Therefore.WebAPI.GetDocumentHistoryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetDocumentHistory(parameters, callback, asyncState);
    }

    private object[] OnEndGetDocumentHistory(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetDocumentHistoryResponse retVal = ((IThereforeService)(this)).EndGetDocumentHistory(result);
        return new object[] {
                retVal};
    }

    private void OnGetDocumentHistoryCompleted(object state)
    {
        if ((this.GetDocumentHistoryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDocumentHistoryCompleted(this, new GetDocumentHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetDocumentHistoryAsync(Therefore.WebAPI.GetDocumentHistoryParams parameters)
    {
        this.GetDocumentHistoryAsync(parameters, null);
    }

    public void GetDocumentHistoryAsync(Therefore.WebAPI.GetDocumentHistoryParams parameters, object userState)
    {
        if ((this.onBeginGetDocumentHistoryDelegate == null))
        {
            this.onBeginGetDocumentHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentHistory);
        }
        if ((this.onEndGetDocumentHistoryDelegate == null))
        {
            this.onEndGetDocumentHistoryDelegate = new EndOperationDelegate(this.OnEndGetDocumentHistory);
        }
        if ((this.onGetDocumentHistoryCompletedDelegate == null))
        {
            this.onGetDocumentHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentHistoryCompleted);
        }
        base.InvokeAsync(this.onBeginGetDocumentHistoryDelegate, new object[] {
                    parameters}, this.onEndGetDocumentHistoryDelegate, this.onGetDocumentHistoryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetDocumentStream(Therefore.WebAPI.GetDocumentStreamParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDocumentStream(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetDocumentStreamResponse IThereforeService.EndGetDocumentStream(System.IAsyncResult result)
    {
        return base.Channel.EndGetDocumentStream(result);
    }

    private System.IAsyncResult OnBeginGetDocumentStream(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetDocumentStreamParams parameters = ((Therefore.WebAPI.GetDocumentStreamParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetDocumentStream(parameters, callback, asyncState);
    }

    private object[] OnEndGetDocumentStream(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetDocumentStreamResponse retVal = ((IThereforeService)(this)).EndGetDocumentStream(result);
        return new object[] {
                retVal};
    }

    private void OnGetDocumentStreamCompleted(object state)
    {
        if ((this.GetDocumentStreamCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDocumentStreamCompleted(this, new GetDocumentStreamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetDocumentStreamAsync(Therefore.WebAPI.GetDocumentStreamParams parameters)
    {
        this.GetDocumentStreamAsync(parameters, null);
    }

    public void GetDocumentStreamAsync(Therefore.WebAPI.GetDocumentStreamParams parameters, object userState)
    {
        if ((this.onBeginGetDocumentStreamDelegate == null))
        {
            this.onBeginGetDocumentStreamDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentStream);
        }
        if ((this.onEndGetDocumentStreamDelegate == null))
        {
            this.onEndGetDocumentStreamDelegate = new EndOperationDelegate(this.OnEndGetDocumentStream);
        }
        if ((this.onGetDocumentStreamCompletedDelegate == null))
        {
            this.onGetDocumentStreamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentStreamCompleted);
        }
        base.InvokeAsync(this.onBeginGetDocumentStreamDelegate, new object[] {
                    parameters}, this.onEndGetDocumentStreamDelegate, this.onGetDocumentStreamCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetDocumentStreamRaw(Therefore.WebAPI.GetDocumentStreamRawParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDocumentStreamRaw(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    byte[] IThereforeService.EndGetDocumentStreamRaw(System.IAsyncResult result)
    {
        return base.Channel.EndGetDocumentStreamRaw(result);
    }

    private System.IAsyncResult OnBeginGetDocumentStreamRaw(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetDocumentStreamRawParams parameters = ((Therefore.WebAPI.GetDocumentStreamRawParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetDocumentStreamRaw(parameters, callback, asyncState);
    }

    private object[] OnEndGetDocumentStreamRaw(System.IAsyncResult result)
    {
        byte[] retVal = ((IThereforeService)(this)).EndGetDocumentStreamRaw(result);
        return new object[] {
                retVal};
    }

    private void OnGetDocumentStreamRawCompleted(object state)
    {
        if ((this.GetDocumentStreamRawCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDocumentStreamRawCompleted(this, new GetDocumentStreamRawCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetDocumentStreamRawAsync(Therefore.WebAPI.GetDocumentStreamRawParams parameters)
    {
        this.GetDocumentStreamRawAsync(parameters, null);
    }

    public void GetDocumentStreamRawAsync(Therefore.WebAPI.GetDocumentStreamRawParams parameters, object userState)
    {
        if ((this.onBeginGetDocumentStreamRawDelegate == null))
        {
            this.onBeginGetDocumentStreamRawDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentStreamRaw);
        }
        if ((this.onEndGetDocumentStreamRawDelegate == null))
        {
            this.onEndGetDocumentStreamRawDelegate = new EndOperationDelegate(this.OnEndGetDocumentStreamRaw);
        }
        if ((this.onGetDocumentStreamRawCompletedDelegate == null))
        {
            this.onGetDocumentStreamRawCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentStreamRawCompleted);
        }
        base.InvokeAsync(this.onBeginGetDocumentStreamRawDelegate, new object[] {
                    parameters}, this.onEndGetDocumentStreamRawDelegate, this.onGetDocumentStreamRawCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetDomainInfo(Therefore.WebAPI.GetDomainInfoParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDomainInfo(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetDomainInfoResponse IThereforeService.EndGetDomainInfo(System.IAsyncResult result)
    {
        return base.Channel.EndGetDomainInfo(result);
    }

    private System.IAsyncResult OnBeginGetDomainInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetDomainInfoParams parameters = ((Therefore.WebAPI.GetDomainInfoParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetDomainInfo(parameters, callback, asyncState);
    }

    private object[] OnEndGetDomainInfo(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetDomainInfoResponse retVal = ((IThereforeService)(this)).EndGetDomainInfo(result);
        return new object[] {
                retVal};
    }

    private void OnGetDomainInfoCompleted(object state)
    {
        if ((this.GetDomainInfoCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDomainInfoCompleted(this, new GetDomainInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetDomainInfoAsync(Therefore.WebAPI.GetDomainInfoParams parameters)
    {
        this.GetDomainInfoAsync(parameters, null);
    }

    public void GetDomainInfoAsync(Therefore.WebAPI.GetDomainInfoParams parameters, object userState)
    {
        if ((this.onBeginGetDomainInfoDelegate == null))
        {
            this.onBeginGetDomainInfoDelegate = new BeginOperationDelegate(this.OnBeginGetDomainInfo);
        }
        if ((this.onEndGetDomainInfoDelegate == null))
        {
            this.onEndGetDomainInfoDelegate = new EndOperationDelegate(this.OnEndGetDomainInfo);
        }
        if ((this.onGetDomainInfoCompletedDelegate == null))
        {
            this.onGetDomainInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDomainInfoCompleted);
        }
        base.InvokeAsync(this.onBeginGetDomainInfoDelegate, new object[] {
                    parameters}, this.onEndGetDomainInfoDelegate, this.onGetDomainInfoCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetKeywordsByFieldNo(Therefore.WebAPI.GetKeywordsByFieldNoParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetKeywordsByFieldNo(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetKeywordsByFieldNoResponse IThereforeService.EndGetKeywordsByFieldNo(System.IAsyncResult result)
    {
        return base.Channel.EndGetKeywordsByFieldNo(result);
    }

    private System.IAsyncResult OnBeginGetKeywordsByFieldNo(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetKeywordsByFieldNoParams parameters = ((Therefore.WebAPI.GetKeywordsByFieldNoParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetKeywordsByFieldNo(parameters, callback, asyncState);
    }

    private object[] OnEndGetKeywordsByFieldNo(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetKeywordsByFieldNoResponse retVal = ((IThereforeService)(this)).EndGetKeywordsByFieldNo(result);
        return new object[] {
                retVal};
    }

    private void OnGetKeywordsByFieldNoCompleted(object state)
    {
        if ((this.GetKeywordsByFieldNoCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetKeywordsByFieldNoCompleted(this, new GetKeywordsByFieldNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetKeywordsByFieldNoAsync(Therefore.WebAPI.GetKeywordsByFieldNoParams parameters)
    {
        this.GetKeywordsByFieldNoAsync(parameters, null);
    }

    public void GetKeywordsByFieldNoAsync(Therefore.WebAPI.GetKeywordsByFieldNoParams parameters, object userState)
    {
        if ((this.onBeginGetKeywordsByFieldNoDelegate == null))
        {
            this.onBeginGetKeywordsByFieldNoDelegate = new BeginOperationDelegate(this.OnBeginGetKeywordsByFieldNo);
        }
        if ((this.onEndGetKeywordsByFieldNoDelegate == null))
        {
            this.onEndGetKeywordsByFieldNoDelegate = new EndOperationDelegate(this.OnEndGetKeywordsByFieldNo);
        }
        if ((this.onGetKeywordsByFieldNoCompletedDelegate == null))
        {
            this.onGetKeywordsByFieldNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKeywordsByFieldNoCompleted);
        }
        base.InvokeAsync(this.onBeginGetKeywordsByFieldNoDelegate, new object[] {
                    parameters}, this.onEndGetKeywordsByFieldNoDelegate, this.onGetKeywordsByFieldNoCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetLinkedObjects(Therefore.WebAPI.GetLinkedObjectsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetLinkedObjects(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetLinkedObjectsResponse IThereforeService.EndGetLinkedObjects(System.IAsyncResult result)
    {
        return base.Channel.EndGetLinkedObjects(result);
    }

    private System.IAsyncResult OnBeginGetLinkedObjects(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetLinkedObjectsParams parameters = ((Therefore.WebAPI.GetLinkedObjectsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetLinkedObjects(parameters, callback, asyncState);
    }

    private object[] OnEndGetLinkedObjects(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetLinkedObjectsResponse retVal = ((IThereforeService)(this)).EndGetLinkedObjects(result);
        return new object[] {
                retVal};
    }

    private void OnGetLinkedObjectsCompleted(object state)
    {
        if ((this.GetLinkedObjectsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetLinkedObjectsCompleted(this, new GetLinkedObjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetLinkedObjectsAsync(Therefore.WebAPI.GetLinkedObjectsParams parameters)
    {
        this.GetLinkedObjectsAsync(parameters, null);
    }

    public void GetLinkedObjectsAsync(Therefore.WebAPI.GetLinkedObjectsParams parameters, object userState)
    {
        if ((this.onBeginGetLinkedObjectsDelegate == null))
        {
            this.onBeginGetLinkedObjectsDelegate = new BeginOperationDelegate(this.OnBeginGetLinkedObjects);
        }
        if ((this.onEndGetLinkedObjectsDelegate == null))
        {
            this.onEndGetLinkedObjectsDelegate = new EndOperationDelegate(this.OnEndGetLinkedObjects);
        }
        if ((this.onGetLinkedObjectsCompletedDelegate == null))
        {
            this.onGetLinkedObjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLinkedObjectsCompleted);
        }
        base.InvokeAsync(this.onBeginGetLinkedObjectsDelegate, new object[] {
                    parameters}, this.onEndGetLinkedObjectsDelegate, this.onGetLinkedObjectsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetLinkedWorkflowsForDoc(Therefore.WebAPI.GetLinkedWorkflowsForDocParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetLinkedWorkflowsForDoc(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetLinkedWorkflowsForDocResponse IThereforeService.EndGetLinkedWorkflowsForDoc(System.IAsyncResult result)
    {
        return base.Channel.EndGetLinkedWorkflowsForDoc(result);
    }

    private System.IAsyncResult OnBeginGetLinkedWorkflowsForDoc(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetLinkedWorkflowsForDocParams parameters = ((Therefore.WebAPI.GetLinkedWorkflowsForDocParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetLinkedWorkflowsForDoc(parameters, callback, asyncState);
    }

    private object[] OnEndGetLinkedWorkflowsForDoc(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetLinkedWorkflowsForDocResponse retVal = ((IThereforeService)(this)).EndGetLinkedWorkflowsForDoc(result);
        return new object[] {
                retVal};
    }

    private void OnGetLinkedWorkflowsForDocCompleted(object state)
    {
        if ((this.GetLinkedWorkflowsForDocCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetLinkedWorkflowsForDocCompleted(this, new GetLinkedWorkflowsForDocCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetLinkedWorkflowsForDocAsync(Therefore.WebAPI.GetLinkedWorkflowsForDocParams parameters)
    {
        this.GetLinkedWorkflowsForDocAsync(parameters, null);
    }

    public void GetLinkedWorkflowsForDocAsync(Therefore.WebAPI.GetLinkedWorkflowsForDocParams parameters, object userState)
    {
        if ((this.onBeginGetLinkedWorkflowsForDocDelegate == null))
        {
            this.onBeginGetLinkedWorkflowsForDocDelegate = new BeginOperationDelegate(this.OnBeginGetLinkedWorkflowsForDoc);
        }
        if ((this.onEndGetLinkedWorkflowsForDocDelegate == null))
        {
            this.onEndGetLinkedWorkflowsForDocDelegate = new EndOperationDelegate(this.OnEndGetLinkedWorkflowsForDoc);
        }
        if ((this.onGetLinkedWorkflowsForDocCompletedDelegate == null))
        {
            this.onGetLinkedWorkflowsForDocCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLinkedWorkflowsForDocCompleted);
        }
        base.InvokeAsync(this.onBeginGetLinkedWorkflowsForDocDelegate, new object[] {
                    parameters}, this.onEndGetLinkedWorkflowsForDocDelegate, this.onGetLinkedWorkflowsForDocCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetNextFullTextQueryRows(Therefore.WebAPI.GetNextFullTextQueryRowsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetNextFullTextQueryRows(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetNextFullTextQueryRowsResponse IThereforeService.EndGetNextFullTextQueryRows(System.IAsyncResult result)
    {
        return base.Channel.EndGetNextFullTextQueryRows(result);
    }

    private System.IAsyncResult OnBeginGetNextFullTextQueryRows(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetNextFullTextQueryRowsParams parameters = ((Therefore.WebAPI.GetNextFullTextQueryRowsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetNextFullTextQueryRows(parameters, callback, asyncState);
    }

    private object[] OnEndGetNextFullTextQueryRows(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetNextFullTextQueryRowsResponse retVal = ((IThereforeService)(this)).EndGetNextFullTextQueryRows(result);
        return new object[] {
                retVal};
    }

    private void OnGetNextFullTextQueryRowsCompleted(object state)
    {
        if ((this.GetNextFullTextQueryRowsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetNextFullTextQueryRowsCompleted(this, new GetNextFullTextQueryRowsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetNextFullTextQueryRowsAsync(Therefore.WebAPI.GetNextFullTextQueryRowsParams parameters)
    {
        this.GetNextFullTextQueryRowsAsync(parameters, null);
    }

    public void GetNextFullTextQueryRowsAsync(Therefore.WebAPI.GetNextFullTextQueryRowsParams parameters, object userState)
    {
        if ((this.onBeginGetNextFullTextQueryRowsDelegate == null))
        {
            this.onBeginGetNextFullTextQueryRowsDelegate = new BeginOperationDelegate(this.OnBeginGetNextFullTextQueryRows);
        }
        if ((this.onEndGetNextFullTextQueryRowsDelegate == null))
        {
            this.onEndGetNextFullTextQueryRowsDelegate = new EndOperationDelegate(this.OnEndGetNextFullTextQueryRows);
        }
        if ((this.onGetNextFullTextQueryRowsCompletedDelegate == null))
        {
            this.onGetNextFullTextQueryRowsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextFullTextQueryRowsCompleted);
        }
        base.InvokeAsync(this.onBeginGetNextFullTextQueryRowsDelegate, new object[] {
                    parameters}, this.onEndGetNextFullTextQueryRowsDelegate, this.onGetNextFullTextQueryRowsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetNextMultiQueryRows(Therefore.WebAPI.GetNextMultiQueryRowsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetNextMultiQueryRows(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetNextMultiQueryRowsResponse IThereforeService.EndGetNextMultiQueryRows(System.IAsyncResult result)
    {
        return base.Channel.EndGetNextMultiQueryRows(result);
    }

    private System.IAsyncResult OnBeginGetNextMultiQueryRows(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetNextMultiQueryRowsParams parameters = ((Therefore.WebAPI.GetNextMultiQueryRowsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetNextMultiQueryRows(parameters, callback, asyncState);
    }

    private object[] OnEndGetNextMultiQueryRows(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetNextMultiQueryRowsResponse retVal = ((IThereforeService)(this)).EndGetNextMultiQueryRows(result);
        return new object[] {
                retVal};
    }

    private void OnGetNextMultiQueryRowsCompleted(object state)
    {
        if ((this.GetNextMultiQueryRowsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetNextMultiQueryRowsCompleted(this, new GetNextMultiQueryRowsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetNextMultiQueryRowsAsync(Therefore.WebAPI.GetNextMultiQueryRowsParams parameters)
    {
        this.GetNextMultiQueryRowsAsync(parameters, null);
    }

    public void GetNextMultiQueryRowsAsync(Therefore.WebAPI.GetNextMultiQueryRowsParams parameters, object userState)
    {
        if ((this.onBeginGetNextMultiQueryRowsDelegate == null))
        {
            this.onBeginGetNextMultiQueryRowsDelegate = new BeginOperationDelegate(this.OnBeginGetNextMultiQueryRows);
        }
        if ((this.onEndGetNextMultiQueryRowsDelegate == null))
        {
            this.onEndGetNextMultiQueryRowsDelegate = new EndOperationDelegate(this.OnEndGetNextMultiQueryRows);
        }
        if ((this.onGetNextMultiQueryRowsCompletedDelegate == null))
        {
            this.onGetNextMultiQueryRowsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextMultiQueryRowsCompleted);
        }
        base.InvokeAsync(this.onBeginGetNextMultiQueryRowsDelegate, new object[] {
                    parameters}, this.onEndGetNextMultiQueryRowsDelegate, this.onGetNextMultiQueryRowsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetNextSingleQueryRows(Therefore.WebAPI.GetNextSingleQueryRowsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetNextSingleQueryRows(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetNextSingleQueryRowsResponse IThereforeService.EndGetNextSingleQueryRows(System.IAsyncResult result)
    {
        return base.Channel.EndGetNextSingleQueryRows(result);
    }

    private System.IAsyncResult OnBeginGetNextSingleQueryRows(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetNextSingleQueryRowsParams parameters = ((Therefore.WebAPI.GetNextSingleQueryRowsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetNextSingleQueryRows(parameters, callback, asyncState);
    }

    private object[] OnEndGetNextSingleQueryRows(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetNextSingleQueryRowsResponse retVal = ((IThereforeService)(this)).EndGetNextSingleQueryRows(result);
        return new object[] {
                retVal};
    }

    private void OnGetNextSingleQueryRowsCompleted(object state)
    {
        if ((this.GetNextSingleQueryRowsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetNextSingleQueryRowsCompleted(this, new GetNextSingleQueryRowsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetNextSingleQueryRowsAsync(Therefore.WebAPI.GetNextSingleQueryRowsParams parameters)
    {
        this.GetNextSingleQueryRowsAsync(parameters, null);
    }

    public void GetNextSingleQueryRowsAsync(Therefore.WebAPI.GetNextSingleQueryRowsParams parameters, object userState)
    {
        if ((this.onBeginGetNextSingleQueryRowsDelegate == null))
        {
            this.onBeginGetNextSingleQueryRowsDelegate = new BeginOperationDelegate(this.OnBeginGetNextSingleQueryRows);
        }
        if ((this.onEndGetNextSingleQueryRowsDelegate == null))
        {
            this.onEndGetNextSingleQueryRowsDelegate = new EndOperationDelegate(this.OnEndGetNextSingleQueryRows);
        }
        if ((this.onGetNextSingleQueryRowsCompletedDelegate == null))
        {
            this.onGetNextSingleQueryRowsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextSingleQueryRowsCompleted);
        }
        base.InvokeAsync(this.onBeginGetNextSingleQueryRowsDelegate, new object[] {
                    parameters}, this.onEndGetNextSingleQueryRowsDelegate, this.onGetNextSingleQueryRowsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetObjectRights(Therefore.WebAPI.GetObjectRightsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetObjectRights(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetObjectRightsResponse IThereforeService.EndGetObjectRights(System.IAsyncResult result)
    {
        return base.Channel.EndGetObjectRights(result);
    }

    private System.IAsyncResult OnBeginGetObjectRights(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetObjectRightsParams parameters = ((Therefore.WebAPI.GetObjectRightsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetObjectRights(parameters, callback, asyncState);
    }

    private object[] OnEndGetObjectRights(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetObjectRightsResponse retVal = ((IThereforeService)(this)).EndGetObjectRights(result);
        return new object[] {
                retVal};
    }

    private void OnGetObjectRightsCompleted(object state)
    {
        if ((this.GetObjectRightsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetObjectRightsCompleted(this, new GetObjectRightsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetObjectRightsAsync(Therefore.WebAPI.GetObjectRightsParams parameters)
    {
        this.GetObjectRightsAsync(parameters, null);
    }

    public void GetObjectRightsAsync(Therefore.WebAPI.GetObjectRightsParams parameters, object userState)
    {
        if ((this.onBeginGetObjectRightsDelegate == null))
        {
            this.onBeginGetObjectRightsDelegate = new BeginOperationDelegate(this.OnBeginGetObjectRights);
        }
        if ((this.onEndGetObjectRightsDelegate == null))
        {
            this.onEndGetObjectRightsDelegate = new EndOperationDelegate(this.OnEndGetObjectRights);
        }
        if ((this.onGetObjectRightsCompletedDelegate == null))
        {
            this.onGetObjectRightsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetObjectRightsCompleted);
        }
        base.InvokeAsync(this.onBeginGetObjectRightsDelegate, new object[] {
                    parameters}, this.onEndGetObjectRightsDelegate, this.onGetObjectRightsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetPermissions(Therefore.WebAPI.GetPermissionsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetPermissions(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetPermissionsResponse IThereforeService.EndGetPermissions(System.IAsyncResult result)
    {
        return base.Channel.EndGetPermissions(result);
    }

    private System.IAsyncResult OnBeginGetPermissions(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetPermissionsParams parameters = ((Therefore.WebAPI.GetPermissionsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetPermissions(parameters, callback, asyncState);
    }

    private object[] OnEndGetPermissions(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetPermissionsResponse retVal = ((IThereforeService)(this)).EndGetPermissions(result);
        return new object[] {
                retVal};
    }

    private void OnGetPermissionsCompleted(object state)
    {
        if ((this.GetPermissionsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetPermissionsCompleted(this, new GetPermissionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetPermissionsAsync(Therefore.WebAPI.GetPermissionsParams parameters)
    {
        this.GetPermissionsAsync(parameters, null);
    }

    public void GetPermissionsAsync(Therefore.WebAPI.GetPermissionsParams parameters, object userState)
    {
        if ((this.onBeginGetPermissionsDelegate == null))
        {
            this.onBeginGetPermissionsDelegate = new BeginOperationDelegate(this.OnBeginGetPermissions);
        }
        if ((this.onEndGetPermissionsDelegate == null))
        {
            this.onEndGetPermissionsDelegate = new EndOperationDelegate(this.OnEndGetPermissions);
        }
        if ((this.onGetPermissionsCompletedDelegate == null))
        {
            this.onGetPermissionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPermissionsCompleted);
        }
        base.InvokeAsync(this.onBeginGetPermissionsDelegate, new object[] {
                    parameters}, this.onEndGetPermissionsDelegate, this.onGetPermissionsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetObjects(Therefore.WebAPI.GetObjectsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetObjects(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetObjectsResponse IThereforeService.EndGetObjects(System.IAsyncResult result)
    {
        return base.Channel.EndGetObjects(result);
    }

    private System.IAsyncResult OnBeginGetObjects(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetObjectsParams parameters = ((Therefore.WebAPI.GetObjectsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetObjects(parameters, callback, asyncState);
    }

    private object[] OnEndGetObjects(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetObjectsResponse retVal = ((IThereforeService)(this)).EndGetObjects(result);
        return new object[] {
                retVal};
    }

    private void OnGetObjectsCompleted(object state)
    {
        if ((this.GetObjectsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetObjectsCompleted(this, new GetObjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetObjectsAsync(Therefore.WebAPI.GetObjectsParams parameters)
    {
        this.GetObjectsAsync(parameters, null);
    }

    public void GetObjectsAsync(Therefore.WebAPI.GetObjectsParams parameters, object userState)
    {
        if ((this.onBeginGetObjectsDelegate == null))
        {
            this.onBeginGetObjectsDelegate = new BeginOperationDelegate(this.OnBeginGetObjects);
        }
        if ((this.onEndGetObjectsDelegate == null))
        {
            this.onEndGetObjectsDelegate = new EndOperationDelegate(this.OnEndGetObjects);
        }
        if ((this.onGetObjectsCompletedDelegate == null))
        {
            this.onGetObjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetObjectsCompleted);
        }
        base.InvokeAsync(this.onBeginGetObjectsDelegate, new object[] {
                    parameters}, this.onEndGetObjectsDelegate, this.onGetObjectsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetPermissionConstants(Therefore.WebAPI.GetPermissionConstantsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetPermissionConstants(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetPermissionConstantsResponse IThereforeService.EndGetPermissionConstants(System.IAsyncResult result)
    {
        return base.Channel.EndGetPermissionConstants(result);
    }

    private System.IAsyncResult OnBeginGetPermissionConstants(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetPermissionConstantsParams parameters = ((Therefore.WebAPI.GetPermissionConstantsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetPermissionConstants(parameters, callback, asyncState);
    }

    private object[] OnEndGetPermissionConstants(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetPermissionConstantsResponse retVal = ((IThereforeService)(this)).EndGetPermissionConstants(result);
        return new object[] {
                retVal};
    }

    private void OnGetPermissionConstantsCompleted(object state)
    {
        if ((this.GetPermissionConstantsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetPermissionConstantsCompleted(this, new GetPermissionConstantsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetPermissionConstantsAsync(Therefore.WebAPI.GetPermissionConstantsParams parameters)
    {
        this.GetPermissionConstantsAsync(parameters, null);
    }

    public void GetPermissionConstantsAsync(Therefore.WebAPI.GetPermissionConstantsParams parameters, object userState)
    {
        if ((this.onBeginGetPermissionConstantsDelegate == null))
        {
            this.onBeginGetPermissionConstantsDelegate = new BeginOperationDelegate(this.OnBeginGetPermissionConstants);
        }
        if ((this.onEndGetPermissionConstantsDelegate == null))
        {
            this.onEndGetPermissionConstantsDelegate = new EndOperationDelegate(this.OnEndGetPermissionConstants);
        }
        if ((this.onGetPermissionConstantsCompletedDelegate == null))
        {
            this.onGetPermissionConstantsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPermissionConstantsCompleted);
        }
        base.InvokeAsync(this.onBeginGetPermissionConstantsDelegate, new object[] {
                    parameters}, this.onEndGetPermissionConstantsDelegate, this.onGetPermissionConstantsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetQuerySpecification(Therefore.WebAPI.QuerySpecificationParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetQuerySpecification(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.QuerySpecificationResponse IThereforeService.EndGetQuerySpecification(System.IAsyncResult result)
    {
        return base.Channel.EndGetQuerySpecification(result);
    }

    private System.IAsyncResult OnBeginGetQuerySpecification(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.QuerySpecificationParams parameters = ((Therefore.WebAPI.QuerySpecificationParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetQuerySpecification(parameters, callback, asyncState);
    }

    private object[] OnEndGetQuerySpecification(System.IAsyncResult result)
    {
        Therefore.WebAPI.QuerySpecificationResponse retVal = ((IThereforeService)(this)).EndGetQuerySpecification(result);
        return new object[] {
                retVal};
    }

    private void OnGetQuerySpecificationCompleted(object state)
    {
        if ((this.GetQuerySpecificationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetQuerySpecificationCompleted(this, new GetQuerySpecificationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetQuerySpecificationAsync(Therefore.WebAPI.QuerySpecificationParams parameters)
    {
        this.GetQuerySpecificationAsync(parameters, null);
    }

    public void GetQuerySpecificationAsync(Therefore.WebAPI.QuerySpecificationParams parameters, object userState)
    {
        if ((this.onBeginGetQuerySpecificationDelegate == null))
        {
            this.onBeginGetQuerySpecificationDelegate = new BeginOperationDelegate(this.OnBeginGetQuerySpecification);
        }
        if ((this.onEndGetQuerySpecificationDelegate == null))
        {
            this.onEndGetQuerySpecificationDelegate = new EndOperationDelegate(this.OnEndGetQuerySpecification);
        }
        if ((this.onGetQuerySpecificationCompletedDelegate == null))
        {
            this.onGetQuerySpecificationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetQuerySpecificationCompleted);
        }
        base.InvokeAsync(this.onBeginGetQuerySpecificationDelegate, new object[] {
                    parameters}, this.onEndGetQuerySpecificationDelegate, this.onGetQuerySpecificationCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetReportDefinition(Therefore.WebAPI.GetReportDefinitionParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetReportDefinition(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetReportDefinitionResponse IThereforeService.EndGetReportDefinition(System.IAsyncResult result)
    {
        return base.Channel.EndGetReportDefinition(result);
    }

    private System.IAsyncResult OnBeginGetReportDefinition(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetReportDefinitionParams parameters = ((Therefore.WebAPI.GetReportDefinitionParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetReportDefinition(parameters, callback, asyncState);
    }

    private object[] OnEndGetReportDefinition(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetReportDefinitionResponse retVal = ((IThereforeService)(this)).EndGetReportDefinition(result);
        return new object[] {
                retVal};
    }

    private void OnGetReportDefinitionCompleted(object state)
    {
        if ((this.GetReportDefinitionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetReportDefinitionCompleted(this, new GetReportDefinitionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetReportDefinitionAsync(Therefore.WebAPI.GetReportDefinitionParams parameters)
    {
        this.GetReportDefinitionAsync(parameters, null);
    }

    public void GetReportDefinitionAsync(Therefore.WebAPI.GetReportDefinitionParams parameters, object userState)
    {
        if ((this.onBeginGetReportDefinitionDelegate == null))
        {
            this.onBeginGetReportDefinitionDelegate = new BeginOperationDelegate(this.OnBeginGetReportDefinition);
        }
        if ((this.onEndGetReportDefinitionDelegate == null))
        {
            this.onEndGetReportDefinitionDelegate = new EndOperationDelegate(this.OnEndGetReportDefinition);
        }
        if ((this.onGetReportDefinitionCompletedDelegate == null))
        {
            this.onGetReportDefinitionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportDefinitionCompleted);
        }
        base.InvokeAsync(this.onBeginGetReportDefinitionDelegate, new object[] {
                    parameters}, this.onEndGetReportDefinitionDelegate, this.onGetReportDefinitionCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetSettingInt(Therefore.WebAPI.GetSettingIntParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetSettingInt(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetSettingIntResponse IThereforeService.EndGetSettingInt(System.IAsyncResult result)
    {
        return base.Channel.EndGetSettingInt(result);
    }

    private System.IAsyncResult OnBeginGetSettingInt(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetSettingIntParams parameters = ((Therefore.WebAPI.GetSettingIntParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetSettingInt(parameters, callback, asyncState);
    }

    private object[] OnEndGetSettingInt(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetSettingIntResponse retVal = ((IThereforeService)(this)).EndGetSettingInt(result);
        return new object[] {
                retVal};
    }

    private void OnGetSettingIntCompleted(object state)
    {
        if ((this.GetSettingIntCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetSettingIntCompleted(this, new GetSettingIntCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetSettingIntAsync(Therefore.WebAPI.GetSettingIntParams parameters)
    {
        this.GetSettingIntAsync(parameters, null);
    }

    public void GetSettingIntAsync(Therefore.WebAPI.GetSettingIntParams parameters, object userState)
    {
        if ((this.onBeginGetSettingIntDelegate == null))
        {
            this.onBeginGetSettingIntDelegate = new BeginOperationDelegate(this.OnBeginGetSettingInt);
        }
        if ((this.onEndGetSettingIntDelegate == null))
        {
            this.onEndGetSettingIntDelegate = new EndOperationDelegate(this.OnEndGetSettingInt);
        }
        if ((this.onGetSettingIntCompletedDelegate == null))
        {
            this.onGetSettingIntCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingIntCompleted);
        }
        base.InvokeAsync(this.onBeginGetSettingIntDelegate, new object[] {
                    parameters}, this.onEndGetSettingIntDelegate, this.onGetSettingIntCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetSettingString(Therefore.WebAPI.GetSettingStringParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetSettingString(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetSettingStringResponse IThereforeService.EndGetSettingString(System.IAsyncResult result)
    {
        return base.Channel.EndGetSettingString(result);
    }

    private System.IAsyncResult OnBeginGetSettingString(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetSettingStringParams parameters = ((Therefore.WebAPI.GetSettingStringParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetSettingString(parameters, callback, asyncState);
    }

    private object[] OnEndGetSettingString(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetSettingStringResponse retVal = ((IThereforeService)(this)).EndGetSettingString(result);
        return new object[] {
                retVal};
    }

    private void OnGetSettingStringCompleted(object state)
    {
        if ((this.GetSettingStringCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetSettingStringCompleted(this, new GetSettingStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetSettingStringAsync(Therefore.WebAPI.GetSettingStringParams parameters)
    {
        this.GetSettingStringAsync(parameters, null);
    }

    public void GetSettingStringAsync(Therefore.WebAPI.GetSettingStringParams parameters, object userState)
    {
        if ((this.onBeginGetSettingStringDelegate == null))
        {
            this.onBeginGetSettingStringDelegate = new BeginOperationDelegate(this.OnBeginGetSettingString);
        }
        if ((this.onEndGetSettingStringDelegate == null))
        {
            this.onEndGetSettingStringDelegate = new EndOperationDelegate(this.OnEndGetSettingString);
        }
        if ((this.onGetSettingStringCompletedDelegate == null))
        {
            this.onGetSettingStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingStringCompleted);
        }
        base.InvokeAsync(this.onBeginGetSettingStringDelegate, new object[] {
                    parameters}, this.onEndGetSettingStringDelegate, this.onGetSettingStringCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetPublicSettingInt(Therefore.WebAPI.GetPublicSettingIntParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetPublicSettingInt(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetPublicSettingIntResponse IThereforeService.EndGetPublicSettingInt(System.IAsyncResult result)
    {
        return base.Channel.EndGetPublicSettingInt(result);
    }

    private System.IAsyncResult OnBeginGetPublicSettingInt(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetPublicSettingIntParams parameters = ((Therefore.WebAPI.GetPublicSettingIntParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetPublicSettingInt(parameters, callback, asyncState);
    }

    private object[] OnEndGetPublicSettingInt(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetPublicSettingIntResponse retVal = ((IThereforeService)(this)).EndGetPublicSettingInt(result);
        return new object[] {
                retVal};
    }

    private void OnGetPublicSettingIntCompleted(object state)
    {
        if ((this.GetPublicSettingIntCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetPublicSettingIntCompleted(this, new GetPublicSettingIntCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetPublicSettingIntAsync(Therefore.WebAPI.GetPublicSettingIntParams parameters)
    {
        this.GetPublicSettingIntAsync(parameters, null);
    }

    public void GetPublicSettingIntAsync(Therefore.WebAPI.GetPublicSettingIntParams parameters, object userState)
    {
        if ((this.onBeginGetPublicSettingIntDelegate == null))
        {
            this.onBeginGetPublicSettingIntDelegate = new BeginOperationDelegate(this.OnBeginGetPublicSettingInt);
        }
        if ((this.onEndGetPublicSettingIntDelegate == null))
        {
            this.onEndGetPublicSettingIntDelegate = new EndOperationDelegate(this.OnEndGetPublicSettingInt);
        }
        if ((this.onGetPublicSettingIntCompletedDelegate == null))
        {
            this.onGetPublicSettingIntCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPublicSettingIntCompleted);
        }
        base.InvokeAsync(this.onBeginGetPublicSettingIntDelegate, new object[] {
                    parameters}, this.onEndGetPublicSettingIntDelegate, this.onGetPublicSettingIntCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetPublicSettingString(Therefore.WebAPI.GetPublicSettingStringParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetPublicSettingString(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetPublicSettingStringResponse IThereforeService.EndGetPublicSettingString(System.IAsyncResult result)
    {
        return base.Channel.EndGetPublicSettingString(result);
    }

    private System.IAsyncResult OnBeginGetPublicSettingString(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetPublicSettingStringParams parameters = ((Therefore.WebAPI.GetPublicSettingStringParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetPublicSettingString(parameters, callback, asyncState);
    }

    private object[] OnEndGetPublicSettingString(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetPublicSettingStringResponse retVal = ((IThereforeService)(this)).EndGetPublicSettingString(result);
        return new object[] {
                retVal};
    }

    private void OnGetPublicSettingStringCompleted(object state)
    {
        if ((this.GetPublicSettingStringCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetPublicSettingStringCompleted(this, new GetPublicSettingStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetPublicSettingStringAsync(Therefore.WebAPI.GetPublicSettingStringParams parameters)
    {
        this.GetPublicSettingStringAsync(parameters, null);
    }

    public void GetPublicSettingStringAsync(Therefore.WebAPI.GetPublicSettingStringParams parameters, object userState)
    {
        if ((this.onBeginGetPublicSettingStringDelegate == null))
        {
            this.onBeginGetPublicSettingStringDelegate = new BeginOperationDelegate(this.OnBeginGetPublicSettingString);
        }
        if ((this.onEndGetPublicSettingStringDelegate == null))
        {
            this.onEndGetPublicSettingStringDelegate = new EndOperationDelegate(this.OnEndGetPublicSettingString);
        }
        if ((this.onGetPublicSettingStringCompletedDelegate == null))
        {
            this.onGetPublicSettingStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPublicSettingStringCompleted);
        }
        base.InvokeAsync(this.onBeginGetPublicSettingStringDelegate, new object[] {
                    parameters}, this.onEndGetPublicSettingStringDelegate, this.onGetPublicSettingStringCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetTask(Therefore.WebAPI.GetTaskParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTask(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetTaskResponse IThereforeService.EndGetTask(System.IAsyncResult result)
    {
        return base.Channel.EndGetTask(result);
    }

    private System.IAsyncResult OnBeginGetTask(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetTaskParams parameters = ((Therefore.WebAPI.GetTaskParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetTask(parameters, callback, asyncState);
    }

    private object[] OnEndGetTask(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetTaskResponse retVal = ((IThereforeService)(this)).EndGetTask(result);
        return new object[] {
                retVal};
    }

    private void OnGetTaskCompleted(object state)
    {
        if ((this.GetTaskCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTaskCompleted(this, new GetTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetTaskAsync(Therefore.WebAPI.GetTaskParams parameters)
    {
        this.GetTaskAsync(parameters, null);
    }

    public void GetTaskAsync(Therefore.WebAPI.GetTaskParams parameters, object userState)
    {
        if ((this.onBeginGetTaskDelegate == null))
        {
            this.onBeginGetTaskDelegate = new BeginOperationDelegate(this.OnBeginGetTask);
        }
        if ((this.onEndGetTaskDelegate == null))
        {
            this.onEndGetTaskDelegate = new EndOperationDelegate(this.OnEndGetTask);
        }
        if ((this.onGetTaskCompletedDelegate == null))
        {
            this.onGetTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaskCompleted);
        }
        base.InvokeAsync(this.onBeginGetTaskDelegate, new object[] {
                    parameters}, this.onEndGetTaskDelegate, this.onGetTaskCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetTaskInfo(Therefore.WebAPI.GetTaskInfoParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTaskInfo(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetTaskInfoResponse IThereforeService.EndGetTaskInfo(System.IAsyncResult result)
    {
        return base.Channel.EndGetTaskInfo(result);
    }

    private System.IAsyncResult OnBeginGetTaskInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetTaskInfoParams parameters = ((Therefore.WebAPI.GetTaskInfoParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetTaskInfo(parameters, callback, asyncState);
    }

    private object[] OnEndGetTaskInfo(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetTaskInfoResponse retVal = ((IThereforeService)(this)).EndGetTaskInfo(result);
        return new object[] {
                retVal};
    }

    private void OnGetTaskInfoCompleted(object state)
    {
        if ((this.GetTaskInfoCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTaskInfoCompleted(this, new GetTaskInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetTaskInfoAsync(Therefore.WebAPI.GetTaskInfoParams parameters)
    {
        this.GetTaskInfoAsync(parameters, null);
    }

    public void GetTaskInfoAsync(Therefore.WebAPI.GetTaskInfoParams parameters, object userState)
    {
        if ((this.onBeginGetTaskInfoDelegate == null))
        {
            this.onBeginGetTaskInfoDelegate = new BeginOperationDelegate(this.OnBeginGetTaskInfo);
        }
        if ((this.onEndGetTaskInfoDelegate == null))
        {
            this.onEndGetTaskInfoDelegate = new EndOperationDelegate(this.OnEndGetTaskInfo);
        }
        if ((this.onGetTaskInfoCompletedDelegate == null))
        {
            this.onGetTaskInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaskInfoCompleted);
        }
        base.InvokeAsync(this.onBeginGetTaskInfoDelegate, new object[] {
                    parameters}, this.onEndGetTaskInfoDelegate, this.onGetTaskInfoCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetThumbnail(Therefore.WebAPI.GetThumbnailParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetThumbnail(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetThumbnailResponse IThereforeService.EndGetThumbnail(System.IAsyncResult result)
    {
        return base.Channel.EndGetThumbnail(result);
    }

    private System.IAsyncResult OnBeginGetThumbnail(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetThumbnailParams parameters = ((Therefore.WebAPI.GetThumbnailParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetThumbnail(parameters, callback, asyncState);
    }

    private object[] OnEndGetThumbnail(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetThumbnailResponse retVal = ((IThereforeService)(this)).EndGetThumbnail(result);
        return new object[] {
                retVal};
    }

    private void OnGetThumbnailCompleted(object state)
    {
        if ((this.GetThumbnailCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetThumbnailCompleted(this, new GetThumbnailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetThumbnailAsync(Therefore.WebAPI.GetThumbnailParams parameters)
    {
        this.GetThumbnailAsync(parameters, null);
    }

    public void GetThumbnailAsync(Therefore.WebAPI.GetThumbnailParams parameters, object userState)
    {
        if ((this.onBeginGetThumbnailDelegate == null))
        {
            this.onBeginGetThumbnailDelegate = new BeginOperationDelegate(this.OnBeginGetThumbnail);
        }
        if ((this.onEndGetThumbnailDelegate == null))
        {
            this.onEndGetThumbnailDelegate = new EndOperationDelegate(this.OnEndGetThumbnail);
        }
        if ((this.onGetThumbnailCompletedDelegate == null))
        {
            this.onGetThumbnailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetThumbnailCompleted);
        }
        base.InvokeAsync(this.onBeginGetThumbnailDelegate, new object[] {
                    parameters}, this.onEndGetThumbnailDelegate, this.onGetThumbnailCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetTreeViewChildNodes(Therefore.WebAPI.GetTreeViewChildNodesParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTreeViewChildNodes(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetTreeViewChildNodesResponse IThereforeService.EndGetTreeViewChildNodes(System.IAsyncResult result)
    {
        return base.Channel.EndGetTreeViewChildNodes(result);
    }

    private System.IAsyncResult OnBeginGetTreeViewChildNodes(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetTreeViewChildNodesParams parameters = ((Therefore.WebAPI.GetTreeViewChildNodesParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetTreeViewChildNodes(parameters, callback, asyncState);
    }

    private object[] OnEndGetTreeViewChildNodes(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetTreeViewChildNodesResponse retVal = ((IThereforeService)(this)).EndGetTreeViewChildNodes(result);
        return new object[] {
                retVal};
    }

    private void OnGetTreeViewChildNodesCompleted(object state)
    {
        if ((this.GetTreeViewChildNodesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTreeViewChildNodesCompleted(this, new GetTreeViewChildNodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetTreeViewChildNodesAsync(Therefore.WebAPI.GetTreeViewChildNodesParams parameters)
    {
        this.GetTreeViewChildNodesAsync(parameters, null);
    }

    public void GetTreeViewChildNodesAsync(Therefore.WebAPI.GetTreeViewChildNodesParams parameters, object userState)
    {
        if ((this.onBeginGetTreeViewChildNodesDelegate == null))
        {
            this.onBeginGetTreeViewChildNodesDelegate = new BeginOperationDelegate(this.OnBeginGetTreeViewChildNodes);
        }
        if ((this.onEndGetTreeViewChildNodesDelegate == null))
        {
            this.onEndGetTreeViewChildNodesDelegate = new EndOperationDelegate(this.OnEndGetTreeViewChildNodes);
        }
        if ((this.onGetTreeViewChildNodesCompletedDelegate == null))
        {
            this.onGetTreeViewChildNodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTreeViewChildNodesCompleted);
        }
        base.InvokeAsync(this.onBeginGetTreeViewChildNodesDelegate, new object[] {
                    parameters}, this.onEndGetTreeViewChildNodesDelegate, this.onGetTreeViewChildNodesCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetTreeViewNodeDocuments(Therefore.WebAPI.GetTreeViewNodeDocumentsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTreeViewNodeDocuments(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetTreeViewNodeDocumentsResponse IThereforeService.EndGetTreeViewNodeDocuments(System.IAsyncResult result)
    {
        return base.Channel.EndGetTreeViewNodeDocuments(result);
    }

    private System.IAsyncResult OnBeginGetTreeViewNodeDocuments(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetTreeViewNodeDocumentsParams parameters = ((Therefore.WebAPI.GetTreeViewNodeDocumentsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetTreeViewNodeDocuments(parameters, callback, asyncState);
    }

    private object[] OnEndGetTreeViewNodeDocuments(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetTreeViewNodeDocumentsResponse retVal = ((IThereforeService)(this)).EndGetTreeViewNodeDocuments(result);
        return new object[] {
                retVal};
    }

    private void OnGetTreeViewNodeDocumentsCompleted(object state)
    {
        if ((this.GetTreeViewNodeDocumentsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTreeViewNodeDocumentsCompleted(this, new GetTreeViewNodeDocumentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetTreeViewNodeDocumentsAsync(Therefore.WebAPI.GetTreeViewNodeDocumentsParams parameters)
    {
        this.GetTreeViewNodeDocumentsAsync(parameters, null);
    }

    public void GetTreeViewNodeDocumentsAsync(Therefore.WebAPI.GetTreeViewNodeDocumentsParams parameters, object userState)
    {
        if ((this.onBeginGetTreeViewNodeDocumentsDelegate == null))
        {
            this.onBeginGetTreeViewNodeDocumentsDelegate = new BeginOperationDelegate(this.OnBeginGetTreeViewNodeDocuments);
        }
        if ((this.onEndGetTreeViewNodeDocumentsDelegate == null))
        {
            this.onEndGetTreeViewNodeDocumentsDelegate = new EndOperationDelegate(this.OnEndGetTreeViewNodeDocuments);
        }
        if ((this.onGetTreeViewNodeDocumentsCompletedDelegate == null))
        {
            this.onGetTreeViewNodeDocumentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTreeViewNodeDocumentsCompleted);
        }
        base.InvokeAsync(this.onBeginGetTreeViewNodeDocumentsDelegate, new object[] {
                    parameters}, this.onEndGetTreeViewNodeDocumentsDelegate, this.onGetTreeViewNodeDocumentsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetTreeViewChildNodesAndDocuments(Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTreeViewChildNodesAndDocuments(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsResponse IThereforeService.EndGetTreeViewChildNodesAndDocuments(System.IAsyncResult result)
    {
        return base.Channel.EndGetTreeViewChildNodesAndDocuments(result);
    }

    private System.IAsyncResult OnBeginGetTreeViewChildNodesAndDocuments(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsParams parameters = ((Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetTreeViewChildNodesAndDocuments(parameters, callback, asyncState);
    }

    private object[] OnEndGetTreeViewChildNodesAndDocuments(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsResponse retVal = ((IThereforeService)(this)).EndGetTreeViewChildNodesAndDocuments(result);
        return new object[] {
                retVal};
    }

    private void OnGetTreeViewChildNodesAndDocumentsCompleted(object state)
    {
        if ((this.GetTreeViewChildNodesAndDocumentsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTreeViewChildNodesAndDocumentsCompleted(this, new GetTreeViewChildNodesAndDocumentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetTreeViewChildNodesAndDocumentsAsync(Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsParams parameters)
    {
        this.GetTreeViewChildNodesAndDocumentsAsync(parameters, null);
    }

    public void GetTreeViewChildNodesAndDocumentsAsync(Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsParams parameters, object userState)
    {
        if ((this.onBeginGetTreeViewChildNodesAndDocumentsDelegate == null))
        {
            this.onBeginGetTreeViewChildNodesAndDocumentsDelegate = new BeginOperationDelegate(this.OnBeginGetTreeViewChildNodesAndDocuments);
        }
        if ((this.onEndGetTreeViewChildNodesAndDocumentsDelegate == null))
        {
            this.onEndGetTreeViewChildNodesAndDocumentsDelegate = new EndOperationDelegate(this.OnEndGetTreeViewChildNodesAndDocuments);
        }
        if ((this.onGetTreeViewChildNodesAndDocumentsCompletedDelegate == null))
        {
            this.onGetTreeViewChildNodesAndDocumentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTreeViewChildNodesAndDocumentsCompleted);
        }
        base.InvokeAsync(this.onBeginGetTreeViewChildNodesAndDocumentsDelegate, new object[] {
                    parameters}, this.onEndGetTreeViewChildNodesAndDocumentsDelegate, this.onGetTreeViewChildNodesAndDocumentsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetWebAPIServerVersion(Therefore.WebAPI.GetWebAPIServerVersionParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetWebAPIServerVersion(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetWebAPIServerVersionResponse IThereforeService.EndGetWebAPIServerVersion(System.IAsyncResult result)
    {
        return base.Channel.EndGetWebAPIServerVersion(result);
    }

    private System.IAsyncResult OnBeginGetWebAPIServerVersion(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetWebAPIServerVersionParams parameters = ((Therefore.WebAPI.GetWebAPIServerVersionParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetWebAPIServerVersion(parameters, callback, asyncState);
    }

    private object[] OnEndGetWebAPIServerVersion(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetWebAPIServerVersionResponse retVal = ((IThereforeService)(this)).EndGetWebAPIServerVersion(result);
        return new object[] {
                retVal};
    }

    private void OnGetWebAPIServerVersionCompleted(object state)
    {
        if ((this.GetWebAPIServerVersionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetWebAPIServerVersionCompleted(this, new GetWebAPIServerVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetWebAPIServerVersionAsync(Therefore.WebAPI.GetWebAPIServerVersionParams parameters)
    {
        this.GetWebAPIServerVersionAsync(parameters, null);
    }

    public void GetWebAPIServerVersionAsync(Therefore.WebAPI.GetWebAPIServerVersionParams parameters, object userState)
    {
        if ((this.onBeginGetWebAPIServerVersionDelegate == null))
        {
            this.onBeginGetWebAPIServerVersionDelegate = new BeginOperationDelegate(this.OnBeginGetWebAPIServerVersion);
        }
        if ((this.onEndGetWebAPIServerVersionDelegate == null))
        {
            this.onEndGetWebAPIServerVersionDelegate = new EndOperationDelegate(this.OnEndGetWebAPIServerVersion);
        }
        if ((this.onGetWebAPIServerVersionCompletedDelegate == null))
        {
            this.onGetWebAPIServerVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebAPIServerVersionCompleted);
        }
        base.InvokeAsync(this.onBeginGetWebAPIServerVersionDelegate, new object[] {
                    parameters}, this.onEndGetWebAPIServerVersionDelegate, this.onGetWebAPIServerVersionCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetWorkflowInstance(Therefore.WebAPI.GetWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetWorkflowInstance(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetWorkflowInstanceResponse IThereforeService.EndGetWorkflowInstance(System.IAsyncResult result)
    {
        return base.Channel.EndGetWorkflowInstance(result);
    }

    private System.IAsyncResult OnBeginGetWorkflowInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetWorkflowInstanceParams parameters = ((Therefore.WebAPI.GetWorkflowInstanceParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetWorkflowInstance(parameters, callback, asyncState);
    }

    private object[] OnEndGetWorkflowInstance(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetWorkflowInstanceResponse retVal = ((IThereforeService)(this)).EndGetWorkflowInstance(result);
        return new object[] {
                retVal};
    }

    private void OnGetWorkflowInstanceCompleted(object state)
    {
        if ((this.GetWorkflowInstanceCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetWorkflowInstanceCompleted(this, new GetWorkflowInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetWorkflowInstanceAsync(Therefore.WebAPI.GetWorkflowInstanceParams parameters)
    {
        this.GetWorkflowInstanceAsync(parameters, null);
    }

    public void GetWorkflowInstanceAsync(Therefore.WebAPI.GetWorkflowInstanceParams parameters, object userState)
    {
        if ((this.onBeginGetWorkflowInstanceDelegate == null))
        {
            this.onBeginGetWorkflowInstanceDelegate = new BeginOperationDelegate(this.OnBeginGetWorkflowInstance);
        }
        if ((this.onEndGetWorkflowInstanceDelegate == null))
        {
            this.onEndGetWorkflowInstanceDelegate = new EndOperationDelegate(this.OnEndGetWorkflowInstance);
        }
        if ((this.onGetWorkflowInstanceCompletedDelegate == null))
        {
            this.onGetWorkflowInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWorkflowInstanceCompleted);
        }
        base.InvokeAsync(this.onBeginGetWorkflowInstanceDelegate, new object[] {
                    parameters}, this.onEndGetWorkflowInstanceDelegate, this.onGetWorkflowInstanceCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetWorkflowProcess(Therefore.WebAPI.GetWorkflowProcessParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetWorkflowProcess(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetWorkflowProcessResponse IThereforeService.EndGetWorkflowProcess(System.IAsyncResult result)
    {
        return base.Channel.EndGetWorkflowProcess(result);
    }

    private System.IAsyncResult OnBeginGetWorkflowProcess(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetWorkflowProcessParams parameters = ((Therefore.WebAPI.GetWorkflowProcessParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetWorkflowProcess(parameters, callback, asyncState);
    }

    private object[] OnEndGetWorkflowProcess(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetWorkflowProcessResponse retVal = ((IThereforeService)(this)).EndGetWorkflowProcess(result);
        return new object[] {
                retVal};
    }

    private void OnGetWorkflowProcessCompleted(object state)
    {
        if ((this.GetWorkflowProcessCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetWorkflowProcessCompleted(this, new GetWorkflowProcessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetWorkflowProcessAsync(Therefore.WebAPI.GetWorkflowProcessParams parameters)
    {
        this.GetWorkflowProcessAsync(parameters, null);
    }

    public void GetWorkflowProcessAsync(Therefore.WebAPI.GetWorkflowProcessParams parameters, object userState)
    {
        if ((this.onBeginGetWorkflowProcessDelegate == null))
        {
            this.onBeginGetWorkflowProcessDelegate = new BeginOperationDelegate(this.OnBeginGetWorkflowProcess);
        }
        if ((this.onEndGetWorkflowProcessDelegate == null))
        {
            this.onEndGetWorkflowProcessDelegate = new EndOperationDelegate(this.OnEndGetWorkflowProcess);
        }
        if ((this.onGetWorkflowProcessCompletedDelegate == null))
        {
            this.onGetWorkflowProcessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWorkflowProcessCompleted);
        }
        base.InvokeAsync(this.onBeginGetWorkflowProcessDelegate, new object[] {
                    parameters}, this.onEndGetWorkflowProcessDelegate, this.onGetWorkflowProcessCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginHasPermissions(Therefore.WebAPI.HasPermissionsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginHasPermissions(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.HasPermissionsResponse IThereforeService.EndHasPermissions(System.IAsyncResult result)
    {
        return base.Channel.EndHasPermissions(result);
    }

    private System.IAsyncResult OnBeginHasPermissions(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.HasPermissionsParams parameters = ((Therefore.WebAPI.HasPermissionsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginHasPermissions(parameters, callback, asyncState);
    }

    private object[] OnEndHasPermissions(System.IAsyncResult result)
    {
        Therefore.WebAPI.HasPermissionsResponse retVal = ((IThereforeService)(this)).EndHasPermissions(result);
        return new object[] {
                retVal};
    }

    private void OnHasPermissionsCompleted(object state)
    {
        if ((this.HasPermissionsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.HasPermissionsCompleted(this, new HasPermissionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void HasPermissionsAsync(Therefore.WebAPI.HasPermissionsParams parameters)
    {
        this.HasPermissionsAsync(parameters, null);
    }

    public void HasPermissionsAsync(Therefore.WebAPI.HasPermissionsParams parameters, object userState)
    {
        if ((this.onBeginHasPermissionsDelegate == null))
        {
            this.onBeginHasPermissionsDelegate = new BeginOperationDelegate(this.OnBeginHasPermissions);
        }
        if ((this.onEndHasPermissionsDelegate == null))
        {
            this.onEndHasPermissionsDelegate = new EndOperationDelegate(this.OnEndHasPermissions);
        }
        if ((this.onHasPermissionsCompletedDelegate == null))
        {
            this.onHasPermissionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHasPermissionsCompleted);
        }
        base.InvokeAsync(this.onBeginHasPermissionsDelegate, new object[] {
                    parameters}, this.onEndHasPermissionsDelegate, this.onHasPermissionsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginLinkDocAndWFInstance(Therefore.WebAPI.LinkDocAndWFInstanceParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginLinkDocAndWFInstance(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.LinkDocAndWFInstanceResponse IThereforeService.EndLinkDocAndWFInstance(System.IAsyncResult result)
    {
        return base.Channel.EndLinkDocAndWFInstance(result);
    }

    private System.IAsyncResult OnBeginLinkDocAndWFInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.LinkDocAndWFInstanceParams parameters = ((Therefore.WebAPI.LinkDocAndWFInstanceParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginLinkDocAndWFInstance(parameters, callback, asyncState);
    }

    private object[] OnEndLinkDocAndWFInstance(System.IAsyncResult result)
    {
        Therefore.WebAPI.LinkDocAndWFInstanceResponse retVal = ((IThereforeService)(this)).EndLinkDocAndWFInstance(result);
        return new object[] {
                retVal};
    }

    private void OnLinkDocAndWFInstanceCompleted(object state)
    {
        if ((this.LinkDocAndWFInstanceCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.LinkDocAndWFInstanceCompleted(this, new LinkDocAndWFInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void LinkDocAndWFInstanceAsync(Therefore.WebAPI.LinkDocAndWFInstanceParams parameters)
    {
        this.LinkDocAndWFInstanceAsync(parameters, null);
    }

    public void LinkDocAndWFInstanceAsync(Therefore.WebAPI.LinkDocAndWFInstanceParams parameters, object userState)
    {
        if ((this.onBeginLinkDocAndWFInstanceDelegate == null))
        {
            this.onBeginLinkDocAndWFInstanceDelegate = new BeginOperationDelegate(this.OnBeginLinkDocAndWFInstance);
        }
        if ((this.onEndLinkDocAndWFInstanceDelegate == null))
        {
            this.onEndLinkDocAndWFInstanceDelegate = new EndOperationDelegate(this.OnEndLinkDocAndWFInstance);
        }
        if ((this.onLinkDocAndWFInstanceCompletedDelegate == null))
        {
            this.onLinkDocAndWFInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLinkDocAndWFInstanceCompleted);
        }
        base.InvokeAsync(this.onBeginLinkDocAndWFInstanceDelegate, new object[] {
                    parameters}, this.onEndLinkDocAndWFInstanceDelegate, this.onLinkDocAndWFInstanceCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginLinkDocuments(Therefore.WebAPI.LinkDocumentsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginLinkDocuments(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.LinkDocumentsResponse IThereforeService.EndLinkDocuments(System.IAsyncResult result)
    {
        return base.Channel.EndLinkDocuments(result);
    }

    private System.IAsyncResult OnBeginLinkDocuments(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.LinkDocumentsParams parameters = ((Therefore.WebAPI.LinkDocumentsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginLinkDocuments(parameters, callback, asyncState);
    }

    private object[] OnEndLinkDocuments(System.IAsyncResult result)
    {
        Therefore.WebAPI.LinkDocumentsResponse retVal = ((IThereforeService)(this)).EndLinkDocuments(result);
        return new object[] {
                retVal};
    }

    private void OnLinkDocumentsCompleted(object state)
    {
        if ((this.LinkDocumentsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.LinkDocumentsCompleted(this, new LinkDocumentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void LinkDocumentsAsync(Therefore.WebAPI.LinkDocumentsParams parameters)
    {
        this.LinkDocumentsAsync(parameters, null);
    }

    public void LinkDocumentsAsync(Therefore.WebAPI.LinkDocumentsParams parameters, object userState)
    {
        if ((this.onBeginLinkDocumentsDelegate == null))
        {
            this.onBeginLinkDocumentsDelegate = new BeginOperationDelegate(this.OnBeginLinkDocuments);
        }
        if ((this.onEndLinkDocumentsDelegate == null))
        {
            this.onEndLinkDocumentsDelegate = new EndOperationDelegate(this.OnEndLinkDocuments);
        }
        if ((this.onLinkDocumentsCompletedDelegate == null))
        {
            this.onLinkDocumentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLinkDocumentsCompleted);
        }
        base.InvokeAsync(this.onBeginLinkDocumentsDelegate, new object[] {
                    parameters}, this.onEndLinkDocumentsDelegate, this.onLinkDocumentsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginReleaseFullTextQuery(Therefore.WebAPI.ReleaseFullTextQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReleaseFullTextQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ReleaseFullTextQueryResponse IThereforeService.EndReleaseFullTextQuery(System.IAsyncResult result)
    {
        return base.Channel.EndReleaseFullTextQuery(result);
    }

    private System.IAsyncResult OnBeginReleaseFullTextQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ReleaseFullTextQueryParams parameters = ((Therefore.WebAPI.ReleaseFullTextQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginReleaseFullTextQuery(parameters, callback, asyncState);
    }

    private object[] OnEndReleaseFullTextQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ReleaseFullTextQueryResponse retVal = ((IThereforeService)(this)).EndReleaseFullTextQuery(result);
        return new object[] {
                retVal};
    }

    private void OnReleaseFullTextQueryCompleted(object state)
    {
        if ((this.ReleaseFullTextQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReleaseFullTextQueryCompleted(this, new ReleaseFullTextQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ReleaseFullTextQueryAsync(Therefore.WebAPI.ReleaseFullTextQueryParams parameters)
    {
        this.ReleaseFullTextQueryAsync(parameters, null);
    }

    public void ReleaseFullTextQueryAsync(Therefore.WebAPI.ReleaseFullTextQueryParams parameters, object userState)
    {
        if ((this.onBeginReleaseFullTextQueryDelegate == null))
        {
            this.onBeginReleaseFullTextQueryDelegate = new BeginOperationDelegate(this.OnBeginReleaseFullTextQuery);
        }
        if ((this.onEndReleaseFullTextQueryDelegate == null))
        {
            this.onEndReleaseFullTextQueryDelegate = new EndOperationDelegate(this.OnEndReleaseFullTextQuery);
        }
        if ((this.onReleaseFullTextQueryCompletedDelegate == null))
        {
            this.onReleaseFullTextQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReleaseFullTextQueryCompleted);
        }
        base.InvokeAsync(this.onBeginReleaseFullTextQueryDelegate, new object[] {
                    parameters}, this.onEndReleaseFullTextQueryDelegate, this.onReleaseFullTextQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginReleaseMultiQuery(Therefore.WebAPI.ReleaseMultiQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReleaseMultiQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ReleaseMultiQueryResponse IThereforeService.EndReleaseMultiQuery(System.IAsyncResult result)
    {
        return base.Channel.EndReleaseMultiQuery(result);
    }

    private System.IAsyncResult OnBeginReleaseMultiQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ReleaseMultiQueryParams parameters = ((Therefore.WebAPI.ReleaseMultiQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginReleaseMultiQuery(parameters, callback, asyncState);
    }

    private object[] OnEndReleaseMultiQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ReleaseMultiQueryResponse retVal = ((IThereforeService)(this)).EndReleaseMultiQuery(result);
        return new object[] {
                retVal};
    }

    private void OnReleaseMultiQueryCompleted(object state)
    {
        if ((this.ReleaseMultiQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReleaseMultiQueryCompleted(this, new ReleaseMultiQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ReleaseMultiQueryAsync(Therefore.WebAPI.ReleaseMultiQueryParams parameters)
    {
        this.ReleaseMultiQueryAsync(parameters, null);
    }

    public void ReleaseMultiQueryAsync(Therefore.WebAPI.ReleaseMultiQueryParams parameters, object userState)
    {
        if ((this.onBeginReleaseMultiQueryDelegate == null))
        {
            this.onBeginReleaseMultiQueryDelegate = new BeginOperationDelegate(this.OnBeginReleaseMultiQuery);
        }
        if ((this.onEndReleaseMultiQueryDelegate == null))
        {
            this.onEndReleaseMultiQueryDelegate = new EndOperationDelegate(this.OnEndReleaseMultiQuery);
        }
        if ((this.onReleaseMultiQueryCompletedDelegate == null))
        {
            this.onReleaseMultiQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReleaseMultiQueryCompleted);
        }
        base.InvokeAsync(this.onBeginReleaseMultiQueryDelegate, new object[] {
                    parameters}, this.onEndReleaseMultiQueryDelegate, this.onReleaseMultiQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginReleaseSingleQuery(Therefore.WebAPI.ReleaseSingleQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReleaseSingleQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ReleaseSingleQueryResponse IThereforeService.EndReleaseSingleQuery(System.IAsyncResult result)
    {
        return base.Channel.EndReleaseSingleQuery(result);
    }

    private System.IAsyncResult OnBeginReleaseSingleQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ReleaseSingleQueryParams parameters = ((Therefore.WebAPI.ReleaseSingleQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginReleaseSingleQuery(parameters, callback, asyncState);
    }

    private object[] OnEndReleaseSingleQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ReleaseSingleQueryResponse retVal = ((IThereforeService)(this)).EndReleaseSingleQuery(result);
        return new object[] {
                retVal};
    }

    private void OnReleaseSingleQueryCompleted(object state)
    {
        if ((this.ReleaseSingleQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReleaseSingleQueryCompleted(this, new ReleaseSingleQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ReleaseSingleQueryAsync(Therefore.WebAPI.ReleaseSingleQueryParams parameters)
    {
        this.ReleaseSingleQueryAsync(parameters, null);
    }

    public void ReleaseSingleQueryAsync(Therefore.WebAPI.ReleaseSingleQueryParams parameters, object userState)
    {
        if ((this.onBeginReleaseSingleQueryDelegate == null))
        {
            this.onBeginReleaseSingleQueryDelegate = new BeginOperationDelegate(this.OnBeginReleaseSingleQuery);
        }
        if ((this.onEndReleaseSingleQueryDelegate == null))
        {
            this.onEndReleaseSingleQueryDelegate = new EndOperationDelegate(this.OnEndReleaseSingleQuery);
        }
        if ((this.onReleaseSingleQueryCompletedDelegate == null))
        {
            this.onReleaseSingleQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReleaseSingleQueryCompleted);
        }
        base.InvokeAsync(this.onBeginReleaseSingleQueryDelegate, new object[] {
                    parameters}, this.onEndReleaseSingleQueryDelegate, this.onReleaseSingleQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSaveCaseIndexData(Therefore.WebAPI.SaveCaseIndexDataParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSaveCaseIndexData(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SaveCaseIndexDataResponse IThereforeService.EndSaveCaseIndexData(System.IAsyncResult result)
    {
        return base.Channel.EndSaveCaseIndexData(result);
    }

    private System.IAsyncResult OnBeginSaveCaseIndexData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SaveCaseIndexDataParams parameters = ((Therefore.WebAPI.SaveCaseIndexDataParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSaveCaseIndexData(parameters, callback, asyncState);
    }

    private object[] OnEndSaveCaseIndexData(System.IAsyncResult result)
    {
        Therefore.WebAPI.SaveCaseIndexDataResponse retVal = ((IThereforeService)(this)).EndSaveCaseIndexData(result);
        return new object[] {
                retVal};
    }

    private void OnSaveCaseIndexDataCompleted(object state)
    {
        if ((this.SaveCaseIndexDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SaveCaseIndexDataCompleted(this, new SaveCaseIndexDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SaveCaseIndexDataAsync(Therefore.WebAPI.SaveCaseIndexDataParams parameters)
    {
        this.SaveCaseIndexDataAsync(parameters, null);
    }

    public void SaveCaseIndexDataAsync(Therefore.WebAPI.SaveCaseIndexDataParams parameters, object userState)
    {
        if ((this.onBeginSaveCaseIndexDataDelegate == null))
        {
            this.onBeginSaveCaseIndexDataDelegate = new BeginOperationDelegate(this.OnBeginSaveCaseIndexData);
        }
        if ((this.onEndSaveCaseIndexDataDelegate == null))
        {
            this.onEndSaveCaseIndexDataDelegate = new EndOperationDelegate(this.OnEndSaveCaseIndexData);
        }
        if ((this.onSaveCaseIndexDataCompletedDelegate == null))
        {
            this.onSaveCaseIndexDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCaseIndexDataCompleted);
        }
        base.InvokeAsync(this.onBeginSaveCaseIndexDataDelegate, new object[] {
                    parameters}, this.onEndSaveCaseIndexDataDelegate, this.onSaveCaseIndexDataCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSaveCaseIndexDataQuick(Therefore.WebAPI.SaveCaseIndexDataQuickParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSaveCaseIndexDataQuick(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SaveCaseIndexDataQuickResponse IThereforeService.EndSaveCaseIndexDataQuick(System.IAsyncResult result)
    {
        return base.Channel.EndSaveCaseIndexDataQuick(result);
    }

    private System.IAsyncResult OnBeginSaveCaseIndexDataQuick(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SaveCaseIndexDataQuickParams parameters = ((Therefore.WebAPI.SaveCaseIndexDataQuickParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSaveCaseIndexDataQuick(parameters, callback, asyncState);
    }

    private object[] OnEndSaveCaseIndexDataQuick(System.IAsyncResult result)
    {
        Therefore.WebAPI.SaveCaseIndexDataQuickResponse retVal = ((IThereforeService)(this)).EndSaveCaseIndexDataQuick(result);
        return new object[] {
                retVal};
    }

    private void OnSaveCaseIndexDataQuickCompleted(object state)
    {
        if ((this.SaveCaseIndexDataQuickCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SaveCaseIndexDataQuickCompleted(this, new SaveCaseIndexDataQuickCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SaveCaseIndexDataQuickAsync(Therefore.WebAPI.SaveCaseIndexDataQuickParams parameters)
    {
        this.SaveCaseIndexDataQuickAsync(parameters, null);
    }

    public void SaveCaseIndexDataQuickAsync(Therefore.WebAPI.SaveCaseIndexDataQuickParams parameters, object userState)
    {
        if ((this.onBeginSaveCaseIndexDataQuickDelegate == null))
        {
            this.onBeginSaveCaseIndexDataQuickDelegate = new BeginOperationDelegate(this.OnBeginSaveCaseIndexDataQuick);
        }
        if ((this.onEndSaveCaseIndexDataQuickDelegate == null))
        {
            this.onEndSaveCaseIndexDataQuickDelegate = new EndOperationDelegate(this.OnEndSaveCaseIndexDataQuick);
        }
        if ((this.onSaveCaseIndexDataQuickCompletedDelegate == null))
        {
            this.onSaveCaseIndexDataQuickCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCaseIndexDataQuickCompleted);
        }
        base.InvokeAsync(this.onBeginSaveCaseIndexDataQuickDelegate, new object[] {
                    parameters}, this.onEndSaveCaseIndexDataQuickDelegate, this.onSaveCaseIndexDataQuickCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSaveDocumentIndexData(Therefore.WebAPI.SaveDocumentIndexDataParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSaveDocumentIndexData(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SaveDocumentIndexDataResponse IThereforeService.EndSaveDocumentIndexData(System.IAsyncResult result)
    {
        return base.Channel.EndSaveDocumentIndexData(result);
    }

    private System.IAsyncResult OnBeginSaveDocumentIndexData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SaveDocumentIndexDataParams parameters = ((Therefore.WebAPI.SaveDocumentIndexDataParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSaveDocumentIndexData(parameters, callback, asyncState);
    }

    private object[] OnEndSaveDocumentIndexData(System.IAsyncResult result)
    {
        Therefore.WebAPI.SaveDocumentIndexDataResponse retVal = ((IThereforeService)(this)).EndSaveDocumentIndexData(result);
        return new object[] {
                retVal};
    }

    private void OnSaveDocumentIndexDataCompleted(object state)
    {
        if ((this.SaveDocumentIndexDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SaveDocumentIndexDataCompleted(this, new SaveDocumentIndexDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SaveDocumentIndexDataAsync(Therefore.WebAPI.SaveDocumentIndexDataParams parameters)
    {
        this.SaveDocumentIndexDataAsync(parameters, null);
    }

    public void SaveDocumentIndexDataAsync(Therefore.WebAPI.SaveDocumentIndexDataParams parameters, object userState)
    {
        if ((this.onBeginSaveDocumentIndexDataDelegate == null))
        {
            this.onBeginSaveDocumentIndexDataDelegate = new BeginOperationDelegate(this.OnBeginSaveDocumentIndexData);
        }
        if ((this.onEndSaveDocumentIndexDataDelegate == null))
        {
            this.onEndSaveDocumentIndexDataDelegate = new EndOperationDelegate(this.OnEndSaveDocumentIndexData);
        }
        if ((this.onSaveDocumentIndexDataCompletedDelegate == null))
        {
            this.onSaveDocumentIndexDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveDocumentIndexDataCompleted);
        }
        base.InvokeAsync(this.onBeginSaveDocumentIndexDataDelegate, new object[] {
                    parameters}, this.onEndSaveDocumentIndexDataDelegate, this.onSaveDocumentIndexDataCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSaveDocumentIndexDataQuick(Therefore.WebAPI.SaveDocumentIndexDataQuickParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSaveDocumentIndexDataQuick(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SaveDocumentIndexDataQuickResponse IThereforeService.EndSaveDocumentIndexDataQuick(System.IAsyncResult result)
    {
        return base.Channel.EndSaveDocumentIndexDataQuick(result);
    }

    private System.IAsyncResult OnBeginSaveDocumentIndexDataQuick(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SaveDocumentIndexDataQuickParams parameters = ((Therefore.WebAPI.SaveDocumentIndexDataQuickParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSaveDocumentIndexDataQuick(parameters, callback, asyncState);
    }

    private object[] OnEndSaveDocumentIndexDataQuick(System.IAsyncResult result)
    {
        Therefore.WebAPI.SaveDocumentIndexDataQuickResponse retVal = ((IThereforeService)(this)).EndSaveDocumentIndexDataQuick(result);
        return new object[] {
                retVal};
    }

    private void OnSaveDocumentIndexDataQuickCompleted(object state)
    {
        if ((this.SaveDocumentIndexDataQuickCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SaveDocumentIndexDataQuickCompleted(this, new SaveDocumentIndexDataQuickCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SaveDocumentIndexDataQuickAsync(Therefore.WebAPI.SaveDocumentIndexDataQuickParams parameters)
    {
        this.SaveDocumentIndexDataQuickAsync(parameters, null);
    }

    public void SaveDocumentIndexDataQuickAsync(Therefore.WebAPI.SaveDocumentIndexDataQuickParams parameters, object userState)
    {
        if ((this.onBeginSaveDocumentIndexDataQuickDelegate == null))
        {
            this.onBeginSaveDocumentIndexDataQuickDelegate = new BeginOperationDelegate(this.OnBeginSaveDocumentIndexDataQuick);
        }
        if ((this.onEndSaveDocumentIndexDataQuickDelegate == null))
        {
            this.onEndSaveDocumentIndexDataQuickDelegate = new EndOperationDelegate(this.OnEndSaveDocumentIndexDataQuick);
        }
        if ((this.onSaveDocumentIndexDataQuickCompletedDelegate == null))
        {
            this.onSaveDocumentIndexDataQuickCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveDocumentIndexDataQuickCompleted);
        }
        base.InvokeAsync(this.onBeginSaveDocumentIndexDataQuickDelegate, new object[] {
                    parameters}, this.onEndSaveDocumentIndexDataQuickDelegate, this.onSaveDocumentIndexDataQuickCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSetChecklistItemWorkflow(Therefore.WebAPI.SetChecklistItemWorkflowParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSetChecklistItemWorkflow(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SetChecklistItemWorkflowResponse IThereforeService.EndSetChecklistItemWorkflow(System.IAsyncResult result)
    {
        return base.Channel.EndSetChecklistItemWorkflow(result);
    }

    private System.IAsyncResult OnBeginSetChecklistItemWorkflow(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SetChecklistItemWorkflowParams parameters = ((Therefore.WebAPI.SetChecklistItemWorkflowParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSetChecklistItemWorkflow(parameters, callback, asyncState);
    }

    private object[] OnEndSetChecklistItemWorkflow(System.IAsyncResult result)
    {
        Therefore.WebAPI.SetChecklistItemWorkflowResponse retVal = ((IThereforeService)(this)).EndSetChecklistItemWorkflow(result);
        return new object[] {
                retVal};
    }

    private void OnSetChecklistItemWorkflowCompleted(object state)
    {
        if ((this.SetChecklistItemWorkflowCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SetChecklistItemWorkflowCompleted(this, new SetChecklistItemWorkflowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SetChecklistItemWorkflowAsync(Therefore.WebAPI.SetChecklistItemWorkflowParams parameters)
    {
        this.SetChecklistItemWorkflowAsync(parameters, null);
    }

    public void SetChecklistItemWorkflowAsync(Therefore.WebAPI.SetChecklistItemWorkflowParams parameters, object userState)
    {
        if ((this.onBeginSetChecklistItemWorkflowDelegate == null))
        {
            this.onBeginSetChecklistItemWorkflowDelegate = new BeginOperationDelegate(this.OnBeginSetChecklistItemWorkflow);
        }
        if ((this.onEndSetChecklistItemWorkflowDelegate == null))
        {
            this.onEndSetChecklistItemWorkflowDelegate = new EndOperationDelegate(this.OnEndSetChecklistItemWorkflow);
        }
        if ((this.onSetChecklistItemWorkflowCompletedDelegate == null))
        {
            this.onSetChecklistItemWorkflowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetChecklistItemWorkflowCompleted);
        }
        base.InvokeAsync(this.onBeginSetChecklistItemWorkflowDelegate, new object[] {
                    parameters}, this.onEndSetChecklistItemWorkflowDelegate, this.onSetChecklistItemWorkflowCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSetTaskStatus(Therefore.WebAPI.SetTaskStatusParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSetTaskStatus(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SetTaskStatusResponse IThereforeService.EndSetTaskStatus(System.IAsyncResult result)
    {
        return base.Channel.EndSetTaskStatus(result);
    }

    private System.IAsyncResult OnBeginSetTaskStatus(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SetTaskStatusParams parameters = ((Therefore.WebAPI.SetTaskStatusParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSetTaskStatus(parameters, callback, asyncState);
    }

    private object[] OnEndSetTaskStatus(System.IAsyncResult result)
    {
        Therefore.WebAPI.SetTaskStatusResponse retVal = ((IThereforeService)(this)).EndSetTaskStatus(result);
        return new object[] {
                retVal};
    }

    private void OnSetTaskStatusCompleted(object state)
    {
        if ((this.SetTaskStatusCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SetTaskStatusCompleted(this, new SetTaskStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SetTaskStatusAsync(Therefore.WebAPI.SetTaskStatusParams parameters)
    {
        this.SetTaskStatusAsync(parameters, null);
    }

    public void SetTaskStatusAsync(Therefore.WebAPI.SetTaskStatusParams parameters, object userState)
    {
        if ((this.onBeginSetTaskStatusDelegate == null))
        {
            this.onBeginSetTaskStatusDelegate = new BeginOperationDelegate(this.OnBeginSetTaskStatus);
        }
        if ((this.onEndSetTaskStatusDelegate == null))
        {
            this.onEndSetTaskStatusDelegate = new EndOperationDelegate(this.OnEndSetTaskStatus);
        }
        if ((this.onSetTaskStatusCompletedDelegate == null))
        {
            this.onSetTaskStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetTaskStatusCompleted);
        }
        base.InvokeAsync(this.onBeginSetTaskStatusDelegate, new object[] {
                    parameters}, this.onEndSetTaskStatusDelegate, this.onSetTaskStatusCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSetTextInfoWorkflow(Therefore.WebAPI.SetTextInfoWorkflowParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSetTextInfoWorkflow(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SetTextInfoWorkflowResponse IThereforeService.EndSetTextInfoWorkflow(System.IAsyncResult result)
    {
        return base.Channel.EndSetTextInfoWorkflow(result);
    }

    private System.IAsyncResult OnBeginSetTextInfoWorkflow(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SetTextInfoWorkflowParams parameters = ((Therefore.WebAPI.SetTextInfoWorkflowParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSetTextInfoWorkflow(parameters, callback, asyncState);
    }

    private object[] OnEndSetTextInfoWorkflow(System.IAsyncResult result)
    {
        Therefore.WebAPI.SetTextInfoWorkflowResponse retVal = ((IThereforeService)(this)).EndSetTextInfoWorkflow(result);
        return new object[] {
                retVal};
    }

    private void OnSetTextInfoWorkflowCompleted(object state)
    {
        if ((this.SetTextInfoWorkflowCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SetTextInfoWorkflowCompleted(this, new SetTextInfoWorkflowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SetTextInfoWorkflowAsync(Therefore.WebAPI.SetTextInfoWorkflowParams parameters)
    {
        this.SetTextInfoWorkflowAsync(parameters, null);
    }

    public void SetTextInfoWorkflowAsync(Therefore.WebAPI.SetTextInfoWorkflowParams parameters, object userState)
    {
        if ((this.onBeginSetTextInfoWorkflowDelegate == null))
        {
            this.onBeginSetTextInfoWorkflowDelegate = new BeginOperationDelegate(this.OnBeginSetTextInfoWorkflow);
        }
        if ((this.onEndSetTextInfoWorkflowDelegate == null))
        {
            this.onEndSetTextInfoWorkflowDelegate = new EndOperationDelegate(this.OnEndSetTextInfoWorkflow);
        }
        if ((this.onSetTextInfoWorkflowCompletedDelegate == null))
        {
            this.onSetTextInfoWorkflowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetTextInfoWorkflowCompleted);
        }
        base.InvokeAsync(this.onBeginSetTextInfoWorkflowDelegate, new object[] {
                    parameters}, this.onEndSetTextInfoWorkflowDelegate, this.onSetTextInfoWorkflowCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginStartCreateDocumentBatch(Therefore.WebAPI.StartCreateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginStartCreateDocumentBatch(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.StartCreateDocumentBatchResponse IThereforeService.EndStartCreateDocumentBatch(System.IAsyncResult result)
    {
        return base.Channel.EndStartCreateDocumentBatch(result);
    }

    private System.IAsyncResult OnBeginStartCreateDocumentBatch(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.StartCreateDocumentBatchParams parameters = ((Therefore.WebAPI.StartCreateDocumentBatchParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginStartCreateDocumentBatch(parameters, callback, asyncState);
    }

    private object[] OnEndStartCreateDocumentBatch(System.IAsyncResult result)
    {
        Therefore.WebAPI.StartCreateDocumentBatchResponse retVal = ((IThereforeService)(this)).EndStartCreateDocumentBatch(result);
        return new object[] {
                retVal};
    }

    private void OnStartCreateDocumentBatchCompleted(object state)
    {
        if ((this.StartCreateDocumentBatchCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.StartCreateDocumentBatchCompleted(this, new StartCreateDocumentBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void StartCreateDocumentBatchAsync(Therefore.WebAPI.StartCreateDocumentBatchParams parameters)
    {
        this.StartCreateDocumentBatchAsync(parameters, null);
    }

    public void StartCreateDocumentBatchAsync(Therefore.WebAPI.StartCreateDocumentBatchParams parameters, object userState)
    {
        if ((this.onBeginStartCreateDocumentBatchDelegate == null))
        {
            this.onBeginStartCreateDocumentBatchDelegate = new BeginOperationDelegate(this.OnBeginStartCreateDocumentBatch);
        }
        if ((this.onEndStartCreateDocumentBatchDelegate == null))
        {
            this.onEndStartCreateDocumentBatchDelegate = new EndOperationDelegate(this.OnEndStartCreateDocumentBatch);
        }
        if ((this.onStartCreateDocumentBatchCompletedDelegate == null))
        {
            this.onStartCreateDocumentBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartCreateDocumentBatchCompleted);
        }
        base.InvokeAsync(this.onBeginStartCreateDocumentBatchDelegate, new object[] {
                    parameters}, this.onEndStartCreateDocumentBatchDelegate, this.onStartCreateDocumentBatchCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginStartTask(Therefore.WebAPI.StartTaskParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginStartTask(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.StartTaskResponse IThereforeService.EndStartTask(System.IAsyncResult result)
    {
        return base.Channel.EndStartTask(result);
    }

    private System.IAsyncResult OnBeginStartTask(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.StartTaskParams parameters = ((Therefore.WebAPI.StartTaskParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginStartTask(parameters, callback, asyncState);
    }

    private object[] OnEndStartTask(System.IAsyncResult result)
    {
        Therefore.WebAPI.StartTaskResponse retVal = ((IThereforeService)(this)).EndStartTask(result);
        return new object[] {
                retVal};
    }

    private void OnStartTaskCompleted(object state)
    {
        if ((this.StartTaskCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.StartTaskCompleted(this, new StartTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void StartTaskAsync(Therefore.WebAPI.StartTaskParams parameters)
    {
        this.StartTaskAsync(parameters, null);
    }

    public void StartTaskAsync(Therefore.WebAPI.StartTaskParams parameters, object userState)
    {
        if ((this.onBeginStartTaskDelegate == null))
        {
            this.onBeginStartTaskDelegate = new BeginOperationDelegate(this.OnBeginStartTask);
        }
        if ((this.onEndStartTaskDelegate == null))
        {
            this.onEndStartTaskDelegate = new EndOperationDelegate(this.OnEndStartTask);
        }
        if ((this.onStartTaskCompletedDelegate == null))
        {
            this.onStartTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartTaskCompleted);
        }
        base.InvokeAsync(this.onBeginStartTaskDelegate, new object[] {
                    parameters}, this.onEndStartTaskDelegate, this.onStartTaskCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginStartUpdateDocumentBatch(Therefore.WebAPI.StartUpdateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginStartUpdateDocumentBatch(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.StartUpdateDocumentBatchResponse IThereforeService.EndStartUpdateDocumentBatch(System.IAsyncResult result)
    {
        return base.Channel.EndStartUpdateDocumentBatch(result);
    }

    private System.IAsyncResult OnBeginStartUpdateDocumentBatch(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.StartUpdateDocumentBatchParams parameters = ((Therefore.WebAPI.StartUpdateDocumentBatchParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginStartUpdateDocumentBatch(parameters, callback, asyncState);
    }

    private object[] OnEndStartUpdateDocumentBatch(System.IAsyncResult result)
    {
        Therefore.WebAPI.StartUpdateDocumentBatchResponse retVal = ((IThereforeService)(this)).EndStartUpdateDocumentBatch(result);
        return new object[] {
                retVal};
    }

    private void OnStartUpdateDocumentBatchCompleted(object state)
    {
        if ((this.StartUpdateDocumentBatchCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.StartUpdateDocumentBatchCompleted(this, new StartUpdateDocumentBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void StartUpdateDocumentBatchAsync(Therefore.WebAPI.StartUpdateDocumentBatchParams parameters)
    {
        this.StartUpdateDocumentBatchAsync(parameters, null);
    }

    public void StartUpdateDocumentBatchAsync(Therefore.WebAPI.StartUpdateDocumentBatchParams parameters, object userState)
    {
        if ((this.onBeginStartUpdateDocumentBatchDelegate == null))
        {
            this.onBeginStartUpdateDocumentBatchDelegate = new BeginOperationDelegate(this.OnBeginStartUpdateDocumentBatch);
        }
        if ((this.onEndStartUpdateDocumentBatchDelegate == null))
        {
            this.onEndStartUpdateDocumentBatchDelegate = new EndOperationDelegate(this.OnEndStartUpdateDocumentBatch);
        }
        if ((this.onStartUpdateDocumentBatchCompletedDelegate == null))
        {
            this.onStartUpdateDocumentBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartUpdateDocumentBatchCompleted);
        }
        base.InvokeAsync(this.onBeginStartUpdateDocumentBatchDelegate, new object[] {
                    parameters}, this.onEndStartUpdateDocumentBatchDelegate, this.onStartUpdateDocumentBatchCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginStartWorkflowInstance(Therefore.WebAPI.StartWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginStartWorkflowInstance(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.StartWorkflowInstanceResponse IThereforeService.EndStartWorkflowInstance(System.IAsyncResult result)
    {
        return base.Channel.EndStartWorkflowInstance(result);
    }

    private System.IAsyncResult OnBeginStartWorkflowInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.StartWorkflowInstanceParams parameters = ((Therefore.WebAPI.StartWorkflowInstanceParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginStartWorkflowInstance(parameters, callback, asyncState);
    }

    private object[] OnEndStartWorkflowInstance(System.IAsyncResult result)
    {
        Therefore.WebAPI.StartWorkflowInstanceResponse retVal = ((IThereforeService)(this)).EndStartWorkflowInstance(result);
        return new object[] {
                retVal};
    }

    private void OnStartWorkflowInstanceCompleted(object state)
    {
        if ((this.StartWorkflowInstanceCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.StartWorkflowInstanceCompleted(this, new StartWorkflowInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void StartWorkflowInstanceAsync(Therefore.WebAPI.StartWorkflowInstanceParams parameters)
    {
        this.StartWorkflowInstanceAsync(parameters, null);
    }

    public void StartWorkflowInstanceAsync(Therefore.WebAPI.StartWorkflowInstanceParams parameters, object userState)
    {
        if ((this.onBeginStartWorkflowInstanceDelegate == null))
        {
            this.onBeginStartWorkflowInstanceDelegate = new BeginOperationDelegate(this.OnBeginStartWorkflowInstance);
        }
        if ((this.onEndStartWorkflowInstanceDelegate == null))
        {
            this.onEndStartWorkflowInstanceDelegate = new EndOperationDelegate(this.OnEndStartWorkflowInstance);
        }
        if ((this.onStartWorkflowInstanceCompletedDelegate == null))
        {
            this.onStartWorkflowInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartWorkflowInstanceCompleted);
        }
        base.InvokeAsync(this.onBeginStartWorkflowInstanceDelegate, new object[] {
                    parameters}, this.onEndStartWorkflowInstanceDelegate, this.onStartWorkflowInstanceCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSubmitCreateDocumentBatch(Therefore.WebAPI.SubmitCreateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSubmitCreateDocumentBatch(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SubmitCreateDocumentBatchResponse IThereforeService.EndSubmitCreateDocumentBatch(System.IAsyncResult result)
    {
        return base.Channel.EndSubmitCreateDocumentBatch(result);
    }

    private System.IAsyncResult OnBeginSubmitCreateDocumentBatch(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SubmitCreateDocumentBatchParams parameters = ((Therefore.WebAPI.SubmitCreateDocumentBatchParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSubmitCreateDocumentBatch(parameters, callback, asyncState);
    }

    private object[] OnEndSubmitCreateDocumentBatch(System.IAsyncResult result)
    {
        Therefore.WebAPI.SubmitCreateDocumentBatchResponse retVal = ((IThereforeService)(this)).EndSubmitCreateDocumentBatch(result);
        return new object[] {
                retVal};
    }

    private void OnSubmitCreateDocumentBatchCompleted(object state)
    {
        if ((this.SubmitCreateDocumentBatchCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SubmitCreateDocumentBatchCompleted(this, new SubmitCreateDocumentBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SubmitCreateDocumentBatchAsync(Therefore.WebAPI.SubmitCreateDocumentBatchParams parameters)
    {
        this.SubmitCreateDocumentBatchAsync(parameters, null);
    }

    public void SubmitCreateDocumentBatchAsync(Therefore.WebAPI.SubmitCreateDocumentBatchParams parameters, object userState)
    {
        if ((this.onBeginSubmitCreateDocumentBatchDelegate == null))
        {
            this.onBeginSubmitCreateDocumentBatchDelegate = new BeginOperationDelegate(this.OnBeginSubmitCreateDocumentBatch);
        }
        if ((this.onEndSubmitCreateDocumentBatchDelegate == null))
        {
            this.onEndSubmitCreateDocumentBatchDelegate = new EndOperationDelegate(this.OnEndSubmitCreateDocumentBatch);
        }
        if ((this.onSubmitCreateDocumentBatchCompletedDelegate == null))
        {
            this.onSubmitCreateDocumentBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitCreateDocumentBatchCompleted);
        }
        base.InvokeAsync(this.onBeginSubmitCreateDocumentBatchDelegate, new object[] {
                    parameters}, this.onEndSubmitCreateDocumentBatchDelegate, this.onSubmitCreateDocumentBatchCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSubmitUpdateDocumentBatch(Therefore.WebAPI.SubmitUpdateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSubmitUpdateDocumentBatch(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SubmitUpdateDocumentBatchResponse IThereforeService.EndSubmitUpdateDocumentBatch(System.IAsyncResult result)
    {
        return base.Channel.EndSubmitUpdateDocumentBatch(result);
    }

    private System.IAsyncResult OnBeginSubmitUpdateDocumentBatch(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SubmitUpdateDocumentBatchParams parameters = ((Therefore.WebAPI.SubmitUpdateDocumentBatchParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSubmitUpdateDocumentBatch(parameters, callback, asyncState);
    }

    private object[] OnEndSubmitUpdateDocumentBatch(System.IAsyncResult result)
    {
        Therefore.WebAPI.SubmitUpdateDocumentBatchResponse retVal = ((IThereforeService)(this)).EndSubmitUpdateDocumentBatch(result);
        return new object[] {
                retVal};
    }

    private void OnSubmitUpdateDocumentBatchCompleted(object state)
    {
        if ((this.SubmitUpdateDocumentBatchCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SubmitUpdateDocumentBatchCompleted(this, new SubmitUpdateDocumentBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SubmitUpdateDocumentBatchAsync(Therefore.WebAPI.SubmitUpdateDocumentBatchParams parameters)
    {
        this.SubmitUpdateDocumentBatchAsync(parameters, null);
    }

    public void SubmitUpdateDocumentBatchAsync(Therefore.WebAPI.SubmitUpdateDocumentBatchParams parameters, object userState)
    {
        if ((this.onBeginSubmitUpdateDocumentBatchDelegate == null))
        {
            this.onBeginSubmitUpdateDocumentBatchDelegate = new BeginOperationDelegate(this.OnBeginSubmitUpdateDocumentBatch);
        }
        if ((this.onEndSubmitUpdateDocumentBatchDelegate == null))
        {
            this.onEndSubmitUpdateDocumentBatchDelegate = new EndOperationDelegate(this.OnEndSubmitUpdateDocumentBatch);
        }
        if ((this.onSubmitUpdateDocumentBatchCompletedDelegate == null))
        {
            this.onSubmitUpdateDocumentBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitUpdateDocumentBatchCompleted);
        }
        base.InvokeAsync(this.onBeginSubmitUpdateDocumentBatchDelegate, new object[] {
                    parameters}, this.onEndSubmitUpdateDocumentBatchDelegate, this.onSubmitUpdateDocumentBatchCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUnlinkDocAndWFInstance(Therefore.WebAPI.UnlinkDocAndWFInstanceParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUnlinkDocAndWFInstance(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UnlinkDocAndWFInstanceResponse IThereforeService.EndUnlinkDocAndWFInstance(System.IAsyncResult result)
    {
        return base.Channel.EndUnlinkDocAndWFInstance(result);
    }

    private System.IAsyncResult OnBeginUnlinkDocAndWFInstance(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.UnlinkDocAndWFInstanceParams parameters = ((Therefore.WebAPI.UnlinkDocAndWFInstanceParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginUnlinkDocAndWFInstance(parameters, callback, asyncState);
    }

    private object[] OnEndUnlinkDocAndWFInstance(System.IAsyncResult result)
    {
        Therefore.WebAPI.UnlinkDocAndWFInstanceResponse retVal = ((IThereforeService)(this)).EndUnlinkDocAndWFInstance(result);
        return new object[] {
                retVal};
    }

    private void OnUnlinkDocAndWFInstanceCompleted(object state)
    {
        if ((this.UnlinkDocAndWFInstanceCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UnlinkDocAndWFInstanceCompleted(this, new UnlinkDocAndWFInstanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UnlinkDocAndWFInstanceAsync(Therefore.WebAPI.UnlinkDocAndWFInstanceParams parameters)
    {
        this.UnlinkDocAndWFInstanceAsync(parameters, null);
    }

    public void UnlinkDocAndWFInstanceAsync(Therefore.WebAPI.UnlinkDocAndWFInstanceParams parameters, object userState)
    {
        if ((this.onBeginUnlinkDocAndWFInstanceDelegate == null))
        {
            this.onBeginUnlinkDocAndWFInstanceDelegate = new BeginOperationDelegate(this.OnBeginUnlinkDocAndWFInstance);
        }
        if ((this.onEndUnlinkDocAndWFInstanceDelegate == null))
        {
            this.onEndUnlinkDocAndWFInstanceDelegate = new EndOperationDelegate(this.OnEndUnlinkDocAndWFInstance);
        }
        if ((this.onUnlinkDocAndWFInstanceCompletedDelegate == null))
        {
            this.onUnlinkDocAndWFInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnlinkDocAndWFInstanceCompleted);
        }
        base.InvokeAsync(this.onBeginUnlinkDocAndWFInstanceDelegate, new object[] {
                    parameters}, this.onEndUnlinkDocAndWFInstanceDelegate, this.onUnlinkDocAndWFInstanceCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUnlinkDocuments(Therefore.WebAPI.UnlinkDocumentsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUnlinkDocuments(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UnlinkDocumentsResponse IThereforeService.EndUnlinkDocuments(System.IAsyncResult result)
    {
        return base.Channel.EndUnlinkDocuments(result);
    }

    private System.IAsyncResult OnBeginUnlinkDocuments(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.UnlinkDocumentsParams parameters = ((Therefore.WebAPI.UnlinkDocumentsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginUnlinkDocuments(parameters, callback, asyncState);
    }

    private object[] OnEndUnlinkDocuments(System.IAsyncResult result)
    {
        Therefore.WebAPI.UnlinkDocumentsResponse retVal = ((IThereforeService)(this)).EndUnlinkDocuments(result);
        return new object[] {
                retVal};
    }

    private void OnUnlinkDocumentsCompleted(object state)
    {
        if ((this.UnlinkDocumentsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UnlinkDocumentsCompleted(this, new UnlinkDocumentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UnlinkDocumentsAsync(Therefore.WebAPI.UnlinkDocumentsParams parameters)
    {
        this.UnlinkDocumentsAsync(parameters, null);
    }

    public void UnlinkDocumentsAsync(Therefore.WebAPI.UnlinkDocumentsParams parameters, object userState)
    {
        if ((this.onBeginUnlinkDocumentsDelegate == null))
        {
            this.onBeginUnlinkDocumentsDelegate = new BeginOperationDelegate(this.OnBeginUnlinkDocuments);
        }
        if ((this.onEndUnlinkDocumentsDelegate == null))
        {
            this.onEndUnlinkDocumentsDelegate = new EndOperationDelegate(this.OnEndUnlinkDocuments);
        }
        if ((this.onUnlinkDocumentsCompletedDelegate == null))
        {
            this.onUnlinkDocumentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnlinkDocumentsCompleted);
        }
        base.InvokeAsync(this.onBeginUnlinkDocumentsDelegate, new object[] {
                    parameters}, this.onEndUnlinkDocumentsDelegate, this.onUnlinkDocumentsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUpdateDictionaryKeyword(Therefore.WebAPI.UpdateDictionaryKeywordParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateDictionaryKeyword(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UpdateDictionaryKeywordResponse IThereforeService.EndUpdateDictionaryKeyword(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateDictionaryKeyword(result);
    }

    private System.IAsyncResult OnBeginUpdateDictionaryKeyword(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.UpdateDictionaryKeywordParams parameters = ((Therefore.WebAPI.UpdateDictionaryKeywordParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginUpdateDictionaryKeyword(parameters, callback, asyncState);
    }

    private object[] OnEndUpdateDictionaryKeyword(System.IAsyncResult result)
    {
        Therefore.WebAPI.UpdateDictionaryKeywordResponse retVal = ((IThereforeService)(this)).EndUpdateDictionaryKeyword(result);
        return new object[] {
                retVal};
    }

    private void OnUpdateDictionaryKeywordCompleted(object state)
    {
        if ((this.UpdateDictionaryKeywordCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateDictionaryKeywordCompleted(this, new UpdateDictionaryKeywordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UpdateDictionaryKeywordAsync(Therefore.WebAPI.UpdateDictionaryKeywordParams parameters)
    {
        this.UpdateDictionaryKeywordAsync(parameters, null);
    }

    public void UpdateDictionaryKeywordAsync(Therefore.WebAPI.UpdateDictionaryKeywordParams parameters, object userState)
    {
        if ((this.onBeginUpdateDictionaryKeywordDelegate == null))
        {
            this.onBeginUpdateDictionaryKeywordDelegate = new BeginOperationDelegate(this.OnBeginUpdateDictionaryKeyword);
        }
        if ((this.onEndUpdateDictionaryKeywordDelegate == null))
        {
            this.onEndUpdateDictionaryKeywordDelegate = new EndOperationDelegate(this.OnEndUpdateDictionaryKeyword);
        }
        if ((this.onUpdateDictionaryKeywordCompletedDelegate == null))
        {
            this.onUpdateDictionaryKeywordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDictionaryKeywordCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateDictionaryKeywordDelegate, new object[] {
                    parameters}, this.onEndUpdateDictionaryKeywordDelegate, this.onUpdateDictionaryKeywordCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUpdateDocument(Therefore.WebAPI.UpdateDocumentParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateDocument(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UpdateDocumentResponse IThereforeService.EndUpdateDocument(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateDocument(result);
    }

    private System.IAsyncResult OnBeginUpdateDocument(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.UpdateDocumentParams parameters = ((Therefore.WebAPI.UpdateDocumentParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginUpdateDocument(parameters, callback, asyncState);
    }

    private object[] OnEndUpdateDocument(System.IAsyncResult result)
    {
        Therefore.WebAPI.UpdateDocumentResponse retVal = ((IThereforeService)(this)).EndUpdateDocument(result);
        return new object[] {
                retVal};
    }

    private void OnUpdateDocumentCompleted(object state)
    {
        if ((this.UpdateDocumentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateDocumentCompleted(this, new UpdateDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UpdateDocumentAsync(Therefore.WebAPI.UpdateDocumentParams parameters)
    {
        this.UpdateDocumentAsync(parameters, null);
    }

    public void UpdateDocumentAsync(Therefore.WebAPI.UpdateDocumentParams parameters, object userState)
    {
        if ((this.onBeginUpdateDocumentDelegate == null))
        {
            this.onBeginUpdateDocumentDelegate = new BeginOperationDelegate(this.OnBeginUpdateDocument);
        }
        if ((this.onEndUpdateDocumentDelegate == null))
        {
            this.onEndUpdateDocumentDelegate = new EndOperationDelegate(this.OnEndUpdateDocument);
        }
        if ((this.onUpdateDocumentCompletedDelegate == null))
        {
            this.onUpdateDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateDocumentDelegate, new object[] {
                    parameters}, this.onEndUpdateDocumentDelegate, this.onUpdateDocumentCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUpdateTask(Therefore.WebAPI.UpdateTaskParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateTask(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UpdateTaskResponse IThereforeService.EndUpdateTask(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateTask(result);
    }

    private System.IAsyncResult OnBeginUpdateTask(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.UpdateTaskParams parameters = ((Therefore.WebAPI.UpdateTaskParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginUpdateTask(parameters, callback, asyncState);
    }

    private object[] OnEndUpdateTask(System.IAsyncResult result)
    {
        Therefore.WebAPI.UpdateTaskResponse retVal = ((IThereforeService)(this)).EndUpdateTask(result);
        return new object[] {
                retVal};
    }

    private void OnUpdateTaskCompleted(object state)
    {
        if ((this.UpdateTaskCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateTaskCompleted(this, new UpdateTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UpdateTaskAsync(Therefore.WebAPI.UpdateTaskParams parameters)
    {
        this.UpdateTaskAsync(parameters, null);
    }

    public void UpdateTaskAsync(Therefore.WebAPI.UpdateTaskParams parameters, object userState)
    {
        if ((this.onBeginUpdateTaskDelegate == null))
        {
            this.onBeginUpdateTaskDelegate = new BeginOperationDelegate(this.OnBeginUpdateTask);
        }
        if ((this.onEndUpdateTaskDelegate == null))
        {
            this.onEndUpdateTaskDelegate = new EndOperationDelegate(this.OnEndUpdateTask);
        }
        if ((this.onUpdateTaskCompletedDelegate == null))
        {
            this.onUpdateTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTaskCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateTaskDelegate, new object[] {
                    parameters}, this.onEndUpdateTaskDelegate, this.onUpdateTaskCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUpdateTaskComment(Therefore.WebAPI.UpdateTaskCommentParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateTaskComment(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UpdateTaskCommentResponse IThereforeService.EndUpdateTaskComment(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateTaskComment(result);
    }

    private System.IAsyncResult OnBeginUpdateTaskComment(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.UpdateTaskCommentParams parameters = ((Therefore.WebAPI.UpdateTaskCommentParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginUpdateTaskComment(parameters, callback, asyncState);
    }

    private object[] OnEndUpdateTaskComment(System.IAsyncResult result)
    {
        Therefore.WebAPI.UpdateTaskCommentResponse retVal = ((IThereforeService)(this)).EndUpdateTaskComment(result);
        return new object[] {
                retVal};
    }

    private void OnUpdateTaskCommentCompleted(object state)
    {
        if ((this.UpdateTaskCommentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateTaskCommentCompleted(this, new UpdateTaskCommentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UpdateTaskCommentAsync(Therefore.WebAPI.UpdateTaskCommentParams parameters)
    {
        this.UpdateTaskCommentAsync(parameters, null);
    }

    public void UpdateTaskCommentAsync(Therefore.WebAPI.UpdateTaskCommentParams parameters, object userState)
    {
        if ((this.onBeginUpdateTaskCommentDelegate == null))
        {
            this.onBeginUpdateTaskCommentDelegate = new BeginOperationDelegate(this.OnBeginUpdateTaskComment);
        }
        if ((this.onEndUpdateTaskCommentDelegate == null))
        {
            this.onEndUpdateTaskCommentDelegate = new EndOperationDelegate(this.OnEndUpdateTaskComment);
        }
        if ((this.onUpdateTaskCommentCompletedDelegate == null))
        {
            this.onUpdateTaskCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTaskCommentCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateTaskCommentDelegate, new object[] {
                    parameters}, this.onEndUpdateTaskCommentDelegate, this.onUpdateTaskCommentCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUploadDocStreamToBatch(Therefore.WebAPI.UploadDocStreamToBatchParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUploadDocStreamToBatch(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UploadDocStreamToBatchResponse IThereforeService.EndUploadDocStreamToBatch(System.IAsyncResult result)
    {
        return base.Channel.EndUploadDocStreamToBatch(result);
    }

    private System.IAsyncResult OnBeginUploadDocStreamToBatch(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.UploadDocStreamToBatchParams parameters = ((Therefore.WebAPI.UploadDocStreamToBatchParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginUploadDocStreamToBatch(parameters, callback, asyncState);
    }

    private object[] OnEndUploadDocStreamToBatch(System.IAsyncResult result)
    {
        Therefore.WebAPI.UploadDocStreamToBatchResponse retVal = ((IThereforeService)(this)).EndUploadDocStreamToBatch(result);
        return new object[] {
                retVal};
    }

    private void OnUploadDocStreamToBatchCompleted(object state)
    {
        if ((this.UploadDocStreamToBatchCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UploadDocStreamToBatchCompleted(this, new UploadDocStreamToBatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UploadDocStreamToBatchAsync(Therefore.WebAPI.UploadDocStreamToBatchParams parameters)
    {
        this.UploadDocStreamToBatchAsync(parameters, null);
    }

    public void UploadDocStreamToBatchAsync(Therefore.WebAPI.UploadDocStreamToBatchParams parameters, object userState)
    {
        if ((this.onBeginUploadDocStreamToBatchDelegate == null))
        {
            this.onBeginUploadDocStreamToBatchDelegate = new BeginOperationDelegate(this.OnBeginUploadDocStreamToBatch);
        }
        if ((this.onEndUploadDocStreamToBatchDelegate == null))
        {
            this.onEndUploadDocStreamToBatchDelegate = new EndOperationDelegate(this.OnEndUploadDocStreamToBatch);
        }
        if ((this.onUploadDocStreamToBatchCompletedDelegate == null))
        {
            this.onUploadDocStreamToBatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadDocStreamToBatchCompleted);
        }
        base.InvokeAsync(this.onBeginUploadDocStreamToBatchDelegate, new object[] {
                    parameters}, this.onEndUploadDocStreamToBatchDelegate, this.onUploadDocStreamToBatchCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginExecuteDependentFieldsQuery(Therefore.WebAPI.ExecuteDependentFieldsQueryParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteDependentFieldsQuery(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ExecuteDependentFieldsQueryResponse IThereforeService.EndExecuteDependentFieldsQuery(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteDependentFieldsQuery(result);
    }

    private System.IAsyncResult OnBeginExecuteDependentFieldsQuery(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ExecuteDependentFieldsQueryParams parameters = ((Therefore.WebAPI.ExecuteDependentFieldsQueryParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginExecuteDependentFieldsQuery(parameters, callback, asyncState);
    }

    private object[] OnEndExecuteDependentFieldsQuery(System.IAsyncResult result)
    {
        Therefore.WebAPI.ExecuteDependentFieldsQueryResponse retVal = ((IThereforeService)(this)).EndExecuteDependentFieldsQuery(result);
        return new object[] {
                retVal};
    }

    private void OnExecuteDependentFieldsQueryCompleted(object state)
    {
        if ((this.ExecuteDependentFieldsQueryCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteDependentFieldsQueryCompleted(this, new ExecuteDependentFieldsQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ExecuteDependentFieldsQueryAsync(Therefore.WebAPI.ExecuteDependentFieldsQueryParams parameters)
    {
        this.ExecuteDependentFieldsQueryAsync(parameters, null);
    }

    public void ExecuteDependentFieldsQueryAsync(Therefore.WebAPI.ExecuteDependentFieldsQueryParams parameters, object userState)
    {
        if ((this.onBeginExecuteDependentFieldsQueryDelegate == null))
        {
            this.onBeginExecuteDependentFieldsQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteDependentFieldsQuery);
        }
        if ((this.onEndExecuteDependentFieldsQueryDelegate == null))
        {
            this.onEndExecuteDependentFieldsQueryDelegate = new EndOperationDelegate(this.OnEndExecuteDependentFieldsQuery);
        }
        if ((this.onExecuteDependentFieldsQueryCompletedDelegate == null))
        {
            this.onExecuteDependentFieldsQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteDependentFieldsQueryCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteDependentFieldsQueryDelegate, new object[] {
                    parameters}, this.onEndExecuteDependentFieldsQueryDelegate, this.onExecuteDependentFieldsQueryCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginValidateKeywords(Therefore.WebAPI.ValidateKeywordsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginValidateKeywords(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ValidateKeywordsResponse IThereforeService.EndValidateKeywords(System.IAsyncResult result)
    {
        return base.Channel.EndValidateKeywords(result);
    }

    private System.IAsyncResult OnBeginValidateKeywords(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ValidateKeywordsParams parameters = ((Therefore.WebAPI.ValidateKeywordsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginValidateKeywords(parameters, callback, asyncState);
    }

    private object[] OnEndValidateKeywords(System.IAsyncResult result)
    {
        Therefore.WebAPI.ValidateKeywordsResponse retVal = ((IThereforeService)(this)).EndValidateKeywords(result);
        return new object[] {
                retVal};
    }

    private void OnValidateKeywordsCompleted(object state)
    {
        if ((this.ValidateKeywordsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ValidateKeywordsCompleted(this, new ValidateKeywordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ValidateKeywordsAsync(Therefore.WebAPI.ValidateKeywordsParams parameters)
    {
        this.ValidateKeywordsAsync(parameters, null);
    }

    public void ValidateKeywordsAsync(Therefore.WebAPI.ValidateKeywordsParams parameters, object userState)
    {
        if ((this.onBeginValidateKeywordsDelegate == null))
        {
            this.onBeginValidateKeywordsDelegate = new BeginOperationDelegate(this.OnBeginValidateKeywords);
        }
        if ((this.onEndValidateKeywordsDelegate == null))
        {
            this.onEndValidateKeywordsDelegate = new EndOperationDelegate(this.OnEndValidateKeywords);
        }
        if ((this.onValidateKeywordsCompletedDelegate == null))
        {
            this.onValidateKeywordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateKeywordsCompleted);
        }
        base.InvokeAsync(this.onBeginValidateKeywordsDelegate, new object[] {
                    parameters}, this.onEndValidateKeywordsDelegate, this.onValidateKeywordsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetConnectionToken(Therefore.WebAPI.GetConnectionTokenParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetConnectionToken(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetConnectionTokenResponse IThereforeService.EndGetConnectionToken(System.IAsyncResult result)
    {
        return base.Channel.EndGetConnectionToken(result);
    }

    private System.IAsyncResult OnBeginGetConnectionToken(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetConnectionTokenParams parameters = ((Therefore.WebAPI.GetConnectionTokenParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetConnectionToken(parameters, callback, asyncState);
    }

    private object[] OnEndGetConnectionToken(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetConnectionTokenResponse retVal = ((IThereforeService)(this)).EndGetConnectionToken(result);
        return new object[] {
                retVal};
    }

    private void OnGetConnectionTokenCompleted(object state)
    {
        if ((this.GetConnectionTokenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetConnectionTokenCompleted(this, new GetConnectionTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetConnectionTokenAsync(Therefore.WebAPI.GetConnectionTokenParams parameters)
    {
        this.GetConnectionTokenAsync(parameters, null);
    }

    public void GetConnectionTokenAsync(Therefore.WebAPI.GetConnectionTokenParams parameters, object userState)
    {
        if ((this.onBeginGetConnectionTokenDelegate == null))
        {
            this.onBeginGetConnectionTokenDelegate = new BeginOperationDelegate(this.OnBeginGetConnectionToken);
        }
        if ((this.onEndGetConnectionTokenDelegate == null))
        {
            this.onEndGetConnectionTokenDelegate = new EndOperationDelegate(this.OnEndGetConnectionToken);
        }
        if ((this.onGetConnectionTokenCompletedDelegate == null))
        {
            this.onGetConnectionTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConnectionTokenCompleted);
        }
        base.InvokeAsync(this.onBeginGetConnectionTokenDelegate, new object[] {
                    parameters}, this.onEndGetConnectionTokenDelegate, this.onGetConnectionTokenCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetConnectionTokenFromADFSToken(Therefore.WebAPI.GetConnectionTokenFromADFSTokenParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetConnectionTokenFromADFSToken(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetConnectionTokenFromADFSTokenResponse IThereforeService.EndGetConnectionTokenFromADFSToken(System.IAsyncResult result)
    {
        return base.Channel.EndGetConnectionTokenFromADFSToken(result);
    }

    private System.IAsyncResult OnBeginGetConnectionTokenFromADFSToken(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetConnectionTokenFromADFSTokenParams parameters = ((Therefore.WebAPI.GetConnectionTokenFromADFSTokenParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetConnectionTokenFromADFSToken(parameters, callback, asyncState);
    }

    private object[] OnEndGetConnectionTokenFromADFSToken(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetConnectionTokenFromADFSTokenResponse retVal = ((IThereforeService)(this)).EndGetConnectionTokenFromADFSToken(result);
        return new object[] {
                retVal};
    }

    private void OnGetConnectionTokenFromADFSTokenCompleted(object state)
    {
        if ((this.GetConnectionTokenFromADFSTokenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetConnectionTokenFromADFSTokenCompleted(this, new GetConnectionTokenFromADFSTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetConnectionTokenFromADFSTokenAsync(Therefore.WebAPI.GetConnectionTokenFromADFSTokenParams parameters)
    {
        this.GetConnectionTokenFromADFSTokenAsync(parameters, null);
    }

    public void GetConnectionTokenFromADFSTokenAsync(Therefore.WebAPI.GetConnectionTokenFromADFSTokenParams parameters, object userState)
    {
        if ((this.onBeginGetConnectionTokenFromADFSTokenDelegate == null))
        {
            this.onBeginGetConnectionTokenFromADFSTokenDelegate = new BeginOperationDelegate(this.OnBeginGetConnectionTokenFromADFSToken);
        }
        if ((this.onEndGetConnectionTokenFromADFSTokenDelegate == null))
        {
            this.onEndGetConnectionTokenFromADFSTokenDelegate = new EndOperationDelegate(this.OnEndGetConnectionTokenFromADFSToken);
        }
        if ((this.onGetConnectionTokenFromADFSTokenCompletedDelegate == null))
        {
            this.onGetConnectionTokenFromADFSTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConnectionTokenFromADFSTokenCompleted);
        }
        base.InvokeAsync(this.onBeginGetConnectionTokenFromADFSTokenDelegate, new object[] {
                    parameters}, this.onEndGetConnectionTokenFromADFSTokenDelegate, this.onGetConnectionTokenFromADFSTokenCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetJWTToken(Therefore.WebAPI.GetJWTTokenParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetJWTToken(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetJWTTokenResponse IThereforeService.EndGetJWTToken(System.IAsyncResult result)
    {
        return base.Channel.EndGetJWTToken(result);
    }

    private System.IAsyncResult OnBeginGetJWTToken(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetJWTTokenParams parameters = ((Therefore.WebAPI.GetJWTTokenParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetJWTToken(parameters, callback, asyncState);
    }

    private object[] OnEndGetJWTToken(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetJWTTokenResponse retVal = ((IThereforeService)(this)).EndGetJWTToken(result);
        return new object[] {
                retVal};
    }

    private void OnGetJWTTokenCompleted(object state)
    {
        if ((this.GetJWTTokenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetJWTTokenCompleted(this, new GetJWTTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetJWTTokenAsync(Therefore.WebAPI.GetJWTTokenParams parameters)
    {
        this.GetJWTTokenAsync(parameters, null);
    }

    public void GetJWTTokenAsync(Therefore.WebAPI.GetJWTTokenParams parameters, object userState)
    {
        if ((this.onBeginGetJWTTokenDelegate == null))
        {
            this.onBeginGetJWTTokenDelegate = new BeginOperationDelegate(this.OnBeginGetJWTToken);
        }
        if ((this.onEndGetJWTTokenDelegate == null))
        {
            this.onEndGetJWTTokenDelegate = new EndOperationDelegate(this.OnEndGetJWTToken);
        }
        if ((this.onGetJWTTokenCompletedDelegate == null))
        {
            this.onGetJWTTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJWTTokenCompleted);
        }
        base.InvokeAsync(this.onBeginGetJWTTokenDelegate, new object[] {
                    parameters}, this.onEndGetJWTTokenDelegate, this.onGetJWTTokenCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginClearWorkflowInstanceErrors(Therefore.WebAPI.ClearWorkflowInstanceErrorsParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginClearWorkflowInstanceErrors(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.ClearWorkflowInstanceErrorsResponse IThereforeService.EndClearWorkflowInstanceErrors(System.IAsyncResult result)
    {
        return base.Channel.EndClearWorkflowInstanceErrors(result);
    }

    private System.IAsyncResult OnBeginClearWorkflowInstanceErrors(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.ClearWorkflowInstanceErrorsParams parameters = ((Therefore.WebAPI.ClearWorkflowInstanceErrorsParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginClearWorkflowInstanceErrors(parameters, callback, asyncState);
    }

    private object[] OnEndClearWorkflowInstanceErrors(System.IAsyncResult result)
    {
        Therefore.WebAPI.ClearWorkflowInstanceErrorsResponse retVal = ((IThereforeService)(this)).EndClearWorkflowInstanceErrors(result);
        return new object[] {
                retVal};
    }

    private void OnClearWorkflowInstanceErrorsCompleted(object state)
    {
        if ((this.ClearWorkflowInstanceErrorsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ClearWorkflowInstanceErrorsCompleted(this, new ClearWorkflowInstanceErrorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ClearWorkflowInstanceErrorsAsync(Therefore.WebAPI.ClearWorkflowInstanceErrorsParams parameters)
    {
        this.ClearWorkflowInstanceErrorsAsync(parameters, null);
    }

    public void ClearWorkflowInstanceErrorsAsync(Therefore.WebAPI.ClearWorkflowInstanceErrorsParams parameters, object userState)
    {
        if ((this.onBeginClearWorkflowInstanceErrorsDelegate == null))
        {
            this.onBeginClearWorkflowInstanceErrorsDelegate = new BeginOperationDelegate(this.OnBeginClearWorkflowInstanceErrors);
        }
        if ((this.onEndClearWorkflowInstanceErrorsDelegate == null))
        {
            this.onEndClearWorkflowInstanceErrorsDelegate = new EndOperationDelegate(this.OnEndClearWorkflowInstanceErrors);
        }
        if ((this.onClearWorkflowInstanceErrorsCompletedDelegate == null))
        {
            this.onClearWorkflowInstanceErrorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearWorkflowInstanceErrorsCompleted);
        }
        base.InvokeAsync(this.onBeginClearWorkflowInstanceErrorsDelegate, new object[] {
                    parameters}, this.onEndClearWorkflowInstanceErrorsDelegate, this.onClearWorkflowInstanceErrorsCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginCheckOutDocument(Therefore.WebAPI.CheckOutDocumentParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCheckOutDocument(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.CheckOutDocumentResponse IThereforeService.EndCheckOutDocument(System.IAsyncResult result)
    {
        return base.Channel.EndCheckOutDocument(result);
    }

    private System.IAsyncResult OnBeginCheckOutDocument(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.CheckOutDocumentParams parameters = ((Therefore.WebAPI.CheckOutDocumentParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginCheckOutDocument(parameters, callback, asyncState);
    }

    private object[] OnEndCheckOutDocument(System.IAsyncResult result)
    {
        Therefore.WebAPI.CheckOutDocumentResponse retVal = ((IThereforeService)(this)).EndCheckOutDocument(result);
        return new object[] {
                retVal};
    }

    private void OnCheckOutDocumentCompleted(object state)
    {
        if ((this.CheckOutDocumentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CheckOutDocumentCompleted(this, new CheckOutDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CheckOutDocumentAsync(Therefore.WebAPI.CheckOutDocumentParams parameters)
    {
        this.CheckOutDocumentAsync(parameters, null);
    }

    public void CheckOutDocumentAsync(Therefore.WebAPI.CheckOutDocumentParams parameters, object userState)
    {
        if ((this.onBeginCheckOutDocumentDelegate == null))
        {
            this.onBeginCheckOutDocumentDelegate = new BeginOperationDelegate(this.OnBeginCheckOutDocument);
        }
        if ((this.onEndCheckOutDocumentDelegate == null))
        {
            this.onEndCheckOutDocumentDelegate = new EndOperationDelegate(this.OnEndCheckOutDocument);
        }
        if ((this.onCheckOutDocumentCompletedDelegate == null))
        {
            this.onCheckOutDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckOutDocumentCompleted);
        }
        base.InvokeAsync(this.onBeginCheckOutDocumentDelegate, new object[] {
                    parameters}, this.onEndCheckOutDocumentDelegate, this.onCheckOutDocumentCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginTestCheckOutDocument(Therefore.WebAPI.TestCheckOutDocumentParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginTestCheckOutDocument(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.TestCheckOutDocumentResponse IThereforeService.EndTestCheckOutDocument(System.IAsyncResult result)
    {
        return base.Channel.EndTestCheckOutDocument(result);
    }

    private System.IAsyncResult OnBeginTestCheckOutDocument(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.TestCheckOutDocumentParams parameters = ((Therefore.WebAPI.TestCheckOutDocumentParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginTestCheckOutDocument(parameters, callback, asyncState);
    }

    private object[] OnEndTestCheckOutDocument(System.IAsyncResult result)
    {
        Therefore.WebAPI.TestCheckOutDocumentResponse retVal = ((IThereforeService)(this)).EndTestCheckOutDocument(result);
        return new object[] {
                retVal};
    }

    private void OnTestCheckOutDocumentCompleted(object state)
    {
        if ((this.TestCheckOutDocumentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.TestCheckOutDocumentCompleted(this, new TestCheckOutDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void TestCheckOutDocumentAsync(Therefore.WebAPI.TestCheckOutDocumentParams parameters)
    {
        this.TestCheckOutDocumentAsync(parameters, null);
    }

    public void TestCheckOutDocumentAsync(Therefore.WebAPI.TestCheckOutDocumentParams parameters, object userState)
    {
        if ((this.onBeginTestCheckOutDocumentDelegate == null))
        {
            this.onBeginTestCheckOutDocumentDelegate = new BeginOperationDelegate(this.OnBeginTestCheckOutDocument);
        }
        if ((this.onEndTestCheckOutDocumentDelegate == null))
        {
            this.onEndTestCheckOutDocumentDelegate = new EndOperationDelegate(this.OnEndTestCheckOutDocument);
        }
        if ((this.onTestCheckOutDocumentCompletedDelegate == null))
        {
            this.onTestCheckOutDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestCheckOutDocumentCompleted);
        }
        base.InvokeAsync(this.onBeginTestCheckOutDocumentDelegate, new object[] {
                    parameters}, this.onEndTestCheckOutDocumentDelegate, this.onTestCheckOutDocumentCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginCheckInDocument(Therefore.WebAPI.CheckInDocumentParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCheckInDocument(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.CheckInDocumentResponse IThereforeService.EndCheckInDocument(System.IAsyncResult result)
    {
        return base.Channel.EndCheckInDocument(result);
    }

    private System.IAsyncResult OnBeginCheckInDocument(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.CheckInDocumentParams parameters = ((Therefore.WebAPI.CheckInDocumentParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginCheckInDocument(parameters, callback, asyncState);
    }

    private object[] OnEndCheckInDocument(System.IAsyncResult result)
    {
        Therefore.WebAPI.CheckInDocumentResponse retVal = ((IThereforeService)(this)).EndCheckInDocument(result);
        return new object[] {
                retVal};
    }

    private void OnCheckInDocumentCompleted(object state)
    {
        if ((this.CheckInDocumentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CheckInDocumentCompleted(this, new CheckInDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CheckInDocumentAsync(Therefore.WebAPI.CheckInDocumentParams parameters)
    {
        this.CheckInDocumentAsync(parameters, null);
    }

    public void CheckInDocumentAsync(Therefore.WebAPI.CheckInDocumentParams parameters, object userState)
    {
        if ((this.onBeginCheckInDocumentDelegate == null))
        {
            this.onBeginCheckInDocumentDelegate = new BeginOperationDelegate(this.OnBeginCheckInDocument);
        }
        if ((this.onEndCheckInDocumentDelegate == null))
        {
            this.onEndCheckInDocumentDelegate = new EndOperationDelegate(this.OnEndCheckInDocument);
        }
        if ((this.onCheckInDocumentCompletedDelegate == null))
        {
            this.onCheckInDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckInDocumentCompleted);
        }
        base.InvokeAsync(this.onBeginCheckInDocumentDelegate, new object[] {
                    parameters}, this.onEndCheckInDocumentDelegate, this.onCheckInDocumentCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUndoCheckOutDocument(Therefore.WebAPI.UndoCheckOutDocumentParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUndoCheckOutDocument(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UndoCheckOutDocumentResponse IThereforeService.EndUndoCheckOutDocument(System.IAsyncResult result)
    {
        return base.Channel.EndUndoCheckOutDocument(result);
    }

    private System.IAsyncResult OnBeginUndoCheckOutDocument(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.UndoCheckOutDocumentParams parameters = ((Therefore.WebAPI.UndoCheckOutDocumentParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginUndoCheckOutDocument(parameters, callback, asyncState);
    }

    private object[] OnEndUndoCheckOutDocument(System.IAsyncResult result)
    {
        Therefore.WebAPI.UndoCheckOutDocumentResponse retVal = ((IThereforeService)(this)).EndUndoCheckOutDocument(result);
        return new object[] {
                retVal};
    }

    private void OnUndoCheckOutDocumentCompleted(object state)
    {
        if ((this.UndoCheckOutDocumentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UndoCheckOutDocumentCompleted(this, new UndoCheckOutDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UndoCheckOutDocumentAsync(Therefore.WebAPI.UndoCheckOutDocumentParams parameters)
    {
        this.UndoCheckOutDocumentAsync(parameters, null);
    }

    public void UndoCheckOutDocumentAsync(Therefore.WebAPI.UndoCheckOutDocumentParams parameters, object userState)
    {
        if ((this.onBeginUndoCheckOutDocumentDelegate == null))
        {
            this.onBeginUndoCheckOutDocumentDelegate = new BeginOperationDelegate(this.OnBeginUndoCheckOutDocument);
        }
        if ((this.onEndUndoCheckOutDocumentDelegate == null))
        {
            this.onEndUndoCheckOutDocumentDelegate = new EndOperationDelegate(this.OnEndUndoCheckOutDocument);
        }
        if ((this.onUndoCheckOutDocumentCompletedDelegate == null))
        {
            this.onUndoCheckOutDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUndoCheckOutDocumentCompleted);
        }
        base.InvokeAsync(this.onBeginUndoCheckOutDocumentDelegate, new object[] {
                    parameters}, this.onEndUndoCheckOutDocumentDelegate, this.onUndoCheckOutDocumentCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetSystemCustomerId(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetSystemCustomerId(callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetSystemCustomerIdResponse IThereforeService.EndGetSystemCustomerId(System.IAsyncResult result)
    {
        return base.Channel.EndGetSystemCustomerId(result);
    }

    private System.IAsyncResult OnBeginGetSystemCustomerId(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IThereforeService)(this)).BeginGetSystemCustomerId(callback, asyncState);
    }

    private object[] OnEndGetSystemCustomerId(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetSystemCustomerIdResponse retVal = ((IThereforeService)(this)).EndGetSystemCustomerId(result);
        return new object[] {
                retVal};
    }

    private void OnGetSystemCustomerIdCompleted(object state)
    {
        if ((this.GetSystemCustomerIdCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetSystemCustomerIdCompleted(this, new GetSystemCustomerIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetSystemCustomerIdAsync()
    {
        this.GetSystemCustomerIdAsync(null);
    }

    public void GetSystemCustomerIdAsync(object userState)
    {
        if ((this.onBeginGetSystemCustomerIdDelegate == null))
        {
            this.onBeginGetSystemCustomerIdDelegate = new BeginOperationDelegate(this.OnBeginGetSystemCustomerId);
        }
        if ((this.onEndGetSystemCustomerIdDelegate == null))
        {
            this.onEndGetSystemCustomerIdDelegate = new EndOperationDelegate(this.OnEndGetSystemCustomerId);
        }
        if ((this.onGetSystemCustomerIdCompletedDelegate == null))
        {
            this.onGetSystemCustomerIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemCustomerIdCompleted);
        }
        base.InvokeAsync(this.onBeginGetSystemCustomerIdDelegate, null, this.onEndGetSystemCustomerIdDelegate, this.onGetSystemCustomerIdCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSaveEForm(Therefore.WebAPI.SaveEFormParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSaveEForm(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SaveEFormResponse IThereforeService.EndSaveEForm(System.IAsyncResult result)
    {
        return base.Channel.EndSaveEForm(result);
    }

    private System.IAsyncResult OnBeginSaveEForm(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SaveEFormParams parameters = ((Therefore.WebAPI.SaveEFormParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSaveEForm(parameters, callback, asyncState);
    }

    private object[] OnEndSaveEForm(System.IAsyncResult result)
    {
        Therefore.WebAPI.SaveEFormResponse retVal = ((IThereforeService)(this)).EndSaveEForm(result);
        return new object[] {
                retVal};
    }

    private void OnSaveEFormCompleted(object state)
    {
        if ((this.SaveEFormCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SaveEFormCompleted(this, new SaveEFormCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SaveEFormAsync(Therefore.WebAPI.SaveEFormParams parameters)
    {
        this.SaveEFormAsync(parameters, null);
    }

    public void SaveEFormAsync(Therefore.WebAPI.SaveEFormParams parameters, object userState)
    {
        if ((this.onBeginSaveEFormDelegate == null))
        {
            this.onBeginSaveEFormDelegate = new BeginOperationDelegate(this.OnBeginSaveEForm);
        }
        if ((this.onEndSaveEFormDelegate == null))
        {
            this.onEndSaveEFormDelegate = new EndOperationDelegate(this.OnEndSaveEForm);
        }
        if ((this.onSaveEFormCompletedDelegate == null))
        {
            this.onSaveEFormCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEFormCompleted);
        }
        base.InvokeAsync(this.onBeginSaveEFormDelegate, new object[] {
                    parameters}, this.onEndSaveEFormDelegate, this.onSaveEFormCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginDeleteEForm(Therefore.WebAPI.DeleteEFormParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteEForm(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.DeleteEFormResponse IThereforeService.EndDeleteEForm(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteEForm(result);
    }

    private System.IAsyncResult OnBeginDeleteEForm(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.DeleteEFormParams parameters = ((Therefore.WebAPI.DeleteEFormParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginDeleteEForm(parameters, callback, asyncState);
    }

    private object[] OnEndDeleteEForm(System.IAsyncResult result)
    {
        Therefore.WebAPI.DeleteEFormResponse retVal = ((IThereforeService)(this)).EndDeleteEForm(result);
        return new object[] {
                retVal};
    }

    private void OnDeleteEFormCompleted(object state)
    {
        if ((this.DeleteEFormCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteEFormCompleted(this, new DeleteEFormCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DeleteEFormAsync(Therefore.WebAPI.DeleteEFormParams parameters)
    {
        this.DeleteEFormAsync(parameters, null);
    }

    public void DeleteEFormAsync(Therefore.WebAPI.DeleteEFormParams parameters, object userState)
    {
        if ((this.onBeginDeleteEFormDelegate == null))
        {
            this.onBeginDeleteEFormDelegate = new BeginOperationDelegate(this.OnBeginDeleteEForm);
        }
        if ((this.onEndDeleteEFormDelegate == null))
        {
            this.onEndDeleteEFormDelegate = new EndOperationDelegate(this.OnEndDeleteEForm);
        }
        if ((this.onDeleteEFormCompletedDelegate == null))
        {
            this.onDeleteEFormCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEFormCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteEFormDelegate, new object[] {
                    parameters}, this.onEndDeleteEFormDelegate, this.onDeleteEFormCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetEForm(Therefore.WebAPI.GetEFormParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetEForm(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetEFormResponse IThereforeService.EndGetEForm(System.IAsyncResult result)
    {
        return base.Channel.EndGetEForm(result);
    }

    private System.IAsyncResult OnBeginGetEForm(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetEFormParams parameters = ((Therefore.WebAPI.GetEFormParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetEForm(parameters, callback, asyncState);
    }

    private object[] OnEndGetEForm(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetEFormResponse retVal = ((IThereforeService)(this)).EndGetEForm(result);
        return new object[] {
                retVal};
    }

    private void OnGetEFormCompleted(object state)
    {
        if ((this.GetEFormCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetEFormCompleted(this, new GetEFormCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetEFormAsync(Therefore.WebAPI.GetEFormParams parameters)
    {
        this.GetEFormAsync(parameters, null);
    }

    public void GetEFormAsync(Therefore.WebAPI.GetEFormParams parameters, object userState)
    {
        if ((this.onBeginGetEFormDelegate == null))
        {
            this.onBeginGetEFormDelegate = new BeginOperationDelegate(this.OnBeginGetEForm);
        }
        if ((this.onEndGetEFormDelegate == null))
        {
            this.onEndGetEFormDelegate = new EndOperationDelegate(this.OnEndGetEForm);
        }
        if ((this.onGetEFormCompletedDelegate == null))
        {
            this.onGetEFormCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEFormCompleted);
        }
        base.InvokeAsync(this.onBeginGetEFormDelegate, new object[] {
                    parameters}, this.onEndGetEFormDelegate, this.onGetEFormCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSubmitEForm(Therefore.WebAPI.SubmitEFormParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSubmitEForm(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SubmitEFormResponse IThereforeService.EndSubmitEForm(System.IAsyncResult result)
    {
        return base.Channel.EndSubmitEForm(result);
    }

    private System.IAsyncResult OnBeginSubmitEForm(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SubmitEFormParams parameters = ((Therefore.WebAPI.SubmitEFormParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSubmitEForm(parameters, callback, asyncState);
    }

    private object[] OnEndSubmitEForm(System.IAsyncResult result)
    {
        Therefore.WebAPI.SubmitEFormResponse retVal = ((IThereforeService)(this)).EndSubmitEForm(result);
        return new object[] {
                retVal};
    }

    private void OnSubmitEFormCompleted(object state)
    {
        if ((this.SubmitEFormCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SubmitEFormCompleted(this, new SubmitEFormCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SubmitEFormAsync(Therefore.WebAPI.SubmitEFormParams parameters)
    {
        this.SubmitEFormAsync(parameters, null);
    }

    public void SubmitEFormAsync(Therefore.WebAPI.SubmitEFormParams parameters, object userState)
    {
        if ((this.onBeginSubmitEFormDelegate == null))
        {
            this.onBeginSubmitEFormDelegate = new BeginOperationDelegate(this.OnBeginSubmitEForm);
        }
        if ((this.onEndSubmitEFormDelegate == null))
        {
            this.onEndSubmitEFormDelegate = new EndOperationDelegate(this.OnEndSubmitEForm);
        }
        if ((this.onSubmitEFormCompletedDelegate == null))
        {
            this.onSubmitEFormCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitEFormCompleted);
        }
        base.InvokeAsync(this.onBeginSubmitEFormDelegate, new object[] {
                    parameters}, this.onEndSubmitEFormDelegate, this.onSubmitEFormCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetKeywordsByKeyDic(Therefore.WebAPI.GetKeywordsByKeyDicParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetKeywordsByKeyDic(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetKeywordsByFieldNoResponse IThereforeService.EndGetKeywordsByKeyDic(System.IAsyncResult result)
    {
        return base.Channel.EndGetKeywordsByKeyDic(result);
    }

    private System.IAsyncResult OnBeginGetKeywordsByKeyDic(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetKeywordsByKeyDicParams parameters = ((Therefore.WebAPI.GetKeywordsByKeyDicParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetKeywordsByKeyDic(parameters, callback, asyncState);
    }

    private object[] OnEndGetKeywordsByKeyDic(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetKeywordsByFieldNoResponse retVal = ((IThereforeService)(this)).EndGetKeywordsByKeyDic(result);
        return new object[] {
                retVal};
    }

    private void OnGetKeywordsByKeyDicCompleted(object state)
    {
        if ((this.GetKeywordsByKeyDicCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetKeywordsByKeyDicCompleted(this, new GetKeywordsByKeyDicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetKeywordsByKeyDicAsync(Therefore.WebAPI.GetKeywordsByKeyDicParams parameters)
    {
        this.GetKeywordsByKeyDicAsync(parameters, null);
    }

    public void GetKeywordsByKeyDicAsync(Therefore.WebAPI.GetKeywordsByKeyDicParams parameters, object userState)
    {
        if ((this.onBeginGetKeywordsByKeyDicDelegate == null))
        {
            this.onBeginGetKeywordsByKeyDicDelegate = new BeginOperationDelegate(this.OnBeginGetKeywordsByKeyDic);
        }
        if ((this.onEndGetKeywordsByKeyDicDelegate == null))
        {
            this.onEndGetKeywordsByKeyDicDelegate = new EndOperationDelegate(this.OnEndGetKeywordsByKeyDic);
        }
        if ((this.onGetKeywordsByKeyDicCompletedDelegate == null))
        {
            this.onGetKeywordsByKeyDicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKeywordsByKeyDicCompleted);
        }
        base.InvokeAsync(this.onBeginGetKeywordsByKeyDicDelegate, new object[] {
                    parameters}, this.onEndGetKeywordsByKeyDicDelegate, this.onGetKeywordsByKeyDicCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginUploadEFormFile(byte[] Uploading, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUploadEFormFile(Uploading, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.UploadEFormFileResponse IThereforeService.EndUploadEFormFile(System.IAsyncResult result)
    {
        return base.Channel.EndUploadEFormFile(result);
    }

    private System.IAsyncResult OnBeginUploadEFormFile(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        byte[] Uploading = ((byte[])(inValues[0]));
        return ((IThereforeService)(this)).BeginUploadEFormFile(Uploading, callback, asyncState);
    }

    private object[] OnEndUploadEFormFile(System.IAsyncResult result)
    {
        Therefore.WebAPI.UploadEFormFileResponse retVal = ((IThereforeService)(this)).EndUploadEFormFile(result);
        return new object[] {
                retVal};
    }

    private void OnUploadEFormFileCompleted(object state)
    {
        if ((this.UploadEFormFileCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UploadEFormFileCompleted(this, new UploadEFormFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void UploadEFormFileAsync(byte[] Uploading)
    {
        this.UploadEFormFileAsync(Uploading, null);
    }

    public void UploadEFormFileAsync(byte[] Uploading, object userState)
    {
        if ((this.onBeginUploadEFormFileDelegate == null))
        {
            this.onBeginUploadEFormFileDelegate = new BeginOperationDelegate(this.OnBeginUploadEFormFile);
        }
        if ((this.onEndUploadEFormFileDelegate == null))
        {
            this.onEndUploadEFormFileDelegate = new EndOperationDelegate(this.OnEndUploadEFormFile);
        }
        if ((this.onUploadEFormFileCompletedDelegate == null))
        {
            this.onUploadEFormFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadEFormFileCompleted);
        }
        base.InvokeAsync(this.onBeginUploadEFormFileDelegate, new object[] {
                    Uploading}, this.onEndUploadEFormFileDelegate, this.onUploadEFormFileCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetUploadedEFormFile(string sFileId, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetUploadedEFormFile(sFileId, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    byte[] IThereforeService.EndGetUploadedEFormFile(System.IAsyncResult result)
    {
        return base.Channel.EndGetUploadedEFormFile(result);
    }

    private System.IAsyncResult OnBeginGetUploadedEFormFile(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string sFileId = ((string)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetUploadedEFormFile(sFileId, callback, asyncState);
    }

    private object[] OnEndGetUploadedEFormFile(System.IAsyncResult result)
    {
        byte[] retVal = ((IThereforeService)(this)).EndGetUploadedEFormFile(result);
        return new object[] {
                retVal};
    }

    private void OnGetUploadedEFormFileCompleted(object state)
    {
        if ((this.GetUploadedEFormFileCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetUploadedEFormFileCompleted(this, new GetUploadedEFormFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetUploadedEFormFileAsync(string sFileId)
    {
        this.GetUploadedEFormFileAsync(sFileId, null);
    }

    public void GetUploadedEFormFileAsync(string sFileId, object userState)
    {
        if ((this.onBeginGetUploadedEFormFileDelegate == null))
        {
            this.onBeginGetUploadedEFormFileDelegate = new BeginOperationDelegate(this.OnBeginGetUploadedEFormFile);
        }
        if ((this.onEndGetUploadedEFormFileDelegate == null))
        {
            this.onEndGetUploadedEFormFileDelegate = new EndOperationDelegate(this.OnEndGetUploadedEFormFile);
        }
        if ((this.onGetUploadedEFormFileCompletedDelegate == null))
        {
            this.onGetUploadedEFormFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUploadedEFormFileCompleted);
        }
        base.InvokeAsync(this.onBeginGetUploadedEFormFileDelegate, new object[] {
                    sFileId}, this.onEndGetUploadedEFormFileDelegate, this.onGetUploadedEFormFileCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginSaveEFormDefaultSubmission(Therefore.WebAPI.SaveEFormDefaultSubmissionParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSaveEFormDefaultSubmission(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.SaveEFormDefaultSubmissionResponse IThereforeService.EndSaveEFormDefaultSubmission(System.IAsyncResult result)
    {
        return base.Channel.EndSaveEFormDefaultSubmission(result);
    }

    private System.IAsyncResult OnBeginSaveEFormDefaultSubmission(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.SaveEFormDefaultSubmissionParams parameters = ((Therefore.WebAPI.SaveEFormDefaultSubmissionParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginSaveEFormDefaultSubmission(parameters, callback, asyncState);
    }

    private object[] OnEndSaveEFormDefaultSubmission(System.IAsyncResult result)
    {
        Therefore.WebAPI.SaveEFormDefaultSubmissionResponse retVal = ((IThereforeService)(this)).EndSaveEFormDefaultSubmission(result);
        return new object[] {
                retVal};
    }

    private void OnSaveEFormDefaultSubmissionCompleted(object state)
    {
        if ((this.SaveEFormDefaultSubmissionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SaveEFormDefaultSubmissionCompleted(this, new SaveEFormDefaultSubmissionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void SaveEFormDefaultSubmissionAsync(Therefore.WebAPI.SaveEFormDefaultSubmissionParams parameters)
    {
        this.SaveEFormDefaultSubmissionAsync(parameters, null);
    }

    public void SaveEFormDefaultSubmissionAsync(Therefore.WebAPI.SaveEFormDefaultSubmissionParams parameters, object userState)
    {
        if ((this.onBeginSaveEFormDefaultSubmissionDelegate == null))
        {
            this.onBeginSaveEFormDefaultSubmissionDelegate = new BeginOperationDelegate(this.OnBeginSaveEFormDefaultSubmission);
        }
        if ((this.onEndSaveEFormDefaultSubmissionDelegate == null))
        {
            this.onEndSaveEFormDefaultSubmissionDelegate = new EndOperationDelegate(this.OnEndSaveEFormDefaultSubmission);
        }
        if ((this.onSaveEFormDefaultSubmissionCompletedDelegate == null))
        {
            this.onSaveEFormDefaultSubmissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEFormDefaultSubmissionCompleted);
        }
        base.InvokeAsync(this.onBeginSaveEFormDefaultSubmissionDelegate, new object[] {
                    parameters}, this.onEndSaveEFormDefaultSubmissionDelegate, this.onSaveEFormDefaultSubmissionCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IThereforeService.BeginGetFolder(Therefore.WebAPI.GetFolderParams parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetFolder(parameters, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Therefore.WebAPI.GetFolderResponse IThereforeService.EndGetFolder(System.IAsyncResult result)
    {
        return base.Channel.EndGetFolder(result);
    }

    private System.IAsyncResult OnBeginGetFolder(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Therefore.WebAPI.GetFolderParams parameters = ((Therefore.WebAPI.GetFolderParams)(inValues[0]));
        return ((IThereforeService)(this)).BeginGetFolder(parameters, callback, asyncState);
    }

    private object[] OnEndGetFolder(System.IAsyncResult result)
    {
        Therefore.WebAPI.GetFolderResponse retVal = ((IThereforeService)(this)).EndGetFolder(result);
        return new object[] {
                retVal};
    }

    private void OnGetFolderCompleted(object state)
    {
        if ((this.GetFolderCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetFolderCompleted(this, new GetFolderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetFolderAsync(Therefore.WebAPI.GetFolderParams parameters)
    {
        this.GetFolderAsync(parameters, null);
    }

    public void GetFolderAsync(Therefore.WebAPI.GetFolderParams parameters, object userState)
    {
        if ((this.onBeginGetFolderDelegate == null))
        {
            this.onBeginGetFolderDelegate = new BeginOperationDelegate(this.OnBeginGetFolder);
        }
        if ((this.onEndGetFolderDelegate == null))
        {
            this.onEndGetFolderDelegate = new EndOperationDelegate(this.OnEndGetFolder);
        }
        if ((this.onGetFolderCompletedDelegate == null))
        {
            this.onGetFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFolderCompleted);
        }
        base.InvokeAsync(this.onBeginGetFolderDelegate, new object[] {
                    parameters}, this.onEndGetFolderDelegate, this.onGetFolderCompletedDelegate, userState);
    }

    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }

    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }

    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }

    public void OpenAsync()
    {
        this.OpenAsync(null);
    }

    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }

    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }

    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }

    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CloseAsync()
    {
        this.CloseAsync(null);
    }

    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }

    protected override IThereforeService CreateChannel()
    {
        return new ThereforeServiceClientChannel(this);
    }

    private class ThereforeServiceClientChannel : ChannelBase<IThereforeService>, IThereforeService
    {

        public ThereforeServiceClientChannel(System.ServiceModel.ClientBase<IThereforeService> client) :
                base(client)
        {
        }

        public System.IAsyncResult BeginSaveFolder(Therefore.WebAPI.SaveFolderParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SaveFolder", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SaveFolderReponse EndSaveFolder(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SaveFolderReponse _result = ((Therefore.WebAPI.SaveFolderReponse)(base.EndInvoke("SaveFolder", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDeleteFolder(Therefore.WebAPI.DeleteFolderParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("DeleteFolder", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.DeleteFolderResponse EndDeleteFolder(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.DeleteFolderResponse _result = ((Therefore.WebAPI.DeleteFolderResponse)(base.EndInvoke("DeleteFolder", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSetParentFolder(Therefore.WebAPI.SetParentFolderParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SetParentFolder", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SetParentFolderResponse EndSetParentFolder(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SetParentFolderResponse _result = ((Therefore.WebAPI.SetParentFolderResponse)(base.EndInvoke("SetParentFolder", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginQueryDependentFieldsDirect(Therefore.WebAPI.QueryDependentFieldsDirectParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("QueryDependentFieldsDirect", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.QueryDependentFieldsDirectResponse EndQueryDependentFieldsDirect(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.QueryDependentFieldsDirectResponse _result = ((Therefore.WebAPI.QueryDependentFieldsDirectResponse)(base.EndInvoke("QueryDependentFieldsDirect", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetReferencedTableInfo(Therefore.WebAPI.GetReferencedTableInfoParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetReferencedTableInfo", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetReferencedTableInfoResponse EndGetReferencedTableInfo(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetReferencedTableInfoResponse _result = ((Therefore.WebAPI.GetReferencedTableInfoResponse)(base.EndInvoke("GetReferencedTableInfo", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginVerifyReCaptchaToken(Therefore.WebAPI.VerifyReCaptchaParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("VerifyReCaptchaToken", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.VerifyReCaptchaResponse EndVerifyReCaptchaToken(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.VerifyReCaptchaResponse _result = ((Therefore.WebAPI.VerifyReCaptchaResponse)(base.EndInvoke("VerifyReCaptchaToken", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSaveEFormDraft(Therefore.WebAPI.SaveEFormDraftParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SaveEFormDraft", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SaveEFormDraftResponse EndSaveEFormDraft(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SaveEFormDraftResponse _result = ((Therefore.WebAPI.SaveEFormDraftResponse)(base.EndInvoke("SaveEFormDraft", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSearchEFormSubmission(Therefore.WebAPI.SearchEFormSubmissionParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SearchEFormSubmission", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SearchEFormSubmissionResponse EndSearchEFormSubmission(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SearchEFormSubmissionResponse _result = ((Therefore.WebAPI.SearchEFormSubmissionResponse)(base.EndInvoke("SearchEFormSubmission", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginClearLocalCache(Therefore.WebAPI.ClearLocalCacheParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ClearLocalCache", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ClearLocalCacheResponse EndClearLocalCache(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ClearLocalCacheResponse _result = ((Therefore.WebAPI.ClearLocalCacheResponse)(base.EndInvoke("ClearLocalCache", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginRenameObject(Therefore.WebAPI.RenameObjectParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("RenameObject", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.RenameObjectResponse EndRenameObject(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.RenameObjectResponse _result = ((Therefore.WebAPI.RenameObjectResponse)(base.EndInvoke("RenameObject", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDeleteEFormDraftSubmission(Therefore.WebAPI.DeleteEFormDraftSubmissionParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("DeleteEFormDraftSubmission", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.DeleteEFormDraftSubmissionResponse EndDeleteEFormDraftSubmission(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.DeleteEFormDraftSubmissionResponse _result = ((Therefore.WebAPI.DeleteEFormDraftSubmissionResponse)(base.EndInvoke("DeleteEFormDraftSubmission", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginCopyEForm(Therefore.WebAPI.CopyEFormParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("CopyEForm", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.CopyEFormResponse EndCopyEForm(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.CopyEFormResponse _result = ((Therefore.WebAPI.CopyEFormResponse)(base.EndInvoke("CopyEForm", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginHandleESignaturePushNotification(Therefore.WebAPI.HandleESignaturePushParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("HandleESignaturePushNotification", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.HandleESignaturePushResponse EndHandleESignaturePushNotification(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.HandleESignaturePushResponse _result = ((Therefore.WebAPI.HandleESignaturePushResponse)(base.EndInvoke("HandleESignaturePushNotification", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetClientDiscoveryInfo(Therefore.WebAPI.GetClientDiscoveryInfoParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetClientDiscoveryInfo", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetClientDiscoveryInfoResponse EndGetClientDiscoveryInfo(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetClientDiscoveryInfoResponse _result = ((Therefore.WebAPI.GetClientDiscoveryInfoResponse)(base.EndInvoke("GetClientDiscoveryInfo", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUploadSessionStart(Therefore.WebAPI.UploadSessionStartParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("UploadSessionStart", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UploadSessionStartResponse EndUploadSessionStart(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UploadSessionStartResponse _result = ((Therefore.WebAPI.UploadSessionStartResponse)(base.EndInvoke("UploadSessionStart", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUploadSessionAppendChunkRaw(byte[] inputStream, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = inputStream;
            System.IAsyncResult _result = base.BeginInvoke("UploadSessionAppendChunkRaw", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UploadSessionAppendChunkRawResponse EndUploadSessionAppendChunkRaw(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UploadSessionAppendChunkRawResponse _result = ((Therefore.WebAPI.UploadSessionAppendChunkRawResponse)(base.EndInvoke("UploadSessionAppendChunkRaw", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginCrossOriginOptionsSupport(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("CrossOriginOptionsSupport", _args, callback, asyncState);
            return _result;
        }

        public void EndCrossOriginOptionsSupport(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("CrossOriginOptionsSupport", _args, result);
        }

        public System.IAsyncResult BeginMoveUserLicense(Therefore.WebAPI.MoveUserLicenseRequest parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("MoveUserLicense", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.MoveUserLicenseResponse EndMoveUserLicense(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.MoveUserLicenseResponse _result = ((Therefore.WebAPI.MoveUserLicenseResponse)(base.EndInvoke("MoveUserLicense", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSignOut(Therefore.WebAPI.SignOutRequest parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SignOut", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SignOutResponse EndSignOut(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SignOutResponse _result = ((Therefore.WebAPI.SignOutResponse)(base.EndInvoke("SignOut", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginAddDictionaryKeyword(Therefore.WebAPI.AddDictionaryKeywordParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("AddDictionaryKeyword", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.AddDictionaryKeywordResponse EndAddDictionaryKeyword(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.AddDictionaryKeywordResponse _result = ((Therefore.WebAPI.AddDictionaryKeywordResponse)(base.EndInvoke("AddDictionaryKeyword", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginAddStreamsToDocument(Therefore.WebAPI.AddStreamsToDocumentParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("AddStreamsToDocument", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.AddStreamsToDocumentResponse EndAddStreamsToDocument(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.AddStreamsToDocumentResponse _result = ((Therefore.WebAPI.AddStreamsToDocumentResponse)(base.EndInvoke("AddStreamsToDocument", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginClaimWorkflowInstance(Therefore.WebAPI.ClaimWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ClaimWorkflowInstance", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ClaimWorkflowInstanceResponse EndClaimWorkflowInstance(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ClaimWorkflowInstanceResponse _result = ((Therefore.WebAPI.ClaimWorkflowInstanceResponse)(base.EndInvoke("ClaimWorkflowInstance", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginCloseCase(Therefore.WebAPI.CloseCaseParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("CloseCase", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.CloseCaseResponse EndCloseCase(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.CloseCaseResponse _result = ((Therefore.WebAPI.CloseCaseResponse)(base.EndInvoke("CloseCase", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginReopenCase(Therefore.WebAPI.ReopenCaseParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ReopenCase", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ReopenCaseResponse EndReopenCase(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ReopenCaseResponse _result = ((Therefore.WebAPI.ReopenCaseResponse)(base.EndInvoke("ReopenCase", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginCompleteTask(Therefore.WebAPI.CompleteTaskParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("CompleteTask", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.CompleteTaskResponse EndCompleteTask(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.CompleteTaskResponse _result = ((Therefore.WebAPI.CompleteTaskResponse)(base.EndInvoke("CompleteTask", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginCreateCase(Therefore.WebAPI.CreateCaseParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("CreateCase", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.CreateCaseResponse EndCreateCase(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.CreateCaseResponse _result = ((Therefore.WebAPI.CreateCaseResponse)(base.EndInvoke("CreateCase", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginPreprocessIndexData(Therefore.WebAPI.PreprocessIndexDataParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("PreprocessIndexData", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.PreprocessIndexDataResponse EndPreprocessIndexData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.PreprocessIndexDataResponse _result = ((Therefore.WebAPI.PreprocessIndexDataResponse)(base.EndInvoke("PreprocessIndexData", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginPreprocessTableRow(Therefore.WebAPI.PreprocessTableRowParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("PreprocessTableRow", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.PreprocessTableRowResponse EndPreprocessTableRow(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.PreprocessTableRowResponse _result = ((Therefore.WebAPI.PreprocessTableRowResponse)(base.EndInvoke("PreprocessTableRow", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginCreateDocument(Therefore.WebAPI.CreateDocumentParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("CreateDocument", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.CreateDocumentResponse EndCreateDocument(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.CreateDocumentResponse _result = ((Therefore.WebAPI.CreateDocumentResponse)(base.EndInvoke("CreateDocument", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginCreateLinkFile(Therefore.WebAPI.CreateLinkFileParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("CreateLinkFile", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.CreateLinkFileResponse EndCreateLinkFile(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.CreateLinkFileResponse _result = ((Therefore.WebAPI.CreateLinkFileResponse)(base.EndInvoke("CreateLinkFile", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDelegateWorkflowInstance(Therefore.WebAPI.DelegateWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("DelegateWorkflowInstance", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.DelegateWorkflowInstanceResponse EndDelegateWorkflowInstance(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.DelegateWorkflowInstanceResponse _result = ((Therefore.WebAPI.DelegateWorkflowInstanceResponse)(base.EndInvoke("DelegateWorkflowInstance", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDeleteCase(Therefore.WebAPI.DeleteCaseParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("DeleteCase", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.DeleteCaseResponse EndDeleteCase(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.DeleteCaseResponse _result = ((Therefore.WebAPI.DeleteCaseResponse)(base.EndInvoke("DeleteCase", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDeleteDictionaryKeyword(Therefore.WebAPI.DeleteDictionaryKeywordParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("DeleteDictionaryKeyword", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.DeleteDictionaryKeywordResponse EndDeleteDictionaryKeyword(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.DeleteDictionaryKeywordResponse _result = ((Therefore.WebAPI.DeleteDictionaryKeywordResponse)(base.EndInvoke("DeleteDictionaryKeyword", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDeleteDocument(Therefore.WebAPI.DeleteDocumentParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("DeleteDocument", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.DeleteDocumentResponse EndDeleteDocument(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.DeleteDocumentResponse _result = ((Therefore.WebAPI.DeleteDocumentResponse)(base.EndInvoke("DeleteDocument", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDeleteTask(Therefore.WebAPI.DeleteTaskParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("DeleteTask", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.DeleteTaskResponse EndDeleteTask(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.DeleteTaskResponse _result = ((Therefore.WebAPI.DeleteTaskResponse)(base.EndInvoke("DeleteTask", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDeleteWorkflowInstance(Therefore.WebAPI.DeleteWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("DeleteWorkflowInstance", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.DeleteWorkflowInstanceResponse EndDeleteWorkflowInstance(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.DeleteWorkflowInstanceResponse _result = ((Therefore.WebAPI.DeleteWorkflowInstanceResponse)(base.EndInvoke("DeleteWorkflowInstance", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDisclaimWorkflowInstance(Therefore.WebAPI.DisclaimWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("DisclaimWorkflowInstance", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.DisclaimWorkflowInstanceResponse EndDisclaimWorkflowInstance(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.DisclaimWorkflowInstanceResponse _result = ((Therefore.WebAPI.DisclaimWorkflowInstanceResponse)(base.EndInvoke("DisclaimWorkflowInstance", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginEraseAllObjects(Therefore.WebAPI.EraseAllObjectsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("EraseAllObjects", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.EraseAllObjectsResponse EndEraseAllObjects(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.EraseAllObjectsResponse _result = ((Therefore.WebAPI.EraseAllObjectsResponse)(base.EndInvoke("EraseAllObjects", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginEraseObjects(Therefore.WebAPI.EraseObjectsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("EraseObjects", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.EraseObjectsResponse EndEraseObjects(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.EraseObjectsResponse _result = ((Therefore.WebAPI.EraseObjectsResponse)(base.EndInvoke("EraseObjects", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteAsyncFullTextQuery(Therefore.WebAPI.ExecuteAsyncFullTextQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteAsyncFullTextQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteAsyncFullTextQueryResponse EndExecuteAsyncFullTextQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteAsyncFullTextQueryResponse _result = ((Therefore.WebAPI.ExecuteAsyncFullTextQueryResponse)(base.EndInvoke("ExecuteAsyncFullTextQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteAsyncMultiQuery(Therefore.WebAPI.ExecuteAsyncMultiQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteAsyncMultiQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteAsyncMultiQueryResponse EndExecuteAsyncMultiQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteAsyncMultiQueryResponse _result = ((Therefore.WebAPI.ExecuteAsyncMultiQueryResponse)(base.EndInvoke("ExecuteAsyncMultiQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteAsyncSingleQuery(Therefore.WebAPI.ExecuteAsyncSingleQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteAsyncSingleQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteAsyncSingleQueryResponse EndExecuteAsyncSingleQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteAsyncSingleQueryResponse _result = ((Therefore.WebAPI.ExecuteAsyncSingleQueryResponse)(base.EndInvoke("ExecuteAsyncSingleQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteFullTextQuery(Therefore.WebAPI.ExecuteFullTextQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteFullTextQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteFullTextQueryResponse EndExecuteFullTextQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteFullTextQueryResponse _result = ((Therefore.WebAPI.ExecuteFullTextQueryResponse)(base.EndInvoke("ExecuteFullTextQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteMultiQuery(Therefore.WebAPI.ExecuteMultiQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteMultiQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteMultiQueryResponse EndExecuteMultiQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteMultiQueryResponse _result = ((Therefore.WebAPI.ExecuteMultiQueryResponse)(base.EndInvoke("ExecuteMultiQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteReport(Therefore.WebAPI.ExecuteReportParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteReport", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteReportResponse EndExecuteReport(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteReportResponse _result = ((Therefore.WebAPI.ExecuteReportResponse)(base.EndInvoke("ExecuteReport", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteSimpleQuery(Therefore.WebAPI.ExecuteSimpleQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteSimpleQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteSimpleQueryResponse EndExecuteSimpleQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteSimpleQueryResponse _result = ((Therefore.WebAPI.ExecuteSimpleQueryResponse)(base.EndInvoke("ExecuteSimpleQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteSingleQuery(Therefore.WebAPI.ExecuteSingleQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteSingleQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteSingleQueryResponse EndExecuteSingleQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteSingleQueryResponse _result = ((Therefore.WebAPI.ExecuteSingleQueryResponse)(base.EndInvoke("ExecuteSingleQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteTaskInfoQuery(Therefore.WebAPI.ExecuteTaskInfoQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteTaskInfoQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteTaskInfoQueryResponse EndExecuteTaskInfoQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteTaskInfoQueryResponse _result = ((Therefore.WebAPI.ExecuteTaskInfoQueryResponse)(base.EndInvoke("ExecuteTaskInfoQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteUsersQuery(Therefore.WebAPI.ExecuteUsersQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteUsersQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteUsersQueryResponse EndExecuteUsersQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteUsersQueryResponse _result = ((Therefore.WebAPI.ExecuteUsersQueryResponse)(base.EndInvoke("ExecuteUsersQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetUserDetails(Therefore.WebAPI.GetUserDetailsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetUserDetails", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetUserDetailsResponse EndGetUserDetails(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetUserDetailsResponse _result = ((Therefore.WebAPI.GetUserDetailsResponse)(base.EndInvoke("GetUserDetails", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteWorkflowQueryForAll(Therefore.WebAPI.ExecuteWorkflowQueryForAllParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteWorkflowQueryForAll", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteWorkflowQueryForAllResponse EndExecuteWorkflowQueryForAll(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteWorkflowQueryForAllResponse _result = ((Therefore.WebAPI.ExecuteWorkflowQueryForAllResponse)(base.EndInvoke("ExecuteWorkflowQueryForAll", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteWorkflowQueryForProcess(Therefore.WebAPI.ExecuteWorkflowQueryForProcessParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteWorkflowQueryForProcess", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteWorkflowQueryForProcessResponse EndExecuteWorkflowQueryForProcess(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteWorkflowQueryForProcessResponse _result = ((Therefore.WebAPI.ExecuteWorkflowQueryForProcessResponse)(base.EndInvoke("ExecuteWorkflowQueryForProcess", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginFillDependentFields(Therefore.WebAPI.FillDependentFieldsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("FillDependentFields", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.FillDependentFieldsResponse EndFillDependentFields(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.FillDependentFieldsResponse _result = ((Therefore.WebAPI.FillDependentFieldsResponse)(base.EndInvoke("FillDependentFields", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginFinishCurrentWorkflowTask(Therefore.WebAPI.FinishCurrentWorkflowTaskParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("FinishCurrentWorkflowTask", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.FinishCurrentWorkflowTaskResponse EndFinishCurrentWorkflowTask(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.FinishCurrentWorkflowTaskResponse _result = ((Therefore.WebAPI.FinishCurrentWorkflowTaskResponse)(base.EndInvoke("FinishCurrentWorkflowTask", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetAllTreeViews(Therefore.WebAPI.GetAllTreeViewsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetAllTreeViews", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetAllTreeViewsResponse EndGetAllTreeViews(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetAllTreeViewsResponse _result = ((Therefore.WebAPI.GetAllTreeViewsResponse)(base.EndInvoke("GetAllTreeViews", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetCase(Therefore.WebAPI.GetCaseParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetCase", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetCaseResponse EndGetCase(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetCaseResponse _result = ((Therefore.WebAPI.GetCaseResponse)(base.EndInvoke("GetCase", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetCaseDefinition(Therefore.WebAPI.GetCaseDefinitionParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetCaseDefinition", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetCaseDefinitionResponse EndGetCaseDefinition(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetCaseDefinitionResponse _result = ((Therefore.WebAPI.GetCaseDefinitionResponse)(base.EndInvoke("GetCaseDefinition", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetCaseDocuments(Therefore.WebAPI.GetCaseDocumentsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetCaseDocuments", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetCaseDocumentsResponse EndGetCaseDocuments(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetCaseDocumentsResponse _result = ((Therefore.WebAPI.GetCaseDocumentsResponse)(base.EndInvoke("GetCaseDocuments", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetCaseHistory(Therefore.WebAPI.GetCaseHistoryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetCaseHistory", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetCaseHistoryResponse EndGetCaseHistory(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetCaseHistoryResponse _result = ((Therefore.WebAPI.GetCaseHistoryResponse)(base.EndInvoke("GetCaseHistory", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetCategoriesTree(Therefore.WebAPI.GetCategoriesTreeParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetCategoriesTree", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetCategoriesTreeResponse EndGetCategoriesTree(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetCategoriesTreeResponse _result = ((Therefore.WebAPI.GetCategoriesTreeResponse)(base.EndInvoke("GetCategoriesTree", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetCategoryInfo(Therefore.WebAPI.GetCategoryInfoParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetCategoryInfo", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetCategoryInfoResponse EndGetCategoryInfo(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetCategoryInfoResponse _result = ((Therefore.WebAPI.GetCategoryInfoResponse)(base.EndInvoke("GetCategoryInfo", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetConnectedUser(Therefore.WebAPI.GetConnectedUserParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetConnectedUser", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetConnectedUserResponse EndGetConnectedUser(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetConnectedUserResponse _result = ((Therefore.WebAPI.GetConnectedUserResponse)(base.EndInvoke("GetConnectedUser", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetConvertedDocStreams(Therefore.WebAPI.GetConvertedDocStreamsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetConvertedDocStreams", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetConvertedDocStreamsResponse EndGetConvertedDocStreams(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetConvertedDocStreamsResponse _result = ((Therefore.WebAPI.GetConvertedDocStreamsResponse)(base.EndInvoke("GetConvertedDocStreams", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetConvertedDocStreamsRaw(Therefore.WebAPI.GetConvertedDocStreamsRawParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetConvertedDocStreamsRaw", _args, callback, asyncState);
            return _result;
        }

        public byte[] EndGetConvertedDocStreamsRaw(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            byte[] _result = ((byte[])(base.EndInvoke("GetConvertedDocStreamsRaw", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetDictionaryInfo(Therefore.WebAPI.GetDictionaryInfoParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetDictionaryInfo", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetDictionaryInfoResponse EndGetDictionaryInfo(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetDictionaryInfoResponse _result = ((Therefore.WebAPI.GetDictionaryInfoResponse)(base.EndInvoke("GetDictionaryInfo", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetDocument(Therefore.WebAPI.GetDocumentParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetDocument", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetDocumentResponse EndGetDocument(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetDocumentResponse _result = ((Therefore.WebAPI.GetDocumentResponse)(base.EndInvoke("GetDocument", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetDocumentCheckoutStatus(Therefore.WebAPI.GetDocumentCheckoutStateParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetDocumentCheckoutStatus", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetDocumentCheckoutStateResponse EndGetDocumentCheckoutStatus(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetDocumentCheckoutStateResponse _result = ((Therefore.WebAPI.GetDocumentCheckoutStateResponse)(base.EndInvoke("GetDocumentCheckoutStatus", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetDocumentIndexData(Therefore.WebAPI.GetDocumentIndexDataParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetDocumentIndexData", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetDocumentIndexDataResponse EndGetDocumentIndexData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetDocumentIndexDataResponse _result = ((Therefore.WebAPI.GetDocumentIndexDataResponse)(base.EndInvoke("GetDocumentIndexData", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetDocumentProperties(Therefore.WebAPI.GetDocumentPropertiesParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetDocumentProperties", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetDocumentPropertiesResponse EndGetDocumentProperties(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetDocumentPropertiesResponse _result = ((Therefore.WebAPI.GetDocumentPropertiesResponse)(base.EndInvoke("GetDocumentProperties", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetDocumentHistory(Therefore.WebAPI.GetDocumentHistoryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetDocumentHistory", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetDocumentHistoryResponse EndGetDocumentHistory(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetDocumentHistoryResponse _result = ((Therefore.WebAPI.GetDocumentHistoryResponse)(base.EndInvoke("GetDocumentHistory", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetDocumentStream(Therefore.WebAPI.GetDocumentStreamParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetDocumentStream", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetDocumentStreamResponse EndGetDocumentStream(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetDocumentStreamResponse _result = ((Therefore.WebAPI.GetDocumentStreamResponse)(base.EndInvoke("GetDocumentStream", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetDocumentStreamRaw(Therefore.WebAPI.GetDocumentStreamRawParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetDocumentStreamRaw", _args, callback, asyncState);
            return _result;
        }

        public byte[] EndGetDocumentStreamRaw(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            byte[] _result = ((byte[])(base.EndInvoke("GetDocumentStreamRaw", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetDomainInfo(Therefore.WebAPI.GetDomainInfoParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetDomainInfo", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetDomainInfoResponse EndGetDomainInfo(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetDomainInfoResponse _result = ((Therefore.WebAPI.GetDomainInfoResponse)(base.EndInvoke("GetDomainInfo", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetKeywordsByFieldNo(Therefore.WebAPI.GetKeywordsByFieldNoParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetKeywordsByFieldNo", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetKeywordsByFieldNoResponse EndGetKeywordsByFieldNo(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetKeywordsByFieldNoResponse _result = ((Therefore.WebAPI.GetKeywordsByFieldNoResponse)(base.EndInvoke("GetKeywordsByFieldNo", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetLinkedObjects(Therefore.WebAPI.GetLinkedObjectsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetLinkedObjects", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetLinkedObjectsResponse EndGetLinkedObjects(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetLinkedObjectsResponse _result = ((Therefore.WebAPI.GetLinkedObjectsResponse)(base.EndInvoke("GetLinkedObjects", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetLinkedWorkflowsForDoc(Therefore.WebAPI.GetLinkedWorkflowsForDocParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetLinkedWorkflowsForDoc", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetLinkedWorkflowsForDocResponse EndGetLinkedWorkflowsForDoc(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetLinkedWorkflowsForDocResponse _result = ((Therefore.WebAPI.GetLinkedWorkflowsForDocResponse)(base.EndInvoke("GetLinkedWorkflowsForDoc", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetNextFullTextQueryRows(Therefore.WebAPI.GetNextFullTextQueryRowsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetNextFullTextQueryRows", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetNextFullTextQueryRowsResponse EndGetNextFullTextQueryRows(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetNextFullTextQueryRowsResponse _result = ((Therefore.WebAPI.GetNextFullTextQueryRowsResponse)(base.EndInvoke("GetNextFullTextQueryRows", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetNextMultiQueryRows(Therefore.WebAPI.GetNextMultiQueryRowsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetNextMultiQueryRows", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetNextMultiQueryRowsResponse EndGetNextMultiQueryRows(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetNextMultiQueryRowsResponse _result = ((Therefore.WebAPI.GetNextMultiQueryRowsResponse)(base.EndInvoke("GetNextMultiQueryRows", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetNextSingleQueryRows(Therefore.WebAPI.GetNextSingleQueryRowsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetNextSingleQueryRows", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetNextSingleQueryRowsResponse EndGetNextSingleQueryRows(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetNextSingleQueryRowsResponse _result = ((Therefore.WebAPI.GetNextSingleQueryRowsResponse)(base.EndInvoke("GetNextSingleQueryRows", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetObjectRights(Therefore.WebAPI.GetObjectRightsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetObjectRights", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetObjectRightsResponse EndGetObjectRights(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetObjectRightsResponse _result = ((Therefore.WebAPI.GetObjectRightsResponse)(base.EndInvoke("GetObjectRights", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetPermissions(Therefore.WebAPI.GetPermissionsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetPermissions", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetPermissionsResponse EndGetPermissions(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetPermissionsResponse _result = ((Therefore.WebAPI.GetPermissionsResponse)(base.EndInvoke("GetPermissions", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetObjects(Therefore.WebAPI.GetObjectsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetObjects", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetObjectsResponse EndGetObjects(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetObjectsResponse _result = ((Therefore.WebAPI.GetObjectsResponse)(base.EndInvoke("GetObjects", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetPermissionConstants(Therefore.WebAPI.GetPermissionConstantsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetPermissionConstants", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetPermissionConstantsResponse EndGetPermissionConstants(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetPermissionConstantsResponse _result = ((Therefore.WebAPI.GetPermissionConstantsResponse)(base.EndInvoke("GetPermissionConstants", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetQuerySpecification(Therefore.WebAPI.QuerySpecificationParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetQuerySpecification", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.QuerySpecificationResponse EndGetQuerySpecification(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.QuerySpecificationResponse _result = ((Therefore.WebAPI.QuerySpecificationResponse)(base.EndInvoke("GetQuerySpecification", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetReportDefinition(Therefore.WebAPI.GetReportDefinitionParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetReportDefinition", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetReportDefinitionResponse EndGetReportDefinition(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetReportDefinitionResponse _result = ((Therefore.WebAPI.GetReportDefinitionResponse)(base.EndInvoke("GetReportDefinition", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetSettingInt(Therefore.WebAPI.GetSettingIntParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetSettingInt", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetSettingIntResponse EndGetSettingInt(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetSettingIntResponse _result = ((Therefore.WebAPI.GetSettingIntResponse)(base.EndInvoke("GetSettingInt", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetSettingString(Therefore.WebAPI.GetSettingStringParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetSettingString", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetSettingStringResponse EndGetSettingString(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetSettingStringResponse _result = ((Therefore.WebAPI.GetSettingStringResponse)(base.EndInvoke("GetSettingString", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetPublicSettingInt(Therefore.WebAPI.GetPublicSettingIntParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetPublicSettingInt", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetPublicSettingIntResponse EndGetPublicSettingInt(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetPublicSettingIntResponse _result = ((Therefore.WebAPI.GetPublicSettingIntResponse)(base.EndInvoke("GetPublicSettingInt", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetPublicSettingString(Therefore.WebAPI.GetPublicSettingStringParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetPublicSettingString", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetPublicSettingStringResponse EndGetPublicSettingString(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetPublicSettingStringResponse _result = ((Therefore.WebAPI.GetPublicSettingStringResponse)(base.EndInvoke("GetPublicSettingString", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetTask(Therefore.WebAPI.GetTaskParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetTask", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetTaskResponse EndGetTask(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetTaskResponse _result = ((Therefore.WebAPI.GetTaskResponse)(base.EndInvoke("GetTask", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetTaskInfo(Therefore.WebAPI.GetTaskInfoParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetTaskInfo", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetTaskInfoResponse EndGetTaskInfo(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetTaskInfoResponse _result = ((Therefore.WebAPI.GetTaskInfoResponse)(base.EndInvoke("GetTaskInfo", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetThumbnail(Therefore.WebAPI.GetThumbnailParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetThumbnail", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetThumbnailResponse EndGetThumbnail(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetThumbnailResponse _result = ((Therefore.WebAPI.GetThumbnailResponse)(base.EndInvoke("GetThumbnail", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetTreeViewChildNodes(Therefore.WebAPI.GetTreeViewChildNodesParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetTreeViewChildNodes", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetTreeViewChildNodesResponse EndGetTreeViewChildNodes(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetTreeViewChildNodesResponse _result = ((Therefore.WebAPI.GetTreeViewChildNodesResponse)(base.EndInvoke("GetTreeViewChildNodes", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetTreeViewNodeDocuments(Therefore.WebAPI.GetTreeViewNodeDocumentsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetTreeViewNodeDocuments", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetTreeViewNodeDocumentsResponse EndGetTreeViewNodeDocuments(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetTreeViewNodeDocumentsResponse _result = ((Therefore.WebAPI.GetTreeViewNodeDocumentsResponse)(base.EndInvoke("GetTreeViewNodeDocuments", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetTreeViewChildNodesAndDocuments(Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetTreeViewChildNodesAndDocuments", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsResponse EndGetTreeViewChildNodesAndDocuments(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsResponse _result = ((Therefore.WebAPI.GetTreeViewChildNodesAndDocumentsResponse)(base.EndInvoke("GetTreeViewChildNodesAndDocuments", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetWebAPIServerVersion(Therefore.WebAPI.GetWebAPIServerVersionParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetWebAPIServerVersion", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetWebAPIServerVersionResponse EndGetWebAPIServerVersion(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetWebAPIServerVersionResponse _result = ((Therefore.WebAPI.GetWebAPIServerVersionResponse)(base.EndInvoke("GetWebAPIServerVersion", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetWorkflowInstance(Therefore.WebAPI.GetWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetWorkflowInstance", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetWorkflowInstanceResponse EndGetWorkflowInstance(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetWorkflowInstanceResponse _result = ((Therefore.WebAPI.GetWorkflowInstanceResponse)(base.EndInvoke("GetWorkflowInstance", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetWorkflowProcess(Therefore.WebAPI.GetWorkflowProcessParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetWorkflowProcess", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetWorkflowProcessResponse EndGetWorkflowProcess(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetWorkflowProcessResponse _result = ((Therefore.WebAPI.GetWorkflowProcessResponse)(base.EndInvoke("GetWorkflowProcess", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginHasPermissions(Therefore.WebAPI.HasPermissionsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("HasPermissions", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.HasPermissionsResponse EndHasPermissions(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.HasPermissionsResponse _result = ((Therefore.WebAPI.HasPermissionsResponse)(base.EndInvoke("HasPermissions", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginLinkDocAndWFInstance(Therefore.WebAPI.LinkDocAndWFInstanceParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("LinkDocAndWFInstance", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.LinkDocAndWFInstanceResponse EndLinkDocAndWFInstance(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.LinkDocAndWFInstanceResponse _result = ((Therefore.WebAPI.LinkDocAndWFInstanceResponse)(base.EndInvoke("LinkDocAndWFInstance", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginLinkDocuments(Therefore.WebAPI.LinkDocumentsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("LinkDocuments", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.LinkDocumentsResponse EndLinkDocuments(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.LinkDocumentsResponse _result = ((Therefore.WebAPI.LinkDocumentsResponse)(base.EndInvoke("LinkDocuments", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginReleaseFullTextQuery(Therefore.WebAPI.ReleaseFullTextQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ReleaseFullTextQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ReleaseFullTextQueryResponse EndReleaseFullTextQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ReleaseFullTextQueryResponse _result = ((Therefore.WebAPI.ReleaseFullTextQueryResponse)(base.EndInvoke("ReleaseFullTextQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginReleaseMultiQuery(Therefore.WebAPI.ReleaseMultiQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ReleaseMultiQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ReleaseMultiQueryResponse EndReleaseMultiQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ReleaseMultiQueryResponse _result = ((Therefore.WebAPI.ReleaseMultiQueryResponse)(base.EndInvoke("ReleaseMultiQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginReleaseSingleQuery(Therefore.WebAPI.ReleaseSingleQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ReleaseSingleQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ReleaseSingleQueryResponse EndReleaseSingleQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ReleaseSingleQueryResponse _result = ((Therefore.WebAPI.ReleaseSingleQueryResponse)(base.EndInvoke("ReleaseSingleQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSaveCaseIndexData(Therefore.WebAPI.SaveCaseIndexDataParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SaveCaseIndexData", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SaveCaseIndexDataResponse EndSaveCaseIndexData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SaveCaseIndexDataResponse _result = ((Therefore.WebAPI.SaveCaseIndexDataResponse)(base.EndInvoke("SaveCaseIndexData", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSaveCaseIndexDataQuick(Therefore.WebAPI.SaveCaseIndexDataQuickParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SaveCaseIndexDataQuick", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SaveCaseIndexDataQuickResponse EndSaveCaseIndexDataQuick(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SaveCaseIndexDataQuickResponse _result = ((Therefore.WebAPI.SaveCaseIndexDataQuickResponse)(base.EndInvoke("SaveCaseIndexDataQuick", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSaveDocumentIndexData(Therefore.WebAPI.SaveDocumentIndexDataParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SaveDocumentIndexData", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SaveDocumentIndexDataResponse EndSaveDocumentIndexData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SaveDocumentIndexDataResponse _result = ((Therefore.WebAPI.SaveDocumentIndexDataResponse)(base.EndInvoke("SaveDocumentIndexData", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSaveDocumentIndexDataQuick(Therefore.WebAPI.SaveDocumentIndexDataQuickParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SaveDocumentIndexDataQuick", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SaveDocumentIndexDataQuickResponse EndSaveDocumentIndexDataQuick(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SaveDocumentIndexDataQuickResponse _result = ((Therefore.WebAPI.SaveDocumentIndexDataQuickResponse)(base.EndInvoke("SaveDocumentIndexDataQuick", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSetChecklistItemWorkflow(Therefore.WebAPI.SetChecklistItemWorkflowParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SetChecklistItemWorkflow", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SetChecklistItemWorkflowResponse EndSetChecklistItemWorkflow(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SetChecklistItemWorkflowResponse _result = ((Therefore.WebAPI.SetChecklistItemWorkflowResponse)(base.EndInvoke("SetChecklistItemWorkflow", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSetTaskStatus(Therefore.WebAPI.SetTaskStatusParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SetTaskStatus", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SetTaskStatusResponse EndSetTaskStatus(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SetTaskStatusResponse _result = ((Therefore.WebAPI.SetTaskStatusResponse)(base.EndInvoke("SetTaskStatus", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSetTextInfoWorkflow(Therefore.WebAPI.SetTextInfoWorkflowParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SetTextInfoWorkflow", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SetTextInfoWorkflowResponse EndSetTextInfoWorkflow(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SetTextInfoWorkflowResponse _result = ((Therefore.WebAPI.SetTextInfoWorkflowResponse)(base.EndInvoke("SetTextInfoWorkflow", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginStartCreateDocumentBatch(Therefore.WebAPI.StartCreateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("StartCreateDocumentBatch", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.StartCreateDocumentBatchResponse EndStartCreateDocumentBatch(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.StartCreateDocumentBatchResponse _result = ((Therefore.WebAPI.StartCreateDocumentBatchResponse)(base.EndInvoke("StartCreateDocumentBatch", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginStartTask(Therefore.WebAPI.StartTaskParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("StartTask", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.StartTaskResponse EndStartTask(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.StartTaskResponse _result = ((Therefore.WebAPI.StartTaskResponse)(base.EndInvoke("StartTask", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginStartUpdateDocumentBatch(Therefore.WebAPI.StartUpdateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("StartUpdateDocumentBatch", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.StartUpdateDocumentBatchResponse EndStartUpdateDocumentBatch(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.StartUpdateDocumentBatchResponse _result = ((Therefore.WebAPI.StartUpdateDocumentBatchResponse)(base.EndInvoke("StartUpdateDocumentBatch", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginStartWorkflowInstance(Therefore.WebAPI.StartWorkflowInstanceParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("StartWorkflowInstance", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.StartWorkflowInstanceResponse EndStartWorkflowInstance(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.StartWorkflowInstanceResponse _result = ((Therefore.WebAPI.StartWorkflowInstanceResponse)(base.EndInvoke("StartWorkflowInstance", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSubmitCreateDocumentBatch(Therefore.WebAPI.SubmitCreateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SubmitCreateDocumentBatch", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SubmitCreateDocumentBatchResponse EndSubmitCreateDocumentBatch(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SubmitCreateDocumentBatchResponse _result = ((Therefore.WebAPI.SubmitCreateDocumentBatchResponse)(base.EndInvoke("SubmitCreateDocumentBatch", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSubmitUpdateDocumentBatch(Therefore.WebAPI.SubmitUpdateDocumentBatchParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SubmitUpdateDocumentBatch", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SubmitUpdateDocumentBatchResponse EndSubmitUpdateDocumentBatch(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SubmitUpdateDocumentBatchResponse _result = ((Therefore.WebAPI.SubmitUpdateDocumentBatchResponse)(base.EndInvoke("SubmitUpdateDocumentBatch", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUnlinkDocAndWFInstance(Therefore.WebAPI.UnlinkDocAndWFInstanceParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("UnlinkDocAndWFInstance", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UnlinkDocAndWFInstanceResponse EndUnlinkDocAndWFInstance(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UnlinkDocAndWFInstanceResponse _result = ((Therefore.WebAPI.UnlinkDocAndWFInstanceResponse)(base.EndInvoke("UnlinkDocAndWFInstance", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUnlinkDocuments(Therefore.WebAPI.UnlinkDocumentsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("UnlinkDocuments", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UnlinkDocumentsResponse EndUnlinkDocuments(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UnlinkDocumentsResponse _result = ((Therefore.WebAPI.UnlinkDocumentsResponse)(base.EndInvoke("UnlinkDocuments", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUpdateDictionaryKeyword(Therefore.WebAPI.UpdateDictionaryKeywordParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("UpdateDictionaryKeyword", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UpdateDictionaryKeywordResponse EndUpdateDictionaryKeyword(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UpdateDictionaryKeywordResponse _result = ((Therefore.WebAPI.UpdateDictionaryKeywordResponse)(base.EndInvoke("UpdateDictionaryKeyword", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUpdateDocument(Therefore.WebAPI.UpdateDocumentParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("UpdateDocument", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UpdateDocumentResponse EndUpdateDocument(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UpdateDocumentResponse _result = ((Therefore.WebAPI.UpdateDocumentResponse)(base.EndInvoke("UpdateDocument", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUpdateTask(Therefore.WebAPI.UpdateTaskParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("UpdateTask", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UpdateTaskResponse EndUpdateTask(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UpdateTaskResponse _result = ((Therefore.WebAPI.UpdateTaskResponse)(base.EndInvoke("UpdateTask", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUpdateTaskComment(Therefore.WebAPI.UpdateTaskCommentParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("UpdateTaskComment", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UpdateTaskCommentResponse EndUpdateTaskComment(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UpdateTaskCommentResponse _result = ((Therefore.WebAPI.UpdateTaskCommentResponse)(base.EndInvoke("UpdateTaskComment", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUploadDocStreamToBatch(Therefore.WebAPI.UploadDocStreamToBatchParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("UploadDocStreamToBatch", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UploadDocStreamToBatchResponse EndUploadDocStreamToBatch(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UploadDocStreamToBatchResponse _result = ((Therefore.WebAPI.UploadDocStreamToBatchResponse)(base.EndInvoke("UploadDocStreamToBatch", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginExecuteDependentFieldsQuery(Therefore.WebAPI.ExecuteDependentFieldsQueryParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ExecuteDependentFieldsQuery", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ExecuteDependentFieldsQueryResponse EndExecuteDependentFieldsQuery(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ExecuteDependentFieldsQueryResponse _result = ((Therefore.WebAPI.ExecuteDependentFieldsQueryResponse)(base.EndInvoke("ExecuteDependentFieldsQuery", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginValidateKeywords(Therefore.WebAPI.ValidateKeywordsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ValidateKeywords", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ValidateKeywordsResponse EndValidateKeywords(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ValidateKeywordsResponse _result = ((Therefore.WebAPI.ValidateKeywordsResponse)(base.EndInvoke("ValidateKeywords", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetConnectionToken(Therefore.WebAPI.GetConnectionTokenParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetConnectionToken", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetConnectionTokenResponse EndGetConnectionToken(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetConnectionTokenResponse _result = ((Therefore.WebAPI.GetConnectionTokenResponse)(base.EndInvoke("GetConnectionToken", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetConnectionTokenFromADFSToken(Therefore.WebAPI.GetConnectionTokenFromADFSTokenParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetConnectionTokenFromADFSToken", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetConnectionTokenFromADFSTokenResponse EndGetConnectionTokenFromADFSToken(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetConnectionTokenFromADFSTokenResponse _result = ((Therefore.WebAPI.GetConnectionTokenFromADFSTokenResponse)(base.EndInvoke("GetConnectionTokenFromADFSToken", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetJWTToken(Therefore.WebAPI.GetJWTTokenParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetJWTToken", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetJWTTokenResponse EndGetJWTToken(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetJWTTokenResponse _result = ((Therefore.WebAPI.GetJWTTokenResponse)(base.EndInvoke("GetJWTToken", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginClearWorkflowInstanceErrors(Therefore.WebAPI.ClearWorkflowInstanceErrorsParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("ClearWorkflowInstanceErrors", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.ClearWorkflowInstanceErrorsResponse EndClearWorkflowInstanceErrors(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.ClearWorkflowInstanceErrorsResponse _result = ((Therefore.WebAPI.ClearWorkflowInstanceErrorsResponse)(base.EndInvoke("ClearWorkflowInstanceErrors", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginCheckOutDocument(Therefore.WebAPI.CheckOutDocumentParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("CheckOutDocument", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.CheckOutDocumentResponse EndCheckOutDocument(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.CheckOutDocumentResponse _result = ((Therefore.WebAPI.CheckOutDocumentResponse)(base.EndInvoke("CheckOutDocument", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginTestCheckOutDocument(Therefore.WebAPI.TestCheckOutDocumentParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("TestCheckOutDocument", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.TestCheckOutDocumentResponse EndTestCheckOutDocument(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.TestCheckOutDocumentResponse _result = ((Therefore.WebAPI.TestCheckOutDocumentResponse)(base.EndInvoke("TestCheckOutDocument", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginCheckInDocument(Therefore.WebAPI.CheckInDocumentParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("CheckInDocument", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.CheckInDocumentResponse EndCheckInDocument(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.CheckInDocumentResponse _result = ((Therefore.WebAPI.CheckInDocumentResponse)(base.EndInvoke("CheckInDocument", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUndoCheckOutDocument(Therefore.WebAPI.UndoCheckOutDocumentParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("UndoCheckOutDocument", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UndoCheckOutDocumentResponse EndUndoCheckOutDocument(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UndoCheckOutDocumentResponse _result = ((Therefore.WebAPI.UndoCheckOutDocumentResponse)(base.EndInvoke("UndoCheckOutDocument", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetSystemCustomerId(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetSystemCustomerId", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetSystemCustomerIdResponse EndGetSystemCustomerId(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetSystemCustomerIdResponse _result = ((Therefore.WebAPI.GetSystemCustomerIdResponse)(base.EndInvoke("GetSystemCustomerId", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSaveEForm(Therefore.WebAPI.SaveEFormParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SaveEForm", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SaveEFormResponse EndSaveEForm(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SaveEFormResponse _result = ((Therefore.WebAPI.SaveEFormResponse)(base.EndInvoke("SaveEForm", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDeleteEForm(Therefore.WebAPI.DeleteEFormParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("DeleteEForm", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.DeleteEFormResponse EndDeleteEForm(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.DeleteEFormResponse _result = ((Therefore.WebAPI.DeleteEFormResponse)(base.EndInvoke("DeleteEForm", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetEForm(Therefore.WebAPI.GetEFormParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetEForm", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetEFormResponse EndGetEForm(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetEFormResponse _result = ((Therefore.WebAPI.GetEFormResponse)(base.EndInvoke("GetEForm", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSubmitEForm(Therefore.WebAPI.SubmitEFormParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SubmitEForm", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SubmitEFormResponse EndSubmitEForm(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SubmitEFormResponse _result = ((Therefore.WebAPI.SubmitEFormResponse)(base.EndInvoke("SubmitEForm", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetKeywordsByKeyDic(Therefore.WebAPI.GetKeywordsByKeyDicParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetKeywordsByKeyDic", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetKeywordsByFieldNoResponse EndGetKeywordsByKeyDic(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetKeywordsByFieldNoResponse _result = ((Therefore.WebAPI.GetKeywordsByFieldNoResponse)(base.EndInvoke("GetKeywordsByKeyDic", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginUploadEFormFile(byte[] Uploading, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = Uploading;
            System.IAsyncResult _result = base.BeginInvoke("UploadEFormFile", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.UploadEFormFileResponse EndUploadEFormFile(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.UploadEFormFileResponse _result = ((Therefore.WebAPI.UploadEFormFileResponse)(base.EndInvoke("UploadEFormFile", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetUploadedEFormFile(string sFileId, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = sFileId;
            System.IAsyncResult _result = base.BeginInvoke("GetUploadedEFormFile", _args, callback, asyncState);
            return _result;
        }

        public byte[] EndGetUploadedEFormFile(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            byte[] _result = ((byte[])(base.EndInvoke("GetUploadedEFormFile", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginSaveEFormDefaultSubmission(Therefore.WebAPI.SaveEFormDefaultSubmissionParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("SaveEFormDefaultSubmission", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.SaveEFormDefaultSubmissionResponse EndSaveEFormDefaultSubmission(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.SaveEFormDefaultSubmissionResponse _result = ((Therefore.WebAPI.SaveEFormDefaultSubmissionResponse)(base.EndInvoke("SaveEFormDefaultSubmission", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetFolder(Therefore.WebAPI.GetFolderParams parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetFolder", _args, callback, asyncState);
            return _result;
        }

        public Therefore.WebAPI.GetFolderResponse EndGetFolder(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Therefore.WebAPI.GetFolderResponse _result = ((Therefore.WebAPI.GetFolderResponse)(base.EndInvoke("GetFolder", _args, result)));
            return _result;
        }
    }
}
