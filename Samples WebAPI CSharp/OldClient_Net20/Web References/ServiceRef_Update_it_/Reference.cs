//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace OldClient_Net20.ServiceRef_Update_it_ {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://www.w3.org/ns/ws-policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ThereforeWS0001_SoapUserPassword", Namespace="http://schemas.therefore.net/webservices/interop/v0001/messages")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSIndexDataBase))]
    public partial class ThereforeWS0001_SoapUserPassword : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartCreateDocumentBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocStreamToBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitCreateDocumentBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStreamsToDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartUpdateDocumentBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitUpdateDocumentBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FillDependentFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentIndexDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDocumentIndexDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateLinkFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConvertedDocStreamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentCheckoutStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThumbnailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSimpleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuerySpecificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSingleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteAsyncSingleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextSingleQueryRowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseSingleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteMultiQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteAsyncMultiQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextMultiQueryRowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseMultiQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteFullTextQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteAsyncFullTextQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextFullTextQueryRowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseFullTextQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoriesTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTreeViewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeViewChildNodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeViewNodeDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectedUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteUsersQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebAPIServerVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermissionConstantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCaseIndexDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteWorkflowQueryForProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteWorkflowQueryForAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkflowProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClaimWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisclaimWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelegateWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishCurrentWorkflowTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetChecklistItemWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTextInfoWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlinkDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkDocAndWFInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlinkDocAndWFInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedWorkflowsForDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTaskStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaskCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteTaskInfoQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettingStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettingIntOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeywordsByFieldNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDictionaryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDictionaryKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDictionaryKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDictionaryKeywordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ThereforeWS0001_SoapUserPassword() {
            this.Url = global::OldClient_Net20.Properties.Settings.Default.OldClient_Net20_ServiceRef_Update_it__ThereforeService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateDocumentCompletedEventHandler CreateDocumentCompleted;
        
        /// <remarks/>
        public event StartCreateDocumentBatchCompletedEventHandler StartCreateDocumentBatchCompleted;
        
        /// <remarks/>
        public event UploadDocStreamToBatchCompletedEventHandler UploadDocStreamToBatchCompleted;
        
        /// <remarks/>
        public event SubmitCreateDocumentBatchCompletedEventHandler SubmitCreateDocumentBatchCompleted;
        
        /// <remarks/>
        public event UpdateDocumentCompletedEventHandler UpdateDocumentCompleted;
        
        /// <remarks/>
        public event AddStreamsToDocumentCompletedEventHandler AddStreamsToDocumentCompleted;
        
        /// <remarks/>
        public event StartUpdateDocumentBatchCompletedEventHandler StartUpdateDocumentBatchCompleted;
        
        /// <remarks/>
        public event SubmitUpdateDocumentBatchCompletedEventHandler SubmitUpdateDocumentBatchCompleted;
        
        /// <remarks/>
        public event GetCategoryInfoCompletedEventHandler GetCategoryInfoCompleted;
        
        /// <remarks/>
        public event FillDependentFieldsCompletedEventHandler FillDependentFieldsCompleted;
        
        /// <remarks/>
        public event GetDocumentIndexDataCompletedEventHandler GetDocumentIndexDataCompleted;
        
        /// <remarks/>
        public event SaveDocumentIndexDataCompletedEventHandler SaveDocumentIndexDataCompleted;
        
        /// <remarks/>
        public event CreateLinkFileCompletedEventHandler CreateLinkFileCompleted;
        
        /// <remarks/>
        public event GetDocumentCompletedEventHandler GetDocumentCompleted;
        
        /// <remarks/>
        public event GetDocumentStreamCompletedEventHandler GetDocumentStreamCompleted;
        
        /// <remarks/>
        public event GetConvertedDocStreamsCompletedEventHandler GetConvertedDocStreamsCompleted;
        
        /// <remarks/>
        public event GetDocumentCheckoutStatusCompletedEventHandler GetDocumentCheckoutStatusCompleted;
        
        /// <remarks/>
        public event GetThumbnailCompletedEventHandler GetThumbnailCompleted;
        
        /// <remarks/>
        public event GetDocumentPropertiesCompletedEventHandler GetDocumentPropertiesCompleted;
        
        /// <remarks/>
        public event DeleteDocumentCompletedEventHandler DeleteDocumentCompleted;
        
        /// <remarks/>
        public event ExecuteSimpleQueryCompletedEventHandler ExecuteSimpleQueryCompleted;
        
        /// <remarks/>
        public event GetQuerySpecificationCompletedEventHandler GetQuerySpecificationCompleted;
        
        /// <remarks/>
        public event ExecuteSingleQueryCompletedEventHandler ExecuteSingleQueryCompleted;
        
        /// <remarks/>
        public event ExecuteAsyncSingleQueryCompletedEventHandler ExecuteAsyncSingleQueryCompleted;
        
        /// <remarks/>
        public event GetNextSingleQueryRowsCompletedEventHandler GetNextSingleQueryRowsCompleted;
        
        /// <remarks/>
        public event ReleaseSingleQueryCompletedEventHandler ReleaseSingleQueryCompleted;
        
        /// <remarks/>
        public event ExecuteMultiQueryCompletedEventHandler ExecuteMultiQueryCompleted;
        
        /// <remarks/>
        public event ExecuteAsyncMultiQueryCompletedEventHandler ExecuteAsyncMultiQueryCompleted;
        
        /// <remarks/>
        public event GetNextMultiQueryRowsCompletedEventHandler GetNextMultiQueryRowsCompleted;
        
        /// <remarks/>
        public event ReleaseMultiQueryCompletedEventHandler ReleaseMultiQueryCompleted;
        
        /// <remarks/>
        public event ExecuteFullTextQueryCompletedEventHandler ExecuteFullTextQueryCompleted;
        
        /// <remarks/>
        public event ExecuteAsyncFullTextQueryCompletedEventHandler ExecuteAsyncFullTextQueryCompleted;
        
        /// <remarks/>
        public event GetNextFullTextQueryRowsCompletedEventHandler GetNextFullTextQueryRowsCompleted;
        
        /// <remarks/>
        public event ReleaseFullTextQueryCompletedEventHandler ReleaseFullTextQueryCompleted;
        
        /// <remarks/>
        public event GetCategoriesTreeCompletedEventHandler GetCategoriesTreeCompleted;
        
        /// <remarks/>
        public event GetDomainInfoCompletedEventHandler GetDomainInfoCompleted;
        
        /// <remarks/>
        public event GetAllTreeViewsCompletedEventHandler GetAllTreeViewsCompleted;
        
        /// <remarks/>
        public event GetTreeViewChildNodesCompletedEventHandler GetTreeViewChildNodesCompleted;
        
        /// <remarks/>
        public event GetTreeViewNodeDocumentsCompletedEventHandler GetTreeViewNodeDocumentsCompleted;
        
        /// <remarks/>
        public event GetConnectedUserCompletedEventHandler GetConnectedUserCompleted;
        
        /// <remarks/>
        public event ExecuteUsersQueryCompletedEventHandler ExecuteUsersQueryCompleted;
        
        /// <remarks/>
        public event GetWebAPIServerVersionCompletedEventHandler GetWebAPIServerVersionCompleted;
        
        /// <remarks/>
        public event HasPermissionsCompletedEventHandler HasPermissionsCompleted;
        
        /// <remarks/>
        public event GetObjectsCompletedEventHandler GetObjectsCompleted;
        
        /// <remarks/>
        public event GetObjectRightsCompletedEventHandler GetObjectRightsCompleted;
        
        /// <remarks/>
        public event GetPermissionConstantsCompletedEventHandler GetPermissionConstantsCompleted;
        
        /// <remarks/>
        public event CreateCaseCompletedEventHandler CreateCaseCompleted;
        
        /// <remarks/>
        public event GetCaseCompletedEventHandler GetCaseCompleted;
        
        /// <remarks/>
        public event SaveCaseIndexDataCompletedEventHandler SaveCaseIndexDataCompleted;
        
        /// <remarks/>
        public event DeleteCaseCompletedEventHandler DeleteCaseCompleted;
        
        /// <remarks/>
        public event GetCaseDefinitionCompletedEventHandler GetCaseDefinitionCompleted;
        
        /// <remarks/>
        public event GetCaseDocumentsCompletedEventHandler GetCaseDocumentsCompleted;
        
        /// <remarks/>
        public event GetCaseHistoryCompletedEventHandler GetCaseHistoryCompleted;
        
        /// <remarks/>
        public event ExecuteWorkflowQueryForProcessCompletedEventHandler ExecuteWorkflowQueryForProcessCompleted;
        
        /// <remarks/>
        public event ExecuteWorkflowQueryForAllCompletedEventHandler ExecuteWorkflowQueryForAllCompleted;
        
        /// <remarks/>
        public event GetWorkflowProcessCompletedEventHandler GetWorkflowProcessCompleted;
        
        /// <remarks/>
        public event GetWorkflowInstanceCompletedEventHandler GetWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event StartWorkflowInstanceCompletedEventHandler StartWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event ClaimWorkflowInstanceCompletedEventHandler ClaimWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event DisclaimWorkflowInstanceCompletedEventHandler DisclaimWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event DelegateWorkflowInstanceCompletedEventHandler DelegateWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event DeleteWorkflowInstanceCompletedEventHandler DeleteWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event FinishCurrentWorkflowTaskCompletedEventHandler FinishCurrentWorkflowTaskCompleted;
        
        /// <remarks/>
        public event SetChecklistItemWorkflowCompletedEventHandler SetChecklistItemWorkflowCompleted;
        
        /// <remarks/>
        public event SetTextInfoWorkflowCompletedEventHandler SetTextInfoWorkflowCompleted;
        
        /// <remarks/>
        public event LinkDocumentsCompletedEventHandler LinkDocumentsCompleted;
        
        /// <remarks/>
        public event UnlinkDocumentsCompletedEventHandler UnlinkDocumentsCompleted;
        
        /// <remarks/>
        public event LinkDocAndWFInstanceCompletedEventHandler LinkDocAndWFInstanceCompleted;
        
        /// <remarks/>
        public event UnlinkDocAndWFInstanceCompletedEventHandler UnlinkDocAndWFInstanceCompleted;
        
        /// <remarks/>
        public event GetLinkedObjectsCompletedEventHandler GetLinkedObjectsCompleted;
        
        /// <remarks/>
        public event GetLinkedWorkflowsForDocCompletedEventHandler GetLinkedWorkflowsForDocCompleted;
        
        /// <remarks/>
        public event StartTaskCompletedEventHandler StartTaskCompleted;
        
        /// <remarks/>
        public event GetTaskCompletedEventHandler GetTaskCompleted;
        
        /// <remarks/>
        public event GetTaskInfoCompletedEventHandler GetTaskInfoCompleted;
        
        /// <remarks/>
        public event UpdateTaskCompletedEventHandler UpdateTaskCompleted;
        
        /// <remarks/>
        public event DeleteTaskCompletedEventHandler DeleteTaskCompleted;
        
        /// <remarks/>
        public event SetTaskStatusCompletedEventHandler SetTaskStatusCompleted;
        
        /// <remarks/>
        public event UpdateTaskCommentCompletedEventHandler UpdateTaskCommentCompleted;
        
        /// <remarks/>
        public event CompleteTaskCompletedEventHandler CompleteTaskCompleted;
        
        /// <remarks/>
        public event ExecuteTaskInfoQueryCompletedEventHandler ExecuteTaskInfoQueryCompleted;
        
        /// <remarks/>
        public event GetSettingStringCompletedEventHandler GetSettingStringCompleted;
        
        /// <remarks/>
        public event GetSettingIntCompletedEventHandler GetSettingIntCompleted;
        
        /// <remarks/>
        public event GetReportDefinitionCompletedEventHandler GetReportDefinitionCompleted;
        
        /// <remarks/>
        public event ExecuteReportCompletedEventHandler ExecuteReportCompleted;
        
        /// <remarks/>
        public event GetKeywordsByFieldNoCompletedEventHandler GetKeywordsByFieldNoCompleted;
        
        /// <remarks/>
        public event GetDictionaryInfoCompletedEventHandler GetDictionaryInfoCompleted;
        
        /// <remarks/>
        public event AddDictionaryKeywordCompletedEventHandler AddDictionaryKeywordCompleted;
        
        /// <remarks/>
        public event DeleteDictionaryKeywordCompletedEventHandler DeleteDictionaryKeywordCompleted;
        
        /// <remarks/>
        public event UpdateDictionaryKeywordCompletedEventHandler UpdateDictionaryKeywordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/CreateDocument", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateDocumentResponse CreateDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CreateDocumentParams parameters) {
            object[] results = this.Invoke("CreateDocument", new object[] {
                        parameters});
            return ((CreateDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDocumentAsync(CreateDocumentParams parameters) {
            this.CreateDocumentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void CreateDocumentAsync(CreateDocumentParams parameters, object userState) {
            if ((this.CreateDocumentOperationCompleted == null)) {
                this.CreateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDocumentOperationCompleted);
            }
            this.InvokeAsync("CreateDocument", new object[] {
                        parameters}, this.CreateDocumentOperationCompleted, userState);
        }
        
        private void OnCreateDocumentOperationCompleted(object arg) {
            if ((this.CreateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDocumentCompleted(this, new CreateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/StartCreateDocumentBatch", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StartCreateDocumentBatchResponse StartCreateDocumentBatch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StartCreateDocumentBatchParams parameters) {
            object[] results = this.Invoke("StartCreateDocumentBatch", new object[] {
                        parameters});
            return ((StartCreateDocumentBatchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void StartCreateDocumentBatchAsync(StartCreateDocumentBatchParams parameters) {
            this.StartCreateDocumentBatchAsync(parameters, null);
        }
        
        /// <remarks/>
        public void StartCreateDocumentBatchAsync(StartCreateDocumentBatchParams parameters, object userState) {
            if ((this.StartCreateDocumentBatchOperationCompleted == null)) {
                this.StartCreateDocumentBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartCreateDocumentBatchOperationCompleted);
            }
            this.InvokeAsync("StartCreateDocumentBatch", new object[] {
                        parameters}, this.StartCreateDocumentBatchOperationCompleted, userState);
        }
        
        private void OnStartCreateDocumentBatchOperationCompleted(object arg) {
            if ((this.StartCreateDocumentBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartCreateDocumentBatchCompleted(this, new StartCreateDocumentBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UploadDocStreamToBatch", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UploadDocStreamToBatchResponse UploadDocStreamToBatch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UploadDocStreamToBatchParams parameters) {
            object[] results = this.Invoke("UploadDocStreamToBatch", new object[] {
                        parameters});
            return ((UploadDocStreamToBatchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocStreamToBatchAsync(UploadDocStreamToBatchParams parameters) {
            this.UploadDocStreamToBatchAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UploadDocStreamToBatchAsync(UploadDocStreamToBatchParams parameters, object userState) {
            if ((this.UploadDocStreamToBatchOperationCompleted == null)) {
                this.UploadDocStreamToBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocStreamToBatchOperationCompleted);
            }
            this.InvokeAsync("UploadDocStreamToBatch", new object[] {
                        parameters}, this.UploadDocStreamToBatchOperationCompleted, userState);
        }
        
        private void OnUploadDocStreamToBatchOperationCompleted(object arg) {
            if ((this.UploadDocStreamToBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocStreamToBatchCompleted(this, new UploadDocStreamToBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SubmitCreateDocumentBatch", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SubmitCreateDocumentBatchResponse SubmitCreateDocumentBatch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SubmitCreateDocumentBatchParams parameters) {
            object[] results = this.Invoke("SubmitCreateDocumentBatch", new object[] {
                        parameters});
            return ((SubmitCreateDocumentBatchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitCreateDocumentBatchAsync(SubmitCreateDocumentBatchParams parameters) {
            this.SubmitCreateDocumentBatchAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SubmitCreateDocumentBatchAsync(SubmitCreateDocumentBatchParams parameters, object userState) {
            if ((this.SubmitCreateDocumentBatchOperationCompleted == null)) {
                this.SubmitCreateDocumentBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitCreateDocumentBatchOperationCompleted);
            }
            this.InvokeAsync("SubmitCreateDocumentBatch", new object[] {
                        parameters}, this.SubmitCreateDocumentBatchOperationCompleted, userState);
        }
        
        private void OnSubmitCreateDocumentBatchOperationCompleted(object arg) {
            if ((this.SubmitCreateDocumentBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitCreateDocumentBatchCompleted(this, new SubmitCreateDocumentBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UpdateDocument", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UpdateDocumentResponse UpdateDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UpdateDocumentParams parameters) {
            object[] results = this.Invoke("UpdateDocument", new object[] {
                        parameters});
            return ((UpdateDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDocumentAsync(UpdateDocumentParams parameters) {
            this.UpdateDocumentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentAsync(UpdateDocumentParams parameters, object userState) {
            if ((this.UpdateDocumentOperationCompleted == null)) {
                this.UpdateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentOperationCompleted);
            }
            this.InvokeAsync("UpdateDocument", new object[] {
                        parameters}, this.UpdateDocumentOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentOperationCompleted(object arg) {
            if ((this.UpdateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentCompleted(this, new UpdateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/AddStreamsToDocument", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AddStreamsToDocumentResponse AddStreamsToDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AddStreamsToDocumentParams parameters) {
            object[] results = this.Invoke("AddStreamsToDocument", new object[] {
                        parameters});
            return ((AddStreamsToDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddStreamsToDocumentAsync(AddStreamsToDocumentParams parameters) {
            this.AddStreamsToDocumentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void AddStreamsToDocumentAsync(AddStreamsToDocumentParams parameters, object userState) {
            if ((this.AddStreamsToDocumentOperationCompleted == null)) {
                this.AddStreamsToDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStreamsToDocumentOperationCompleted);
            }
            this.InvokeAsync("AddStreamsToDocument", new object[] {
                        parameters}, this.AddStreamsToDocumentOperationCompleted, userState);
        }
        
        private void OnAddStreamsToDocumentOperationCompleted(object arg) {
            if ((this.AddStreamsToDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStreamsToDocumentCompleted(this, new AddStreamsToDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/StartUpdateDocumentBatch", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StartUpdateDocumentBatchResponse StartUpdateDocumentBatch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StartUpdateDocumentBatchParams parameters) {
            object[] results = this.Invoke("StartUpdateDocumentBatch", new object[] {
                        parameters});
            return ((StartUpdateDocumentBatchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void StartUpdateDocumentBatchAsync(StartUpdateDocumentBatchParams parameters) {
            this.StartUpdateDocumentBatchAsync(parameters, null);
        }
        
        /// <remarks/>
        public void StartUpdateDocumentBatchAsync(StartUpdateDocumentBatchParams parameters, object userState) {
            if ((this.StartUpdateDocumentBatchOperationCompleted == null)) {
                this.StartUpdateDocumentBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartUpdateDocumentBatchOperationCompleted);
            }
            this.InvokeAsync("StartUpdateDocumentBatch", new object[] {
                        parameters}, this.StartUpdateDocumentBatchOperationCompleted, userState);
        }
        
        private void OnStartUpdateDocumentBatchOperationCompleted(object arg) {
            if ((this.StartUpdateDocumentBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartUpdateDocumentBatchCompleted(this, new StartUpdateDocumentBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SubmitUpdateDocumentBatch", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SubmitUpdateDocumentBatchResponse SubmitUpdateDocumentBatch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SubmitUpdateDocumentBatchParams parameters) {
            object[] results = this.Invoke("SubmitUpdateDocumentBatch", new object[] {
                        parameters});
            return ((SubmitUpdateDocumentBatchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitUpdateDocumentBatchAsync(SubmitUpdateDocumentBatchParams parameters) {
            this.SubmitUpdateDocumentBatchAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SubmitUpdateDocumentBatchAsync(SubmitUpdateDocumentBatchParams parameters, object userState) {
            if ((this.SubmitUpdateDocumentBatchOperationCompleted == null)) {
                this.SubmitUpdateDocumentBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitUpdateDocumentBatchOperationCompleted);
            }
            this.InvokeAsync("SubmitUpdateDocumentBatch", new object[] {
                        parameters}, this.SubmitUpdateDocumentBatchOperationCompleted, userState);
        }
        
        private void OnSubmitUpdateDocumentBatchOperationCompleted(object arg) {
            if ((this.SubmitUpdateDocumentBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitUpdateDocumentBatchCompleted(this, new SubmitUpdateDocumentBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCategoryInfo", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCategoryInfoResponse GetCategoryInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCategoryInfoParams parameters) {
            object[] results = this.Invoke("GetCategoryInfo", new object[] {
                        parameters});
            return ((GetCategoryInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryInfoAsync(GetCategoryInfoParams parameters) {
            this.GetCategoryInfoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCategoryInfoAsync(GetCategoryInfoParams parameters, object userState) {
            if ((this.GetCategoryInfoOperationCompleted == null)) {
                this.GetCategoryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryInfoOperationCompleted);
            }
            this.InvokeAsync("GetCategoryInfo", new object[] {
                        parameters}, this.GetCategoryInfoOperationCompleted, userState);
        }
        
        private void OnGetCategoryInfoOperationCompleted(object arg) {
            if ((this.GetCategoryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryInfoCompleted(this, new GetCategoryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/FillDependentFields", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FillDependentFieldsResponse FillDependentFields([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FillDependentFieldsParams parameters) {
            object[] results = this.Invoke("FillDependentFields", new object[] {
                        parameters});
            return ((FillDependentFieldsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void FillDependentFieldsAsync(FillDependentFieldsParams parameters) {
            this.FillDependentFieldsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void FillDependentFieldsAsync(FillDependentFieldsParams parameters, object userState) {
            if ((this.FillDependentFieldsOperationCompleted == null)) {
                this.FillDependentFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFillDependentFieldsOperationCompleted);
            }
            this.InvokeAsync("FillDependentFields", new object[] {
                        parameters}, this.FillDependentFieldsOperationCompleted, userState);
        }
        
        private void OnFillDependentFieldsOperationCompleted(object arg) {
            if ((this.FillDependentFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FillDependentFieldsCompleted(this, new FillDependentFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDocumentIndexData", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentIndexDataResponse GetDocumentIndexData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentIndexDataParams parameters) {
            object[] results = this.Invoke("GetDocumentIndexData", new object[] {
                        parameters});
            return ((GetDocumentIndexDataResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentIndexDataAsync(GetDocumentIndexDataParams parameters) {
            this.GetDocumentIndexDataAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDocumentIndexDataAsync(GetDocumentIndexDataParams parameters, object userState) {
            if ((this.GetDocumentIndexDataOperationCompleted == null)) {
                this.GetDocumentIndexDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentIndexDataOperationCompleted);
            }
            this.InvokeAsync("GetDocumentIndexData", new object[] {
                        parameters}, this.GetDocumentIndexDataOperationCompleted, userState);
        }
        
        private void OnGetDocumentIndexDataOperationCompleted(object arg) {
            if ((this.GetDocumentIndexDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentIndexDataCompleted(this, new GetDocumentIndexDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SaveDocumentIndexData", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SaveDocumentIndexDataResponse SaveDocumentIndexData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SaveDocumentIndexDataParams parameters) {
            object[] results = this.Invoke("SaveDocumentIndexData", new object[] {
                        parameters});
            return ((SaveDocumentIndexDataResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDocumentIndexDataAsync(SaveDocumentIndexDataParams parameters) {
            this.SaveDocumentIndexDataAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SaveDocumentIndexDataAsync(SaveDocumentIndexDataParams parameters, object userState) {
            if ((this.SaveDocumentIndexDataOperationCompleted == null)) {
                this.SaveDocumentIndexDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDocumentIndexDataOperationCompleted);
            }
            this.InvokeAsync("SaveDocumentIndexData", new object[] {
                        parameters}, this.SaveDocumentIndexDataOperationCompleted, userState);
        }
        
        private void OnSaveDocumentIndexDataOperationCompleted(object arg) {
            if ((this.SaveDocumentIndexDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDocumentIndexDataCompleted(this, new SaveDocumentIndexDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/CreateLinkFile", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateLinkFileResponse CreateLinkFile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CreateLinkFileParams parameters) {
            object[] results = this.Invoke("CreateLinkFile", new object[] {
                        parameters});
            return ((CreateLinkFileResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateLinkFileAsync(CreateLinkFileParams parameters) {
            this.CreateLinkFileAsync(parameters, null);
        }
        
        /// <remarks/>
        public void CreateLinkFileAsync(CreateLinkFileParams parameters, object userState) {
            if ((this.CreateLinkFileOperationCompleted == null)) {
                this.CreateLinkFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLinkFileOperationCompleted);
            }
            this.InvokeAsync("CreateLinkFile", new object[] {
                        parameters}, this.CreateLinkFileOperationCompleted, userState);
        }
        
        private void OnCreateLinkFileOperationCompleted(object arg) {
            if ((this.CreateLinkFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLinkFileCompleted(this, new CreateLinkFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDocument", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentResponse GetDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentParams parameters) {
            object[] results = this.Invoke("GetDocument", new object[] {
                        parameters});
            return ((GetDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAsync(GetDocumentParams parameters) {
            this.GetDocumentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDocumentAsync(GetDocumentParams parameters, object userState) {
            if ((this.GetDocumentOperationCompleted == null)) {
                this.GetDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentOperationCompleted);
            }
            this.InvokeAsync("GetDocument", new object[] {
                        parameters}, this.GetDocumentOperationCompleted, userState);
        }
        
        private void OnGetDocumentOperationCompleted(object arg) {
            if ((this.GetDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCompleted(this, new GetDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDocumentStream", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentStreamResponse GetDocumentStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentStreamParams parameters) {
            object[] results = this.Invoke("GetDocumentStream", new object[] {
                        parameters});
            return ((GetDocumentStreamResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentStreamAsync(GetDocumentStreamParams parameters) {
            this.GetDocumentStreamAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDocumentStreamAsync(GetDocumentStreamParams parameters, object userState) {
            if ((this.GetDocumentStreamOperationCompleted == null)) {
                this.GetDocumentStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentStreamOperationCompleted);
            }
            this.InvokeAsync("GetDocumentStream", new object[] {
                        parameters}, this.GetDocumentStreamOperationCompleted, userState);
        }
        
        private void OnGetDocumentStreamOperationCompleted(object arg) {
            if ((this.GetDocumentStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentStreamCompleted(this, new GetDocumentStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetConvertedDocStreams", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetConvertedDocStreamsResponse GetConvertedDocStreams([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetConvertedDocStreamsParams parameters) {
            object[] results = this.Invoke("GetConvertedDocStreams", new object[] {
                        parameters});
            return ((GetConvertedDocStreamsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetConvertedDocStreamsAsync(GetConvertedDocStreamsParams parameters) {
            this.GetConvertedDocStreamsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetConvertedDocStreamsAsync(GetConvertedDocStreamsParams parameters, object userState) {
            if ((this.GetConvertedDocStreamsOperationCompleted == null)) {
                this.GetConvertedDocStreamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConvertedDocStreamsOperationCompleted);
            }
            this.InvokeAsync("GetConvertedDocStreams", new object[] {
                        parameters}, this.GetConvertedDocStreamsOperationCompleted, userState);
        }
        
        private void OnGetConvertedDocStreamsOperationCompleted(object arg) {
            if ((this.GetConvertedDocStreamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConvertedDocStreamsCompleted(this, new GetConvertedDocStreamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDocumentCheckoutStatus", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentCheckoutStateResponse GetDocumentCheckoutStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentCheckoutStateParams parameters) {
            object[] results = this.Invoke("GetDocumentCheckoutStatus", new object[] {
                        parameters});
            return ((GetDocumentCheckoutStateResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentCheckoutStatusAsync(GetDocumentCheckoutStateParams parameters) {
            this.GetDocumentCheckoutStatusAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDocumentCheckoutStatusAsync(GetDocumentCheckoutStateParams parameters, object userState) {
            if ((this.GetDocumentCheckoutStatusOperationCompleted == null)) {
                this.GetDocumentCheckoutStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentCheckoutStatusOperationCompleted);
            }
            this.InvokeAsync("GetDocumentCheckoutStatus", new object[] {
                        parameters}, this.GetDocumentCheckoutStatusOperationCompleted, userState);
        }
        
        private void OnGetDocumentCheckoutStatusOperationCompleted(object arg) {
            if ((this.GetDocumentCheckoutStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCheckoutStatusCompleted(this, new GetDocumentCheckoutStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetThumbnail", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetThumbnailResponse GetThumbnail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetThumbnailParams parameters) {
            object[] results = this.Invoke("GetThumbnail", new object[] {
                        parameters});
            return ((GetThumbnailResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetThumbnailAsync(GetThumbnailParams parameters) {
            this.GetThumbnailAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetThumbnailAsync(GetThumbnailParams parameters, object userState) {
            if ((this.GetThumbnailOperationCompleted == null)) {
                this.GetThumbnailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThumbnailOperationCompleted);
            }
            this.InvokeAsync("GetThumbnail", new object[] {
                        parameters}, this.GetThumbnailOperationCompleted, userState);
        }
        
        private void OnGetThumbnailOperationCompleted(object arg) {
            if ((this.GetThumbnailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThumbnailCompleted(this, new GetThumbnailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDocumentProperties", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentPropertiesResponse GetDocumentProperties([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentPropertiesParams parameters) {
            object[] results = this.Invoke("GetDocumentProperties", new object[] {
                        parameters});
            return ((GetDocumentPropertiesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentPropertiesAsync(GetDocumentPropertiesParams parameters) {
            this.GetDocumentPropertiesAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDocumentPropertiesAsync(GetDocumentPropertiesParams parameters, object userState) {
            if ((this.GetDocumentPropertiesOperationCompleted == null)) {
                this.GetDocumentPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetDocumentProperties", new object[] {
                        parameters}, this.GetDocumentPropertiesOperationCompleted, userState);
        }
        
        private void OnGetDocumentPropertiesOperationCompleted(object arg) {
            if ((this.GetDocumentPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentPropertiesCompleted(this, new GetDocumentPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DeleteDocument", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteDocumentResponse DeleteDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeleteDocumentParams parameters) {
            object[] results = this.Invoke("DeleteDocument", new object[] {
                        parameters});
            return ((DeleteDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(DeleteDocumentParams parameters) {
            this.DeleteDocumentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(DeleteDocumentParams parameters, object userState) {
            if ((this.DeleteDocumentOperationCompleted == null)) {
                this.DeleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("DeleteDocument", new object[] {
                        parameters}, this.DeleteDocumentOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentOperationCompleted(object arg) {
            if ((this.DeleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentCompleted(this, new DeleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteSimpleQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteSimpleQueryResponse ExecuteSimpleQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteSimpleQueryParams parameters) {
            object[] results = this.Invoke("ExecuteSimpleQuery", new object[] {
                        parameters});
            return ((ExecuteSimpleQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSimpleQueryAsync(ExecuteSimpleQueryParams parameters) {
            this.ExecuteSimpleQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteSimpleQueryAsync(ExecuteSimpleQueryParams parameters, object userState) {
            if ((this.ExecuteSimpleQueryOperationCompleted == null)) {
                this.ExecuteSimpleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSimpleQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteSimpleQuery", new object[] {
                        parameters}, this.ExecuteSimpleQueryOperationCompleted, userState);
        }
        
        private void OnExecuteSimpleQueryOperationCompleted(object arg) {
            if ((this.ExecuteSimpleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSimpleQueryCompleted(this, new ExecuteSimpleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetQuerySpecification", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public QuerySpecificationResponse GetQuerySpecification([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] QuerySpecificationParams parameters) {
            object[] results = this.Invoke("GetQuerySpecification", new object[] {
                        parameters});
            return ((QuerySpecificationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuerySpecificationAsync(QuerySpecificationParams parameters) {
            this.GetQuerySpecificationAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetQuerySpecificationAsync(QuerySpecificationParams parameters, object userState) {
            if ((this.GetQuerySpecificationOperationCompleted == null)) {
                this.GetQuerySpecificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuerySpecificationOperationCompleted);
            }
            this.InvokeAsync("GetQuerySpecification", new object[] {
                        parameters}, this.GetQuerySpecificationOperationCompleted, userState);
        }
        
        private void OnGetQuerySpecificationOperationCompleted(object arg) {
            if ((this.GetQuerySpecificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuerySpecificationCompleted(this, new GetQuerySpecificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteSingleQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteSingleQueryResponse ExecuteSingleQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteSingleQueryParams parameters) {
            object[] results = this.Invoke("ExecuteSingleQuery", new object[] {
                        parameters});
            return ((ExecuteSingleQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSingleQueryAsync(ExecuteSingleQueryParams parameters) {
            this.ExecuteSingleQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteSingleQueryAsync(ExecuteSingleQueryParams parameters, object userState) {
            if ((this.ExecuteSingleQueryOperationCompleted == null)) {
                this.ExecuteSingleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSingleQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteSingleQuery", new object[] {
                        parameters}, this.ExecuteSingleQueryOperationCompleted, userState);
        }
        
        private void OnExecuteSingleQueryOperationCompleted(object arg) {
            if ((this.ExecuteSingleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSingleQueryCompleted(this, new ExecuteSingleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteAsyncSingleQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteAsyncSingleQueryResponse ExecuteAsyncSingleQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteAsyncSingleQueryParams parameters) {
            object[] results = this.Invoke("ExecuteAsyncSingleQuery", new object[] {
                        parameters});
            return ((ExecuteAsyncSingleQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsyncSingleQueryAsync(ExecuteAsyncSingleQueryParams parameters) {
            this.ExecuteAsyncSingleQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteAsyncSingleQueryAsync(ExecuteAsyncSingleQueryParams parameters, object userState) {
            if ((this.ExecuteAsyncSingleQueryOperationCompleted == null)) {
                this.ExecuteAsyncSingleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteAsyncSingleQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteAsyncSingleQuery", new object[] {
                        parameters}, this.ExecuteAsyncSingleQueryOperationCompleted, userState);
        }
        
        private void OnExecuteAsyncSingleQueryOperationCompleted(object arg) {
            if ((this.ExecuteAsyncSingleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteAsyncSingleQueryCompleted(this, new ExecuteAsyncSingleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetNextSingleQueryRows", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetNextSingleQueryRowsResponse GetNextSingleQueryRows([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetNextSingleQueryRowsParams parameters) {
            object[] results = this.Invoke("GetNextSingleQueryRows", new object[] {
                        parameters});
            return ((GetNextSingleQueryRowsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextSingleQueryRowsAsync(GetNextSingleQueryRowsParams parameters) {
            this.GetNextSingleQueryRowsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetNextSingleQueryRowsAsync(GetNextSingleQueryRowsParams parameters, object userState) {
            if ((this.GetNextSingleQueryRowsOperationCompleted == null)) {
                this.GetNextSingleQueryRowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextSingleQueryRowsOperationCompleted);
            }
            this.InvokeAsync("GetNextSingleQueryRows", new object[] {
                        parameters}, this.GetNextSingleQueryRowsOperationCompleted, userState);
        }
        
        private void OnGetNextSingleQueryRowsOperationCompleted(object arg) {
            if ((this.GetNextSingleQueryRowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextSingleQueryRowsCompleted(this, new GetNextSingleQueryRowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ReleaseSingleQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReleaseSingleQueryResponse ReleaseSingleQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ReleaseSingleQueryParams parameters) {
            object[] results = this.Invoke("ReleaseSingleQuery", new object[] {
                        parameters});
            return ((ReleaseSingleQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseSingleQueryAsync(ReleaseSingleQueryParams parameters) {
            this.ReleaseSingleQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ReleaseSingleQueryAsync(ReleaseSingleQueryParams parameters, object userState) {
            if ((this.ReleaseSingleQueryOperationCompleted == null)) {
                this.ReleaseSingleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseSingleQueryOperationCompleted);
            }
            this.InvokeAsync("ReleaseSingleQuery", new object[] {
                        parameters}, this.ReleaseSingleQueryOperationCompleted, userState);
        }
        
        private void OnReleaseSingleQueryOperationCompleted(object arg) {
            if ((this.ReleaseSingleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseSingleQueryCompleted(this, new ReleaseSingleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteMultiQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteMultiQueryResponse ExecuteMultiQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteMultiQueryParams parameters) {
            object[] results = this.Invoke("ExecuteMultiQuery", new object[] {
                        parameters});
            return ((ExecuteMultiQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteMultiQueryAsync(ExecuteMultiQueryParams parameters) {
            this.ExecuteMultiQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteMultiQueryAsync(ExecuteMultiQueryParams parameters, object userState) {
            if ((this.ExecuteMultiQueryOperationCompleted == null)) {
                this.ExecuteMultiQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteMultiQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteMultiQuery", new object[] {
                        parameters}, this.ExecuteMultiQueryOperationCompleted, userState);
        }
        
        private void OnExecuteMultiQueryOperationCompleted(object arg) {
            if ((this.ExecuteMultiQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteMultiQueryCompleted(this, new ExecuteMultiQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteAsyncMultiQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteAsyncMultiQueryResponse ExecuteAsyncMultiQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteAsyncMultiQueryParams parameters) {
            object[] results = this.Invoke("ExecuteAsyncMultiQuery", new object[] {
                        parameters});
            return ((ExecuteAsyncMultiQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsyncMultiQueryAsync(ExecuteAsyncMultiQueryParams parameters) {
            this.ExecuteAsyncMultiQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteAsyncMultiQueryAsync(ExecuteAsyncMultiQueryParams parameters, object userState) {
            if ((this.ExecuteAsyncMultiQueryOperationCompleted == null)) {
                this.ExecuteAsyncMultiQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteAsyncMultiQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteAsyncMultiQuery", new object[] {
                        parameters}, this.ExecuteAsyncMultiQueryOperationCompleted, userState);
        }
        
        private void OnExecuteAsyncMultiQueryOperationCompleted(object arg) {
            if ((this.ExecuteAsyncMultiQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteAsyncMultiQueryCompleted(this, new ExecuteAsyncMultiQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetNextMultiQueryRows", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetNextMultiQueryRowsResponse GetNextMultiQueryRows([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetNextMultiQueryRowsParams parameters) {
            object[] results = this.Invoke("GetNextMultiQueryRows", new object[] {
                        parameters});
            return ((GetNextMultiQueryRowsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextMultiQueryRowsAsync(GetNextMultiQueryRowsParams parameters) {
            this.GetNextMultiQueryRowsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetNextMultiQueryRowsAsync(GetNextMultiQueryRowsParams parameters, object userState) {
            if ((this.GetNextMultiQueryRowsOperationCompleted == null)) {
                this.GetNextMultiQueryRowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextMultiQueryRowsOperationCompleted);
            }
            this.InvokeAsync("GetNextMultiQueryRows", new object[] {
                        parameters}, this.GetNextMultiQueryRowsOperationCompleted, userState);
        }
        
        private void OnGetNextMultiQueryRowsOperationCompleted(object arg) {
            if ((this.GetNextMultiQueryRowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextMultiQueryRowsCompleted(this, new GetNextMultiQueryRowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ReleaseMultiQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReleaseMultiQueryResponse ReleaseMultiQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ReleaseMultiQueryParams parameters) {
            object[] results = this.Invoke("ReleaseMultiQuery", new object[] {
                        parameters});
            return ((ReleaseMultiQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseMultiQueryAsync(ReleaseMultiQueryParams parameters) {
            this.ReleaseMultiQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ReleaseMultiQueryAsync(ReleaseMultiQueryParams parameters, object userState) {
            if ((this.ReleaseMultiQueryOperationCompleted == null)) {
                this.ReleaseMultiQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseMultiQueryOperationCompleted);
            }
            this.InvokeAsync("ReleaseMultiQuery", new object[] {
                        parameters}, this.ReleaseMultiQueryOperationCompleted, userState);
        }
        
        private void OnReleaseMultiQueryOperationCompleted(object arg) {
            if ((this.ReleaseMultiQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseMultiQueryCompleted(this, new ReleaseMultiQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteFullTextQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteFullTextQueryResponse ExecuteFullTextQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteFullTextQueryParams parameters) {
            object[] results = this.Invoke("ExecuteFullTextQuery", new object[] {
                        parameters});
            return ((ExecuteFullTextQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteFullTextQueryAsync(ExecuteFullTextQueryParams parameters) {
            this.ExecuteFullTextQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteFullTextQueryAsync(ExecuteFullTextQueryParams parameters, object userState) {
            if ((this.ExecuteFullTextQueryOperationCompleted == null)) {
                this.ExecuteFullTextQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteFullTextQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteFullTextQuery", new object[] {
                        parameters}, this.ExecuteFullTextQueryOperationCompleted, userState);
        }
        
        private void OnExecuteFullTextQueryOperationCompleted(object arg) {
            if ((this.ExecuteFullTextQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteFullTextQueryCompleted(this, new ExecuteFullTextQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteAsyncFullTextQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteAsyncFullTextQueryResponse ExecuteAsyncFullTextQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteAsyncFullTextQueryParams parameters) {
            object[] results = this.Invoke("ExecuteAsyncFullTextQuery", new object[] {
                        parameters});
            return ((ExecuteAsyncFullTextQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsyncFullTextQueryAsync(ExecuteAsyncFullTextQueryParams parameters) {
            this.ExecuteAsyncFullTextQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteAsyncFullTextQueryAsync(ExecuteAsyncFullTextQueryParams parameters, object userState) {
            if ((this.ExecuteAsyncFullTextQueryOperationCompleted == null)) {
                this.ExecuteAsyncFullTextQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteAsyncFullTextQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteAsyncFullTextQuery", new object[] {
                        parameters}, this.ExecuteAsyncFullTextQueryOperationCompleted, userState);
        }
        
        private void OnExecuteAsyncFullTextQueryOperationCompleted(object arg) {
            if ((this.ExecuteAsyncFullTextQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteAsyncFullTextQueryCompleted(this, new ExecuteAsyncFullTextQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetNextFullTextQueryRows", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetNextFullTextQueryRowsResponse GetNextFullTextQueryRows([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetNextFullTextQueryRowsParams parameters) {
            object[] results = this.Invoke("GetNextFullTextQueryRows", new object[] {
                        parameters});
            return ((GetNextFullTextQueryRowsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextFullTextQueryRowsAsync(GetNextFullTextQueryRowsParams parameters) {
            this.GetNextFullTextQueryRowsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetNextFullTextQueryRowsAsync(GetNextFullTextQueryRowsParams parameters, object userState) {
            if ((this.GetNextFullTextQueryRowsOperationCompleted == null)) {
                this.GetNextFullTextQueryRowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextFullTextQueryRowsOperationCompleted);
            }
            this.InvokeAsync("GetNextFullTextQueryRows", new object[] {
                        parameters}, this.GetNextFullTextQueryRowsOperationCompleted, userState);
        }
        
        private void OnGetNextFullTextQueryRowsOperationCompleted(object arg) {
            if ((this.GetNextFullTextQueryRowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextFullTextQueryRowsCompleted(this, new GetNextFullTextQueryRowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ReleaseFullTextQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReleaseFullTextQueryResponse ReleaseFullTextQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ReleaseFullTextQueryParams parameters) {
            object[] results = this.Invoke("ReleaseFullTextQuery", new object[] {
                        parameters});
            return ((ReleaseFullTextQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseFullTextQueryAsync(ReleaseFullTextQueryParams parameters) {
            this.ReleaseFullTextQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ReleaseFullTextQueryAsync(ReleaseFullTextQueryParams parameters, object userState) {
            if ((this.ReleaseFullTextQueryOperationCompleted == null)) {
                this.ReleaseFullTextQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseFullTextQueryOperationCompleted);
            }
            this.InvokeAsync("ReleaseFullTextQuery", new object[] {
                        parameters}, this.ReleaseFullTextQueryOperationCompleted, userState);
        }
        
        private void OnReleaseFullTextQueryOperationCompleted(object arg) {
            if ((this.ReleaseFullTextQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseFullTextQueryCompleted(this, new ReleaseFullTextQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCategoriesTree", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCategoriesTreeResponse GetCategoriesTree([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCategoriesTreeParams parameters) {
            object[] results = this.Invoke("GetCategoriesTree", new object[] {
                        parameters});
            return ((GetCategoriesTreeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoriesTreeAsync(GetCategoriesTreeParams parameters) {
            this.GetCategoriesTreeAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCategoriesTreeAsync(GetCategoriesTreeParams parameters, object userState) {
            if ((this.GetCategoriesTreeOperationCompleted == null)) {
                this.GetCategoriesTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoriesTreeOperationCompleted);
            }
            this.InvokeAsync("GetCategoriesTree", new object[] {
                        parameters}, this.GetCategoriesTreeOperationCompleted, userState);
        }
        
        private void OnGetCategoriesTreeOperationCompleted(object arg) {
            if ((this.GetCategoriesTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoriesTreeCompleted(this, new GetCategoriesTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDomainInfo", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDomainInfoResponse GetDomainInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDomainInfoParams parameters) {
            object[] results = this.Invoke("GetDomainInfo", new object[] {
                        parameters});
            return ((GetDomainInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainInfoAsync(GetDomainInfoParams parameters) {
            this.GetDomainInfoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDomainInfoAsync(GetDomainInfoParams parameters, object userState) {
            if ((this.GetDomainInfoOperationCompleted == null)) {
                this.GetDomainInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainInfoOperationCompleted);
            }
            this.InvokeAsync("GetDomainInfo", new object[] {
                        parameters}, this.GetDomainInfoOperationCompleted, userState);
        }
        
        private void OnGetDomainInfoOperationCompleted(object arg) {
            if ((this.GetDomainInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainInfoCompleted(this, new GetDomainInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetAllTreeViews", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetAllTreeViewsResponse GetAllTreeViews([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetAllTreeViewsParams parameters) {
            object[] results = this.Invoke("GetAllTreeViews", new object[] {
                        parameters});
            return ((GetAllTreeViewsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTreeViewsAsync(GetAllTreeViewsParams parameters) {
            this.GetAllTreeViewsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetAllTreeViewsAsync(GetAllTreeViewsParams parameters, object userState) {
            if ((this.GetAllTreeViewsOperationCompleted == null)) {
                this.GetAllTreeViewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTreeViewsOperationCompleted);
            }
            this.InvokeAsync("GetAllTreeViews", new object[] {
                        parameters}, this.GetAllTreeViewsOperationCompleted, userState);
        }
        
        private void OnGetAllTreeViewsOperationCompleted(object arg) {
            if ((this.GetAllTreeViewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTreeViewsCompleted(this, new GetAllTreeViewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetTreeViewChildNodes", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetTreeViewChildNodesResponse GetTreeViewChildNodes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetTreeViewChildNodesParams parameters) {
            object[] results = this.Invoke("GetTreeViewChildNodes", new object[] {
                        parameters});
            return ((GetTreeViewChildNodesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeViewChildNodesAsync(GetTreeViewChildNodesParams parameters) {
            this.GetTreeViewChildNodesAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetTreeViewChildNodesAsync(GetTreeViewChildNodesParams parameters, object userState) {
            if ((this.GetTreeViewChildNodesOperationCompleted == null)) {
                this.GetTreeViewChildNodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeViewChildNodesOperationCompleted);
            }
            this.InvokeAsync("GetTreeViewChildNodes", new object[] {
                        parameters}, this.GetTreeViewChildNodesOperationCompleted, userState);
        }
        
        private void OnGetTreeViewChildNodesOperationCompleted(object arg) {
            if ((this.GetTreeViewChildNodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeViewChildNodesCompleted(this, new GetTreeViewChildNodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetTreeViewNodeDocuments", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetTreeViewNodeDocumentsResponse GetTreeViewNodeDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetTreeViewNodeDocumentsParams parameters) {
            object[] results = this.Invoke("GetTreeViewNodeDocuments", new object[] {
                        parameters});
            return ((GetTreeViewNodeDocumentsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeViewNodeDocumentsAsync(GetTreeViewNodeDocumentsParams parameters) {
            this.GetTreeViewNodeDocumentsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetTreeViewNodeDocumentsAsync(GetTreeViewNodeDocumentsParams parameters, object userState) {
            if ((this.GetTreeViewNodeDocumentsOperationCompleted == null)) {
                this.GetTreeViewNodeDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeViewNodeDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetTreeViewNodeDocuments", new object[] {
                        parameters}, this.GetTreeViewNodeDocumentsOperationCompleted, userState);
        }
        
        private void OnGetTreeViewNodeDocumentsOperationCompleted(object arg) {
            if ((this.GetTreeViewNodeDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeViewNodeDocumentsCompleted(this, new GetTreeViewNodeDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetConnectedUser", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetConnectedUserResponse GetConnectedUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetConnectedUserParams parameters) {
            object[] results = this.Invoke("GetConnectedUser", new object[] {
                        parameters});
            return ((GetConnectedUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectedUserAsync(GetConnectedUserParams parameters) {
            this.GetConnectedUserAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetConnectedUserAsync(GetConnectedUserParams parameters, object userState) {
            if ((this.GetConnectedUserOperationCompleted == null)) {
                this.GetConnectedUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectedUserOperationCompleted);
            }
            this.InvokeAsync("GetConnectedUser", new object[] {
                        parameters}, this.GetConnectedUserOperationCompleted, userState);
        }
        
        private void OnGetConnectedUserOperationCompleted(object arg) {
            if ((this.GetConnectedUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectedUserCompleted(this, new GetConnectedUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteUsersQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteUsersQueryResponse ExecuteUsersQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteUsersQueryParams parameters) {
            object[] results = this.Invoke("ExecuteUsersQuery", new object[] {
                        parameters});
            return ((ExecuteUsersQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteUsersQueryAsync(ExecuteUsersQueryParams parameters) {
            this.ExecuteUsersQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteUsersQueryAsync(ExecuteUsersQueryParams parameters, object userState) {
            if ((this.ExecuteUsersQueryOperationCompleted == null)) {
                this.ExecuteUsersQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteUsersQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteUsersQuery", new object[] {
                        parameters}, this.ExecuteUsersQueryOperationCompleted, userState);
        }
        
        private void OnExecuteUsersQueryOperationCompleted(object arg) {
            if ((this.ExecuteUsersQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteUsersQueryCompleted(this, new ExecuteUsersQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetWebAPIServerVersion", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetWebAPIServerVersionResponse GetWebAPIServerVersion([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetWebAPIServerVersionParams parameters) {
            object[] results = this.Invoke("GetWebAPIServerVersion", new object[] {
                        parameters});
            return ((GetWebAPIServerVersionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebAPIServerVersionAsync(GetWebAPIServerVersionParams parameters) {
            this.GetWebAPIServerVersionAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetWebAPIServerVersionAsync(GetWebAPIServerVersionParams parameters, object userState) {
            if ((this.GetWebAPIServerVersionOperationCompleted == null)) {
                this.GetWebAPIServerVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebAPIServerVersionOperationCompleted);
            }
            this.InvokeAsync("GetWebAPIServerVersion", new object[] {
                        parameters}, this.GetWebAPIServerVersionOperationCompleted, userState);
        }
        
        private void OnGetWebAPIServerVersionOperationCompleted(object arg) {
            if ((this.GetWebAPIServerVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebAPIServerVersionCompleted(this, new GetWebAPIServerVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/HasPermissions", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public HasPermissionsResponse HasPermissions([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] HasPermissionsParams parameters) {
            object[] results = this.Invoke("HasPermissions", new object[] {
                        parameters});
            return ((HasPermissionsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void HasPermissionsAsync(HasPermissionsParams parameters) {
            this.HasPermissionsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void HasPermissionsAsync(HasPermissionsParams parameters, object userState) {
            if ((this.HasPermissionsOperationCompleted == null)) {
                this.HasPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPermissionsOperationCompleted);
            }
            this.InvokeAsync("HasPermissions", new object[] {
                        parameters}, this.HasPermissionsOperationCompleted, userState);
        }
        
        private void OnHasPermissionsOperationCompleted(object arg) {
            if ((this.HasPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPermissionsCompleted(this, new HasPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetObjects", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetObjectsResponse GetObjects([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetObjectsParams parameters) {
            object[] results = this.Invoke("GetObjects", new object[] {
                        parameters});
            return ((GetObjectsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectsAsync(GetObjectsParams parameters) {
            this.GetObjectsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetObjectsAsync(GetObjectsParams parameters, object userState) {
            if ((this.GetObjectsOperationCompleted == null)) {
                this.GetObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectsOperationCompleted);
            }
            this.InvokeAsync("GetObjects", new object[] {
                        parameters}, this.GetObjectsOperationCompleted, userState);
        }
        
        private void OnGetObjectsOperationCompleted(object arg) {
            if ((this.GetObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectsCompleted(this, new GetObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetObjectRights", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetObjectRightsResponse GetObjectRights([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetObjectRightsParams parameters) {
            object[] results = this.Invoke("GetObjectRights", new object[] {
                        parameters});
            return ((GetObjectRightsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectRightsAsync(GetObjectRightsParams parameters) {
            this.GetObjectRightsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetObjectRightsAsync(GetObjectRightsParams parameters, object userState) {
            if ((this.GetObjectRightsOperationCompleted == null)) {
                this.GetObjectRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectRightsOperationCompleted);
            }
            this.InvokeAsync("GetObjectRights", new object[] {
                        parameters}, this.GetObjectRightsOperationCompleted, userState);
        }
        
        private void OnGetObjectRightsOperationCompleted(object arg) {
            if ((this.GetObjectRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectRightsCompleted(this, new GetObjectRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetPermissionConstants", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetPermissionConstantsResponse GetPermissionConstants([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetPermissionConstantsParams parameters) {
            object[] results = this.Invoke("GetPermissionConstants", new object[] {
                        parameters});
            return ((GetPermissionConstantsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPermissionConstantsAsync(GetPermissionConstantsParams parameters) {
            this.GetPermissionConstantsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetPermissionConstantsAsync(GetPermissionConstantsParams parameters, object userState) {
            if ((this.GetPermissionConstantsOperationCompleted == null)) {
                this.GetPermissionConstantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermissionConstantsOperationCompleted);
            }
            this.InvokeAsync("GetPermissionConstants", new object[] {
                        parameters}, this.GetPermissionConstantsOperationCompleted, userState);
        }
        
        private void OnGetPermissionConstantsOperationCompleted(object arg) {
            if ((this.GetPermissionConstantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermissionConstantsCompleted(this, new GetPermissionConstantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/CreateCase", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateCaseResponse CreateCase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CreateCaseParams parameters) {
            object[] results = this.Invoke("CreateCase", new object[] {
                        parameters});
            return ((CreateCaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCaseAsync(CreateCaseParams parameters) {
            this.CreateCaseAsync(parameters, null);
        }
        
        /// <remarks/>
        public void CreateCaseAsync(CreateCaseParams parameters, object userState) {
            if ((this.CreateCaseOperationCompleted == null)) {
                this.CreateCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCaseOperationCompleted);
            }
            this.InvokeAsync("CreateCase", new object[] {
                        parameters}, this.CreateCaseOperationCompleted, userState);
        }
        
        private void OnCreateCaseOperationCompleted(object arg) {
            if ((this.CreateCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCaseCompleted(this, new CreateCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCase", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCaseResponse GetCase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCaseParams parameters) {
            object[] results = this.Invoke("GetCase", new object[] {
                        parameters});
            return ((GetCaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseAsync(GetCaseParams parameters) {
            this.GetCaseAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCaseAsync(GetCaseParams parameters, object userState) {
            if ((this.GetCaseOperationCompleted == null)) {
                this.GetCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseOperationCompleted);
            }
            this.InvokeAsync("GetCase", new object[] {
                        parameters}, this.GetCaseOperationCompleted, userState);
        }
        
        private void OnGetCaseOperationCompleted(object arg) {
            if ((this.GetCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseCompleted(this, new GetCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SaveCaseIndexData", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SaveCaseIndexDataResponse SaveCaseIndexData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SaveCaseIndexDataParams parameters) {
            object[] results = this.Invoke("SaveCaseIndexData", new object[] {
                        parameters});
            return ((SaveCaseIndexDataResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCaseIndexDataAsync(SaveCaseIndexDataParams parameters) {
            this.SaveCaseIndexDataAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SaveCaseIndexDataAsync(SaveCaseIndexDataParams parameters, object userState) {
            if ((this.SaveCaseIndexDataOperationCompleted == null)) {
                this.SaveCaseIndexDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCaseIndexDataOperationCompleted);
            }
            this.InvokeAsync("SaveCaseIndexData", new object[] {
                        parameters}, this.SaveCaseIndexDataOperationCompleted, userState);
        }
        
        private void OnSaveCaseIndexDataOperationCompleted(object arg) {
            if ((this.SaveCaseIndexDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCaseIndexDataCompleted(this, new SaveCaseIndexDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DeleteCase", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteCaseResponse DeleteCase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeleteCaseParams parameters) {
            object[] results = this.Invoke("DeleteCase", new object[] {
                        parameters});
            return ((DeleteCaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCaseAsync(DeleteCaseParams parameters) {
            this.DeleteCaseAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DeleteCaseAsync(DeleteCaseParams parameters, object userState) {
            if ((this.DeleteCaseOperationCompleted == null)) {
                this.DeleteCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCaseOperationCompleted);
            }
            this.InvokeAsync("DeleteCase", new object[] {
                        parameters}, this.DeleteCaseOperationCompleted, userState);
        }
        
        private void OnDeleteCaseOperationCompleted(object arg) {
            if ((this.DeleteCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCaseCompleted(this, new DeleteCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCaseDefinition", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCaseDefinitionResponse GetCaseDefinition([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCaseDefinitionParams parameters) {
            object[] results = this.Invoke("GetCaseDefinition", new object[] {
                        parameters});
            return ((GetCaseDefinitionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseDefinitionAsync(GetCaseDefinitionParams parameters) {
            this.GetCaseDefinitionAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCaseDefinitionAsync(GetCaseDefinitionParams parameters, object userState) {
            if ((this.GetCaseDefinitionOperationCompleted == null)) {
                this.GetCaseDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetCaseDefinition", new object[] {
                        parameters}, this.GetCaseDefinitionOperationCompleted, userState);
        }
        
        private void OnGetCaseDefinitionOperationCompleted(object arg) {
            if ((this.GetCaseDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseDefinitionCompleted(this, new GetCaseDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCaseDocuments", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCaseDocumentsResponse GetCaseDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCaseDocumentsParams parameters) {
            object[] results = this.Invoke("GetCaseDocuments", new object[] {
                        parameters});
            return ((GetCaseDocumentsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseDocumentsAsync(GetCaseDocumentsParams parameters) {
            this.GetCaseDocumentsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCaseDocumentsAsync(GetCaseDocumentsParams parameters, object userState) {
            if ((this.GetCaseDocumentsOperationCompleted == null)) {
                this.GetCaseDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetCaseDocuments", new object[] {
                        parameters}, this.GetCaseDocumentsOperationCompleted, userState);
        }
        
        private void OnGetCaseDocumentsOperationCompleted(object arg) {
            if ((this.GetCaseDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseDocumentsCompleted(this, new GetCaseDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCaseHistory", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCaseHistoryResponse GetCaseHistory([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCaseHistoryParams parameters) {
            object[] results = this.Invoke("GetCaseHistory", new object[] {
                        parameters});
            return ((GetCaseHistoryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseHistoryAsync(GetCaseHistoryParams parameters) {
            this.GetCaseHistoryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCaseHistoryAsync(GetCaseHistoryParams parameters, object userState) {
            if ((this.GetCaseHistoryOperationCompleted == null)) {
                this.GetCaseHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseHistoryOperationCompleted);
            }
            this.InvokeAsync("GetCaseHistory", new object[] {
                        parameters}, this.GetCaseHistoryOperationCompleted, userState);
        }
        
        private void OnGetCaseHistoryOperationCompleted(object arg) {
            if ((this.GetCaseHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseHistoryCompleted(this, new GetCaseHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteWorkflowQueryForProcess", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteWorkflowQueryForProcessResponse ExecuteWorkflowQueryForProcess([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteWorkflowQueryForProcessParams parameters) {
            object[] results = this.Invoke("ExecuteWorkflowQueryForProcess", new object[] {
                        parameters});
            return ((ExecuteWorkflowQueryForProcessResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteWorkflowQueryForProcessAsync(ExecuteWorkflowQueryForProcessParams parameters) {
            this.ExecuteWorkflowQueryForProcessAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteWorkflowQueryForProcessAsync(ExecuteWorkflowQueryForProcessParams parameters, object userState) {
            if ((this.ExecuteWorkflowQueryForProcessOperationCompleted == null)) {
                this.ExecuteWorkflowQueryForProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteWorkflowQueryForProcessOperationCompleted);
            }
            this.InvokeAsync("ExecuteWorkflowQueryForProcess", new object[] {
                        parameters}, this.ExecuteWorkflowQueryForProcessOperationCompleted, userState);
        }
        
        private void OnExecuteWorkflowQueryForProcessOperationCompleted(object arg) {
            if ((this.ExecuteWorkflowQueryForProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteWorkflowQueryForProcessCompleted(this, new ExecuteWorkflowQueryForProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteWorkflowQueryForAll", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteWorkflowQueryForAllResponse ExecuteWorkflowQueryForAll([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteWorkflowQueryForAllParams parameters) {
            object[] results = this.Invoke("ExecuteWorkflowQueryForAll", new object[] {
                        parameters});
            return ((ExecuteWorkflowQueryForAllResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteWorkflowQueryForAllAsync(ExecuteWorkflowQueryForAllParams parameters) {
            this.ExecuteWorkflowQueryForAllAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteWorkflowQueryForAllAsync(ExecuteWorkflowQueryForAllParams parameters, object userState) {
            if ((this.ExecuteWorkflowQueryForAllOperationCompleted == null)) {
                this.ExecuteWorkflowQueryForAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteWorkflowQueryForAllOperationCompleted);
            }
            this.InvokeAsync("ExecuteWorkflowQueryForAll", new object[] {
                        parameters}, this.ExecuteWorkflowQueryForAllOperationCompleted, userState);
        }
        
        private void OnExecuteWorkflowQueryForAllOperationCompleted(object arg) {
            if ((this.ExecuteWorkflowQueryForAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteWorkflowQueryForAllCompleted(this, new ExecuteWorkflowQueryForAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetWorkflowProcess", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetWorkflowProcessResponse GetWorkflowProcess([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetWorkflowProcessParams parameters) {
            object[] results = this.Invoke("GetWorkflowProcess", new object[] {
                        parameters});
            return ((GetWorkflowProcessResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkflowProcessAsync(GetWorkflowProcessParams parameters) {
            this.GetWorkflowProcessAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetWorkflowProcessAsync(GetWorkflowProcessParams parameters, object userState) {
            if ((this.GetWorkflowProcessOperationCompleted == null)) {
                this.GetWorkflowProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkflowProcessOperationCompleted);
            }
            this.InvokeAsync("GetWorkflowProcess", new object[] {
                        parameters}, this.GetWorkflowProcessOperationCompleted, userState);
        }
        
        private void OnGetWorkflowProcessOperationCompleted(object arg) {
            if ((this.GetWorkflowProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkflowProcessCompleted(this, new GetWorkflowProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetWorkflowInstanceResponse GetWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("GetWorkflowInstance", new object[] {
                        parameters});
            return ((GetWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkflowInstanceAsync(GetWorkflowInstanceParams parameters) {
            this.GetWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetWorkflowInstanceAsync(GetWorkflowInstanceParams parameters, object userState) {
            if ((this.GetWorkflowInstanceOperationCompleted == null)) {
                this.GetWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("GetWorkflowInstance", new object[] {
                        parameters}, this.GetWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnGetWorkflowInstanceOperationCompleted(object arg) {
            if ((this.GetWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkflowInstanceCompleted(this, new GetWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/StartWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StartWorkflowInstanceResponse StartWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StartWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("StartWorkflowInstance", new object[] {
                        parameters});
            return ((StartWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void StartWorkflowInstanceAsync(StartWorkflowInstanceParams parameters) {
            this.StartWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void StartWorkflowInstanceAsync(StartWorkflowInstanceParams parameters, object userState) {
            if ((this.StartWorkflowInstanceOperationCompleted == null)) {
                this.StartWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("StartWorkflowInstance", new object[] {
                        parameters}, this.StartWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnStartWorkflowInstanceOperationCompleted(object arg) {
            if ((this.StartWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartWorkflowInstanceCompleted(this, new StartWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ClaimWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClaimWorkflowInstanceResponse ClaimWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ClaimWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("ClaimWorkflowInstance", new object[] {
                        parameters});
            return ((ClaimWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ClaimWorkflowInstanceAsync(ClaimWorkflowInstanceParams parameters) {
            this.ClaimWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ClaimWorkflowInstanceAsync(ClaimWorkflowInstanceParams parameters, object userState) {
            if ((this.ClaimWorkflowInstanceOperationCompleted == null)) {
                this.ClaimWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("ClaimWorkflowInstance", new object[] {
                        parameters}, this.ClaimWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnClaimWorkflowInstanceOperationCompleted(object arg) {
            if ((this.ClaimWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimWorkflowInstanceCompleted(this, new ClaimWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DisclaimWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DisclaimWorkflowInstanceResponse DisclaimWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DisclaimWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("DisclaimWorkflowInstance", new object[] {
                        parameters});
            return ((DisclaimWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DisclaimWorkflowInstanceAsync(DisclaimWorkflowInstanceParams parameters) {
            this.DisclaimWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DisclaimWorkflowInstanceAsync(DisclaimWorkflowInstanceParams parameters, object userState) {
            if ((this.DisclaimWorkflowInstanceOperationCompleted == null)) {
                this.DisclaimWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisclaimWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("DisclaimWorkflowInstance", new object[] {
                        parameters}, this.DisclaimWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnDisclaimWorkflowInstanceOperationCompleted(object arg) {
            if ((this.DisclaimWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisclaimWorkflowInstanceCompleted(this, new DisclaimWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DelegateWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DelegateWorkflowInstanceResponse DelegateWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DelegateWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("DelegateWorkflowInstance", new object[] {
                        parameters});
            return ((DelegateWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DelegateWorkflowInstanceAsync(DelegateWorkflowInstanceParams parameters) {
            this.DelegateWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DelegateWorkflowInstanceAsync(DelegateWorkflowInstanceParams parameters, object userState) {
            if ((this.DelegateWorkflowInstanceOperationCompleted == null)) {
                this.DelegateWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelegateWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("DelegateWorkflowInstance", new object[] {
                        parameters}, this.DelegateWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnDelegateWorkflowInstanceOperationCompleted(object arg) {
            if ((this.DelegateWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelegateWorkflowInstanceCompleted(this, new DelegateWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DeleteWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteWorkflowInstanceResponse DeleteWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeleteWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("DeleteWorkflowInstance", new object[] {
                        parameters});
            return ((DeleteWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWorkflowInstanceAsync(DeleteWorkflowInstanceParams parameters) {
            this.DeleteWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DeleteWorkflowInstanceAsync(DeleteWorkflowInstanceParams parameters, object userState) {
            if ((this.DeleteWorkflowInstanceOperationCompleted == null)) {
                this.DeleteWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkflowInstance", new object[] {
                        parameters}, this.DeleteWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnDeleteWorkflowInstanceOperationCompleted(object arg) {
            if ((this.DeleteWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkflowInstanceCompleted(this, new DeleteWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/FinishCurrentWorkflowTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FinishCurrentWorkflowTaskResponse FinishCurrentWorkflowTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FinishCurrentWorkflowTaskParams parameters) {
            object[] results = this.Invoke("FinishCurrentWorkflowTask", new object[] {
                        parameters});
            return ((FinishCurrentWorkflowTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void FinishCurrentWorkflowTaskAsync(FinishCurrentWorkflowTaskParams parameters) {
            this.FinishCurrentWorkflowTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void FinishCurrentWorkflowTaskAsync(FinishCurrentWorkflowTaskParams parameters, object userState) {
            if ((this.FinishCurrentWorkflowTaskOperationCompleted == null)) {
                this.FinishCurrentWorkflowTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishCurrentWorkflowTaskOperationCompleted);
            }
            this.InvokeAsync("FinishCurrentWorkflowTask", new object[] {
                        parameters}, this.FinishCurrentWorkflowTaskOperationCompleted, userState);
        }
        
        private void OnFinishCurrentWorkflowTaskOperationCompleted(object arg) {
            if ((this.FinishCurrentWorkflowTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishCurrentWorkflowTaskCompleted(this, new FinishCurrentWorkflowTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SetChecklistItemWorkflow", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SetChecklistItemWorkflowResponse SetChecklistItemWorkflow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SetChecklistItemWorkflowParams parameters) {
            object[] results = this.Invoke("SetChecklistItemWorkflow", new object[] {
                        parameters});
            return ((SetChecklistItemWorkflowResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetChecklistItemWorkflowAsync(SetChecklistItemWorkflowParams parameters) {
            this.SetChecklistItemWorkflowAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SetChecklistItemWorkflowAsync(SetChecklistItemWorkflowParams parameters, object userState) {
            if ((this.SetChecklistItemWorkflowOperationCompleted == null)) {
                this.SetChecklistItemWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetChecklistItemWorkflowOperationCompleted);
            }
            this.InvokeAsync("SetChecklistItemWorkflow", new object[] {
                        parameters}, this.SetChecklistItemWorkflowOperationCompleted, userState);
        }
        
        private void OnSetChecklistItemWorkflowOperationCompleted(object arg) {
            if ((this.SetChecklistItemWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetChecklistItemWorkflowCompleted(this, new SetChecklistItemWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SetTextInfoWorkflow", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SetTextInfoWorkflowResponse SetTextInfoWorkflow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SetTextInfoWorkflowParams parameters) {
            object[] results = this.Invoke("SetTextInfoWorkflow", new object[] {
                        parameters});
            return ((SetTextInfoWorkflowResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetTextInfoWorkflowAsync(SetTextInfoWorkflowParams parameters) {
            this.SetTextInfoWorkflowAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SetTextInfoWorkflowAsync(SetTextInfoWorkflowParams parameters, object userState) {
            if ((this.SetTextInfoWorkflowOperationCompleted == null)) {
                this.SetTextInfoWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTextInfoWorkflowOperationCompleted);
            }
            this.InvokeAsync("SetTextInfoWorkflow", new object[] {
                        parameters}, this.SetTextInfoWorkflowOperationCompleted, userState);
        }
        
        private void OnSetTextInfoWorkflowOperationCompleted(object arg) {
            if ((this.SetTextInfoWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTextInfoWorkflowCompleted(this, new SetTextInfoWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/LinkDocuments", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LinkDocumentsResponse LinkDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] LinkDocumentsParams parameters) {
            object[] results = this.Invoke("LinkDocuments", new object[] {
                        parameters});
            return ((LinkDocumentsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LinkDocumentsAsync(LinkDocumentsParams parameters) {
            this.LinkDocumentsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void LinkDocumentsAsync(LinkDocumentsParams parameters, object userState) {
            if ((this.LinkDocumentsOperationCompleted == null)) {
                this.LinkDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkDocumentsOperationCompleted);
            }
            this.InvokeAsync("LinkDocuments", new object[] {
                        parameters}, this.LinkDocumentsOperationCompleted, userState);
        }
        
        private void OnLinkDocumentsOperationCompleted(object arg) {
            if ((this.LinkDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkDocumentsCompleted(this, new LinkDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UnlinkDocuments", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UnlinkDocumentsResponse UnlinkDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UnlinkDocumentsParams parameters) {
            object[] results = this.Invoke("UnlinkDocuments", new object[] {
                        parameters});
            return ((UnlinkDocumentsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UnlinkDocumentsAsync(UnlinkDocumentsParams parameters) {
            this.UnlinkDocumentsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UnlinkDocumentsAsync(UnlinkDocumentsParams parameters, object userState) {
            if ((this.UnlinkDocumentsOperationCompleted == null)) {
                this.UnlinkDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlinkDocumentsOperationCompleted);
            }
            this.InvokeAsync("UnlinkDocuments", new object[] {
                        parameters}, this.UnlinkDocumentsOperationCompleted, userState);
        }
        
        private void OnUnlinkDocumentsOperationCompleted(object arg) {
            if ((this.UnlinkDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlinkDocumentsCompleted(this, new UnlinkDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/LinkDocAndWFInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LinkDocAndWFInstanceResponse LinkDocAndWFInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] LinkDocAndWFInstanceParams parameters) {
            object[] results = this.Invoke("LinkDocAndWFInstance", new object[] {
                        parameters});
            return ((LinkDocAndWFInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LinkDocAndWFInstanceAsync(LinkDocAndWFInstanceParams parameters) {
            this.LinkDocAndWFInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void LinkDocAndWFInstanceAsync(LinkDocAndWFInstanceParams parameters, object userState) {
            if ((this.LinkDocAndWFInstanceOperationCompleted == null)) {
                this.LinkDocAndWFInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkDocAndWFInstanceOperationCompleted);
            }
            this.InvokeAsync("LinkDocAndWFInstance", new object[] {
                        parameters}, this.LinkDocAndWFInstanceOperationCompleted, userState);
        }
        
        private void OnLinkDocAndWFInstanceOperationCompleted(object arg) {
            if ((this.LinkDocAndWFInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkDocAndWFInstanceCompleted(this, new LinkDocAndWFInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UnlinkDocAndWFInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UnlinkDocAndWFInstanceResponse UnlinkDocAndWFInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UnlinkDocAndWFInstanceParams parameters) {
            object[] results = this.Invoke("UnlinkDocAndWFInstance", new object[] {
                        parameters});
            return ((UnlinkDocAndWFInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UnlinkDocAndWFInstanceAsync(UnlinkDocAndWFInstanceParams parameters) {
            this.UnlinkDocAndWFInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UnlinkDocAndWFInstanceAsync(UnlinkDocAndWFInstanceParams parameters, object userState) {
            if ((this.UnlinkDocAndWFInstanceOperationCompleted == null)) {
                this.UnlinkDocAndWFInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlinkDocAndWFInstanceOperationCompleted);
            }
            this.InvokeAsync("UnlinkDocAndWFInstance", new object[] {
                        parameters}, this.UnlinkDocAndWFInstanceOperationCompleted, userState);
        }
        
        private void OnUnlinkDocAndWFInstanceOperationCompleted(object arg) {
            if ((this.UnlinkDocAndWFInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlinkDocAndWFInstanceCompleted(this, new UnlinkDocAndWFInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetLinkedObjects", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetLinkedObjectsResponse GetLinkedObjects([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetLinkedObjectsParams parameters) {
            object[] results = this.Invoke("GetLinkedObjects", new object[] {
                        parameters});
            return ((GetLinkedObjectsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedObjectsAsync(GetLinkedObjectsParams parameters) {
            this.GetLinkedObjectsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetLinkedObjectsAsync(GetLinkedObjectsParams parameters, object userState) {
            if ((this.GetLinkedObjectsOperationCompleted == null)) {
                this.GetLinkedObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedObjectsOperationCompleted);
            }
            this.InvokeAsync("GetLinkedObjects", new object[] {
                        parameters}, this.GetLinkedObjectsOperationCompleted, userState);
        }
        
        private void OnGetLinkedObjectsOperationCompleted(object arg) {
            if ((this.GetLinkedObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedObjectsCompleted(this, new GetLinkedObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetLinkedWorkflowsForDoc", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetLinkedWorkflowsForDocResponse GetLinkedWorkflowsForDoc([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetLinkedWorkflowsForDocParams parameters) {
            object[] results = this.Invoke("GetLinkedWorkflowsForDoc", new object[] {
                        parameters});
            return ((GetLinkedWorkflowsForDocResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedWorkflowsForDocAsync(GetLinkedWorkflowsForDocParams parameters) {
            this.GetLinkedWorkflowsForDocAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetLinkedWorkflowsForDocAsync(GetLinkedWorkflowsForDocParams parameters, object userState) {
            if ((this.GetLinkedWorkflowsForDocOperationCompleted == null)) {
                this.GetLinkedWorkflowsForDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedWorkflowsForDocOperationCompleted);
            }
            this.InvokeAsync("GetLinkedWorkflowsForDoc", new object[] {
                        parameters}, this.GetLinkedWorkflowsForDocOperationCompleted, userState);
        }
        
        private void OnGetLinkedWorkflowsForDocOperationCompleted(object arg) {
            if ((this.GetLinkedWorkflowsForDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedWorkflowsForDocCompleted(this, new GetLinkedWorkflowsForDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/StartTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StartTaskResponse StartTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StartTaskParams parameters) {
            object[] results = this.Invoke("StartTask", new object[] {
                        parameters});
            return ((StartTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void StartTaskAsync(StartTaskParams parameters) {
            this.StartTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void StartTaskAsync(StartTaskParams parameters, object userState) {
            if ((this.StartTaskOperationCompleted == null)) {
                this.StartTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartTaskOperationCompleted);
            }
            this.InvokeAsync("StartTask", new object[] {
                        parameters}, this.StartTaskOperationCompleted, userState);
        }
        
        private void OnStartTaskOperationCompleted(object arg) {
            if ((this.StartTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartTaskCompleted(this, new StartTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetTaskResponse GetTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetTaskParams parameters) {
            object[] results = this.Invoke("GetTask", new object[] {
                        parameters});
            return ((GetTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskAsync(GetTaskParams parameters) {
            this.GetTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetTaskAsync(GetTaskParams parameters, object userState) {
            if ((this.GetTaskOperationCompleted == null)) {
                this.GetTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskOperationCompleted);
            }
            this.InvokeAsync("GetTask", new object[] {
                        parameters}, this.GetTaskOperationCompleted, userState);
        }
        
        private void OnGetTaskOperationCompleted(object arg) {
            if ((this.GetTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskCompleted(this, new GetTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetTaskInfo", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetTaskInfoResponse GetTaskInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetTaskInfoParams parameters) {
            object[] results = this.Invoke("GetTaskInfo", new object[] {
                        parameters});
            return ((GetTaskInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskInfoAsync(GetTaskInfoParams parameters) {
            this.GetTaskInfoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetTaskInfoAsync(GetTaskInfoParams parameters, object userState) {
            if ((this.GetTaskInfoOperationCompleted == null)) {
                this.GetTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskInfoOperationCompleted);
            }
            this.InvokeAsync("GetTaskInfo", new object[] {
                        parameters}, this.GetTaskInfoOperationCompleted, userState);
        }
        
        private void OnGetTaskInfoOperationCompleted(object arg) {
            if ((this.GetTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskInfoCompleted(this, new GetTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UpdateTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UpdateTaskResponse UpdateTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UpdateTaskParams parameters) {
            object[] results = this.Invoke("UpdateTask", new object[] {
                        parameters});
            return ((UpdateTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTaskAsync(UpdateTaskParams parameters) {
            this.UpdateTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UpdateTaskAsync(UpdateTaskParams parameters, object userState) {
            if ((this.UpdateTaskOperationCompleted == null)) {
                this.UpdateTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaskOperationCompleted);
            }
            this.InvokeAsync("UpdateTask", new object[] {
                        parameters}, this.UpdateTaskOperationCompleted, userState);
        }
        
        private void OnUpdateTaskOperationCompleted(object arg) {
            if ((this.UpdateTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaskCompleted(this, new UpdateTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DeleteTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteTaskResponse DeleteTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeleteTaskParams parameters) {
            object[] results = this.Invoke("DeleteTask", new object[] {
                        parameters});
            return ((DeleteTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(DeleteTaskParams parameters) {
            this.DeleteTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(DeleteTaskParams parameters, object userState) {
            if ((this.DeleteTaskOperationCompleted == null)) {
                this.DeleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTaskOperationCompleted);
            }
            this.InvokeAsync("DeleteTask", new object[] {
                        parameters}, this.DeleteTaskOperationCompleted, userState);
        }
        
        private void OnDeleteTaskOperationCompleted(object arg) {
            if ((this.DeleteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTaskCompleted(this, new DeleteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SetTaskStatus", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SetTaskStatusResponse SetTaskStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SetTaskStatusParams parameters) {
            object[] results = this.Invoke("SetTaskStatus", new object[] {
                        parameters});
            return ((SetTaskStatusResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetTaskStatusAsync(SetTaskStatusParams parameters) {
            this.SetTaskStatusAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SetTaskStatusAsync(SetTaskStatusParams parameters, object userState) {
            if ((this.SetTaskStatusOperationCompleted == null)) {
                this.SetTaskStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTaskStatusOperationCompleted);
            }
            this.InvokeAsync("SetTaskStatus", new object[] {
                        parameters}, this.SetTaskStatusOperationCompleted, userState);
        }
        
        private void OnSetTaskStatusOperationCompleted(object arg) {
            if ((this.SetTaskStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTaskStatusCompleted(this, new SetTaskStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UpdateTaskComment", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UpdateTaskCommentResponse UpdateTaskComment([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UpdateTaskCommentParams parameters) {
            object[] results = this.Invoke("UpdateTaskComment", new object[] {
                        parameters});
            return ((UpdateTaskCommentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTaskCommentAsync(UpdateTaskCommentParams parameters) {
            this.UpdateTaskCommentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UpdateTaskCommentAsync(UpdateTaskCommentParams parameters, object userState) {
            if ((this.UpdateTaskCommentOperationCompleted == null)) {
                this.UpdateTaskCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaskCommentOperationCompleted);
            }
            this.InvokeAsync("UpdateTaskComment", new object[] {
                        parameters}, this.UpdateTaskCommentOperationCompleted, userState);
        }
        
        private void OnUpdateTaskCommentOperationCompleted(object arg) {
            if ((this.UpdateTaskCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaskCommentCompleted(this, new UpdateTaskCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/CompleteTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CompleteTaskResponse CompleteTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CompleteTaskParams parameters) {
            object[] results = this.Invoke("CompleteTask", new object[] {
                        parameters});
            return ((CompleteTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteTaskAsync(CompleteTaskParams parameters) {
            this.CompleteTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void CompleteTaskAsync(CompleteTaskParams parameters, object userState) {
            if ((this.CompleteTaskOperationCompleted == null)) {
                this.CompleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteTaskOperationCompleted);
            }
            this.InvokeAsync("CompleteTask", new object[] {
                        parameters}, this.CompleteTaskOperationCompleted, userState);
        }
        
        private void OnCompleteTaskOperationCompleted(object arg) {
            if ((this.CompleteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteTaskCompleted(this, new CompleteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteTaskInfoQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteTaskInfoQueryResponse ExecuteTaskInfoQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteTaskInfoQueryParams parameters) {
            object[] results = this.Invoke("ExecuteTaskInfoQuery", new object[] {
                        parameters});
            return ((ExecuteTaskInfoQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteTaskInfoQueryAsync(ExecuteTaskInfoQueryParams parameters) {
            this.ExecuteTaskInfoQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteTaskInfoQueryAsync(ExecuteTaskInfoQueryParams parameters, object userState) {
            if ((this.ExecuteTaskInfoQueryOperationCompleted == null)) {
                this.ExecuteTaskInfoQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteTaskInfoQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteTaskInfoQuery", new object[] {
                        parameters}, this.ExecuteTaskInfoQueryOperationCompleted, userState);
        }
        
        private void OnExecuteTaskInfoQueryOperationCompleted(object arg) {
            if ((this.ExecuteTaskInfoQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteTaskInfoQueryCompleted(this, new ExecuteTaskInfoQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetSettingString", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetSettingStringResponse GetSettingString([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetSettingStringParams parameters) {
            object[] results = this.Invoke("GetSettingString", new object[] {
                        parameters});
            return ((GetSettingStringResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettingStringAsync(GetSettingStringParams parameters) {
            this.GetSettingStringAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetSettingStringAsync(GetSettingStringParams parameters, object userState) {
            if ((this.GetSettingStringOperationCompleted == null)) {
                this.GetSettingStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettingStringOperationCompleted);
            }
            this.InvokeAsync("GetSettingString", new object[] {
                        parameters}, this.GetSettingStringOperationCompleted, userState);
        }
        
        private void OnGetSettingStringOperationCompleted(object arg) {
            if ((this.GetSettingStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettingStringCompleted(this, new GetSettingStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetSettingInt", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetSettingIntResponse GetSettingInt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetSettingIntParams parameters) {
            object[] results = this.Invoke("GetSettingInt", new object[] {
                        parameters});
            return ((GetSettingIntResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettingIntAsync(GetSettingIntParams parameters) {
            this.GetSettingIntAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetSettingIntAsync(GetSettingIntParams parameters, object userState) {
            if ((this.GetSettingIntOperationCompleted == null)) {
                this.GetSettingIntOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettingIntOperationCompleted);
            }
            this.InvokeAsync("GetSettingInt", new object[] {
                        parameters}, this.GetSettingIntOperationCompleted, userState);
        }
        
        private void OnGetSettingIntOperationCompleted(object arg) {
            if ((this.GetSettingIntCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettingIntCompleted(this, new GetSettingIntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetReportDefinition", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetReportDefinitionResponse GetReportDefinition([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetReportDefinitionParams parameters) {
            object[] results = this.Invoke("GetReportDefinition", new object[] {
                        parameters});
            return ((GetReportDefinitionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportDefinitionAsync(GetReportDefinitionParams parameters) {
            this.GetReportDefinitionAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetReportDefinitionAsync(GetReportDefinitionParams parameters, object userState) {
            if ((this.GetReportDefinitionOperationCompleted == null)) {
                this.GetReportDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetReportDefinition", new object[] {
                        parameters}, this.GetReportDefinitionOperationCompleted, userState);
        }
        
        private void OnGetReportDefinitionOperationCompleted(object arg) {
            if ((this.GetReportDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportDefinitionCompleted(this, new GetReportDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteReport", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteReportResponse ExecuteReport([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteReportParams parameters) {
            object[] results = this.Invoke("ExecuteReport", new object[] {
                        parameters});
            return ((ExecuteReportResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteReportAsync(ExecuteReportParams parameters) {
            this.ExecuteReportAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteReportAsync(ExecuteReportParams parameters, object userState) {
            if ((this.ExecuteReportOperationCompleted == null)) {
                this.ExecuteReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteReportOperationCompleted);
            }
            this.InvokeAsync("ExecuteReport", new object[] {
                        parameters}, this.ExecuteReportOperationCompleted, userState);
        }
        
        private void OnExecuteReportOperationCompleted(object arg) {
            if ((this.ExecuteReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteReportCompleted(this, new ExecuteReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetKeywordsByFieldNo", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetKeywordsByFieldNoResponse GetKeywordsByFieldNo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetKeywordsByFieldNoParams parameters) {
            object[] results = this.Invoke("GetKeywordsByFieldNo", new object[] {
                        parameters});
            return ((GetKeywordsByFieldNoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeywordsByFieldNoAsync(GetKeywordsByFieldNoParams parameters) {
            this.GetKeywordsByFieldNoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetKeywordsByFieldNoAsync(GetKeywordsByFieldNoParams parameters, object userState) {
            if ((this.GetKeywordsByFieldNoOperationCompleted == null)) {
                this.GetKeywordsByFieldNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeywordsByFieldNoOperationCompleted);
            }
            this.InvokeAsync("GetKeywordsByFieldNo", new object[] {
                        parameters}, this.GetKeywordsByFieldNoOperationCompleted, userState);
        }
        
        private void OnGetKeywordsByFieldNoOperationCompleted(object arg) {
            if ((this.GetKeywordsByFieldNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeywordsByFieldNoCompleted(this, new GetKeywordsByFieldNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDictionaryInfo", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDictionaryInfoResponse GetDictionaryInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDictionaryInfoParams parameters) {
            object[] results = this.Invoke("GetDictionaryInfo", new object[] {
                        parameters});
            return ((GetDictionaryInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDictionaryInfoAsync(GetDictionaryInfoParams parameters) {
            this.GetDictionaryInfoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDictionaryInfoAsync(GetDictionaryInfoParams parameters, object userState) {
            if ((this.GetDictionaryInfoOperationCompleted == null)) {
                this.GetDictionaryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictionaryInfoOperationCompleted);
            }
            this.InvokeAsync("GetDictionaryInfo", new object[] {
                        parameters}, this.GetDictionaryInfoOperationCompleted, userState);
        }
        
        private void OnGetDictionaryInfoOperationCompleted(object arg) {
            if ((this.GetDictionaryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictionaryInfoCompleted(this, new GetDictionaryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/AddDictionaryKeyword", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AddDictionaryKeywordResponse AddDictionaryKeyword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AddDictionaryKeywordParams parameters) {
            object[] results = this.Invoke("AddDictionaryKeyword", new object[] {
                        parameters});
            return ((AddDictionaryKeywordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddDictionaryKeywordAsync(AddDictionaryKeywordParams parameters) {
            this.AddDictionaryKeywordAsync(parameters, null);
        }
        
        /// <remarks/>
        public void AddDictionaryKeywordAsync(AddDictionaryKeywordParams parameters, object userState) {
            if ((this.AddDictionaryKeywordOperationCompleted == null)) {
                this.AddDictionaryKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDictionaryKeywordOperationCompleted);
            }
            this.InvokeAsync("AddDictionaryKeyword", new object[] {
                        parameters}, this.AddDictionaryKeywordOperationCompleted, userState);
        }
        
        private void OnAddDictionaryKeywordOperationCompleted(object arg) {
            if ((this.AddDictionaryKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDictionaryKeywordCompleted(this, new AddDictionaryKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DeleteDictionaryKeyword", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteDictionaryKeywordResponse DeleteDictionaryKeyword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeleteDictionaryKeywordParams parameters) {
            object[] results = this.Invoke("DeleteDictionaryKeyword", new object[] {
                        parameters});
            return ((DeleteDictionaryKeywordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDictionaryKeywordAsync(DeleteDictionaryKeywordParams parameters) {
            this.DeleteDictionaryKeywordAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DeleteDictionaryKeywordAsync(DeleteDictionaryKeywordParams parameters, object userState) {
            if ((this.DeleteDictionaryKeywordOperationCompleted == null)) {
                this.DeleteDictionaryKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDictionaryKeywordOperationCompleted);
            }
            this.InvokeAsync("DeleteDictionaryKeyword", new object[] {
                        parameters}, this.DeleteDictionaryKeywordOperationCompleted, userState);
        }
        
        private void OnDeleteDictionaryKeywordOperationCompleted(object arg) {
            if ((this.DeleteDictionaryKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDictionaryKeywordCompleted(this, new DeleteDictionaryKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UpdateDictionaryKeyword", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UpdateDictionaryKeywordResponse UpdateDictionaryKeyword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UpdateDictionaryKeywordParams parameters) {
            object[] results = this.Invoke("UpdateDictionaryKeyword", new object[] {
                        parameters});
            return ((UpdateDictionaryKeywordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDictionaryKeywordAsync(UpdateDictionaryKeywordParams parameters) {
            this.UpdateDictionaryKeywordAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UpdateDictionaryKeywordAsync(UpdateDictionaryKeywordParams parameters, object userState) {
            if ((this.UpdateDictionaryKeywordOperationCompleted == null)) {
                this.UpdateDictionaryKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDictionaryKeywordOperationCompleted);
            }
            this.InvokeAsync("UpdateDictionaryKeyword", new object[] {
                        parameters}, this.UpdateDictionaryKeywordOperationCompleted, userState);
        }
        
        private void OnUpdateDictionaryKeywordOperationCompleted(object arg) {
            if ((this.UpdateDictionaryKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDictionaryKeywordCompleted(this, new UpdateDictionaryKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://www.w3.org/ns/ws-policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ThereforeWS0001_SoapWinCredentials", Namespace="http://schemas.therefore.net/webservices/interop/v0001/messages")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSIndexDataBase))]
    public partial class ThereforeWS0001_SoapWinCredentials : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartCreateDocumentBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocStreamToBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitCreateDocumentBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStreamsToDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartUpdateDocumentBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitUpdateDocumentBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FillDependentFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentIndexDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDocumentIndexDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateLinkFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConvertedDocStreamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentCheckoutStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThumbnailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSimpleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuerySpecificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSingleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteAsyncSingleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextSingleQueryRowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseSingleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteMultiQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteAsyncMultiQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextMultiQueryRowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseMultiQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteFullTextQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteAsyncFullTextQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextFullTextQueryRowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseFullTextQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoriesTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTreeViewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeViewChildNodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeViewNodeDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectedUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteUsersQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebAPIServerVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermissionConstantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCaseIndexDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteWorkflowQueryForProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteWorkflowQueryForAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkflowProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClaimWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisclaimWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelegateWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkflowInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishCurrentWorkflowTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetChecklistItemWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTextInfoWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlinkDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkDocAndWFInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlinkDocAndWFInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedWorkflowsForDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTaskStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaskCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteTaskInfoQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettingStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettingIntOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeywordsByFieldNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDictionaryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDictionaryKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDictionaryKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDictionaryKeywordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ThereforeWS0001_SoapWinCredentials() {
            this.Url = "http://therefore-server-name:8000/theservice/v0001/soapwin";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateDocumentCompletedEventHandler CreateDocumentCompleted;
        
        /// <remarks/>
        public event StartCreateDocumentBatchCompletedEventHandler StartCreateDocumentBatchCompleted;
        
        /// <remarks/>
        public event UploadDocStreamToBatchCompletedEventHandler UploadDocStreamToBatchCompleted;
        
        /// <remarks/>
        public event SubmitCreateDocumentBatchCompletedEventHandler SubmitCreateDocumentBatchCompleted;
        
        /// <remarks/>
        public event UpdateDocumentCompletedEventHandler UpdateDocumentCompleted;
        
        /// <remarks/>
        public event AddStreamsToDocumentCompletedEventHandler AddStreamsToDocumentCompleted;
        
        /// <remarks/>
        public event StartUpdateDocumentBatchCompletedEventHandler StartUpdateDocumentBatchCompleted;
        
        /// <remarks/>
        public event SubmitUpdateDocumentBatchCompletedEventHandler SubmitUpdateDocumentBatchCompleted;
        
        /// <remarks/>
        public event GetCategoryInfoCompletedEventHandler GetCategoryInfoCompleted;
        
        /// <remarks/>
        public event FillDependentFieldsCompletedEventHandler FillDependentFieldsCompleted;
        
        /// <remarks/>
        public event GetDocumentIndexDataCompletedEventHandler GetDocumentIndexDataCompleted;
        
        /// <remarks/>
        public event SaveDocumentIndexDataCompletedEventHandler SaveDocumentIndexDataCompleted;
        
        /// <remarks/>
        public event CreateLinkFileCompletedEventHandler CreateLinkFileCompleted;
        
        /// <remarks/>
        public event GetDocumentCompletedEventHandler GetDocumentCompleted;
        
        /// <remarks/>
        public event GetDocumentStreamCompletedEventHandler GetDocumentStreamCompleted;
        
        /// <remarks/>
        public event GetConvertedDocStreamsCompletedEventHandler GetConvertedDocStreamsCompleted;
        
        /// <remarks/>
        public event GetDocumentCheckoutStatusCompletedEventHandler GetDocumentCheckoutStatusCompleted;
        
        /// <remarks/>
        public event GetThumbnailCompletedEventHandler GetThumbnailCompleted;
        
        /// <remarks/>
        public event GetDocumentPropertiesCompletedEventHandler GetDocumentPropertiesCompleted;
        
        /// <remarks/>
        public event DeleteDocumentCompletedEventHandler DeleteDocumentCompleted;
        
        /// <remarks/>
        public event ExecuteSimpleQueryCompletedEventHandler ExecuteSimpleQueryCompleted;
        
        /// <remarks/>
        public event GetQuerySpecificationCompletedEventHandler GetQuerySpecificationCompleted;
        
        /// <remarks/>
        public event ExecuteSingleQueryCompletedEventHandler ExecuteSingleQueryCompleted;
        
        /// <remarks/>
        public event ExecuteAsyncSingleQueryCompletedEventHandler ExecuteAsyncSingleQueryCompleted;
        
        /// <remarks/>
        public event GetNextSingleQueryRowsCompletedEventHandler GetNextSingleQueryRowsCompleted;
        
        /// <remarks/>
        public event ReleaseSingleQueryCompletedEventHandler ReleaseSingleQueryCompleted;
        
        /// <remarks/>
        public event ExecuteMultiQueryCompletedEventHandler ExecuteMultiQueryCompleted;
        
        /// <remarks/>
        public event ExecuteAsyncMultiQueryCompletedEventHandler ExecuteAsyncMultiQueryCompleted;
        
        /// <remarks/>
        public event GetNextMultiQueryRowsCompletedEventHandler GetNextMultiQueryRowsCompleted;
        
        /// <remarks/>
        public event ReleaseMultiQueryCompletedEventHandler ReleaseMultiQueryCompleted;
        
        /// <remarks/>
        public event ExecuteFullTextQueryCompletedEventHandler ExecuteFullTextQueryCompleted;
        
        /// <remarks/>
        public event ExecuteAsyncFullTextQueryCompletedEventHandler ExecuteAsyncFullTextQueryCompleted;
        
        /// <remarks/>
        public event GetNextFullTextQueryRowsCompletedEventHandler GetNextFullTextQueryRowsCompleted;
        
        /// <remarks/>
        public event ReleaseFullTextQueryCompletedEventHandler ReleaseFullTextQueryCompleted;
        
        /// <remarks/>
        public event GetCategoriesTreeCompletedEventHandler GetCategoriesTreeCompleted;
        
        /// <remarks/>
        public event GetDomainInfoCompletedEventHandler GetDomainInfoCompleted;
        
        /// <remarks/>
        public event GetAllTreeViewsCompletedEventHandler GetAllTreeViewsCompleted;
        
        /// <remarks/>
        public event GetTreeViewChildNodesCompletedEventHandler GetTreeViewChildNodesCompleted;
        
        /// <remarks/>
        public event GetTreeViewNodeDocumentsCompletedEventHandler GetTreeViewNodeDocumentsCompleted;
        
        /// <remarks/>
        public event GetConnectedUserCompletedEventHandler GetConnectedUserCompleted;
        
        /// <remarks/>
        public event ExecuteUsersQueryCompletedEventHandler ExecuteUsersQueryCompleted;
        
        /// <remarks/>
        public event GetWebAPIServerVersionCompletedEventHandler GetWebAPIServerVersionCompleted;
        
        /// <remarks/>
        public event HasPermissionsCompletedEventHandler HasPermissionsCompleted;
        
        /// <remarks/>
        public event GetObjectsCompletedEventHandler GetObjectsCompleted;
        
        /// <remarks/>
        public event GetObjectRightsCompletedEventHandler GetObjectRightsCompleted;
        
        /// <remarks/>
        public event GetPermissionConstantsCompletedEventHandler GetPermissionConstantsCompleted;
        
        /// <remarks/>
        public event CreateCaseCompletedEventHandler CreateCaseCompleted;
        
        /// <remarks/>
        public event GetCaseCompletedEventHandler GetCaseCompleted;
        
        /// <remarks/>
        public event SaveCaseIndexDataCompletedEventHandler SaveCaseIndexDataCompleted;
        
        /// <remarks/>
        public event DeleteCaseCompletedEventHandler DeleteCaseCompleted;
        
        /// <remarks/>
        public event GetCaseDefinitionCompletedEventHandler GetCaseDefinitionCompleted;
        
        /// <remarks/>
        public event GetCaseDocumentsCompletedEventHandler GetCaseDocumentsCompleted;
        
        /// <remarks/>
        public event GetCaseHistoryCompletedEventHandler GetCaseHistoryCompleted;
        
        /// <remarks/>
        public event ExecuteWorkflowQueryForProcessCompletedEventHandler ExecuteWorkflowQueryForProcessCompleted;
        
        /// <remarks/>
        public event ExecuteWorkflowQueryForAllCompletedEventHandler ExecuteWorkflowQueryForAllCompleted;
        
        /// <remarks/>
        public event GetWorkflowProcessCompletedEventHandler GetWorkflowProcessCompleted;
        
        /// <remarks/>
        public event GetWorkflowInstanceCompletedEventHandler GetWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event StartWorkflowInstanceCompletedEventHandler StartWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event ClaimWorkflowInstanceCompletedEventHandler ClaimWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event DisclaimWorkflowInstanceCompletedEventHandler DisclaimWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event DelegateWorkflowInstanceCompletedEventHandler DelegateWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event DeleteWorkflowInstanceCompletedEventHandler DeleteWorkflowInstanceCompleted;
        
        /// <remarks/>
        public event FinishCurrentWorkflowTaskCompletedEventHandler FinishCurrentWorkflowTaskCompleted;
        
        /// <remarks/>
        public event SetChecklistItemWorkflowCompletedEventHandler SetChecklistItemWorkflowCompleted;
        
        /// <remarks/>
        public event SetTextInfoWorkflowCompletedEventHandler SetTextInfoWorkflowCompleted;
        
        /// <remarks/>
        public event LinkDocumentsCompletedEventHandler LinkDocumentsCompleted;
        
        /// <remarks/>
        public event UnlinkDocumentsCompletedEventHandler UnlinkDocumentsCompleted;
        
        /// <remarks/>
        public event LinkDocAndWFInstanceCompletedEventHandler LinkDocAndWFInstanceCompleted;
        
        /// <remarks/>
        public event UnlinkDocAndWFInstanceCompletedEventHandler UnlinkDocAndWFInstanceCompleted;
        
        /// <remarks/>
        public event GetLinkedObjectsCompletedEventHandler GetLinkedObjectsCompleted;
        
        /// <remarks/>
        public event GetLinkedWorkflowsForDocCompletedEventHandler GetLinkedWorkflowsForDocCompleted;
        
        /// <remarks/>
        public event StartTaskCompletedEventHandler StartTaskCompleted;
        
        /// <remarks/>
        public event GetTaskCompletedEventHandler GetTaskCompleted;
        
        /// <remarks/>
        public event GetTaskInfoCompletedEventHandler GetTaskInfoCompleted;
        
        /// <remarks/>
        public event UpdateTaskCompletedEventHandler UpdateTaskCompleted;
        
        /// <remarks/>
        public event DeleteTaskCompletedEventHandler DeleteTaskCompleted;
        
        /// <remarks/>
        public event SetTaskStatusCompletedEventHandler SetTaskStatusCompleted;
        
        /// <remarks/>
        public event UpdateTaskCommentCompletedEventHandler UpdateTaskCommentCompleted;
        
        /// <remarks/>
        public event CompleteTaskCompletedEventHandler CompleteTaskCompleted;
        
        /// <remarks/>
        public event ExecuteTaskInfoQueryCompletedEventHandler ExecuteTaskInfoQueryCompleted;
        
        /// <remarks/>
        public event GetSettingStringCompletedEventHandler GetSettingStringCompleted;
        
        /// <remarks/>
        public event GetSettingIntCompletedEventHandler GetSettingIntCompleted;
        
        /// <remarks/>
        public event GetReportDefinitionCompletedEventHandler GetReportDefinitionCompleted;
        
        /// <remarks/>
        public event ExecuteReportCompletedEventHandler ExecuteReportCompleted;
        
        /// <remarks/>
        public event GetKeywordsByFieldNoCompletedEventHandler GetKeywordsByFieldNoCompleted;
        
        /// <remarks/>
        public event GetDictionaryInfoCompletedEventHandler GetDictionaryInfoCompleted;
        
        /// <remarks/>
        public event AddDictionaryKeywordCompletedEventHandler AddDictionaryKeywordCompleted;
        
        /// <remarks/>
        public event DeleteDictionaryKeywordCompletedEventHandler DeleteDictionaryKeywordCompleted;
        
        /// <remarks/>
        public event UpdateDictionaryKeywordCompletedEventHandler UpdateDictionaryKeywordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/CreateDocument", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateDocumentResponse CreateDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CreateDocumentParams parameters) {
            object[] results = this.Invoke("CreateDocument", new object[] {
                        parameters});
            return ((CreateDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDocumentAsync(CreateDocumentParams parameters) {
            this.CreateDocumentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void CreateDocumentAsync(CreateDocumentParams parameters, object userState) {
            if ((this.CreateDocumentOperationCompleted == null)) {
                this.CreateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDocumentOperationCompleted);
            }
            this.InvokeAsync("CreateDocument", new object[] {
                        parameters}, this.CreateDocumentOperationCompleted, userState);
        }
        
        private void OnCreateDocumentOperationCompleted(object arg) {
            if ((this.CreateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDocumentCompleted(this, new CreateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/StartCreateDocumentBatch", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StartCreateDocumentBatchResponse StartCreateDocumentBatch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StartCreateDocumentBatchParams parameters) {
            object[] results = this.Invoke("StartCreateDocumentBatch", new object[] {
                        parameters});
            return ((StartCreateDocumentBatchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void StartCreateDocumentBatchAsync(StartCreateDocumentBatchParams parameters) {
            this.StartCreateDocumentBatchAsync(parameters, null);
        }
        
        /// <remarks/>
        public void StartCreateDocumentBatchAsync(StartCreateDocumentBatchParams parameters, object userState) {
            if ((this.StartCreateDocumentBatchOperationCompleted == null)) {
                this.StartCreateDocumentBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartCreateDocumentBatchOperationCompleted);
            }
            this.InvokeAsync("StartCreateDocumentBatch", new object[] {
                        parameters}, this.StartCreateDocumentBatchOperationCompleted, userState);
        }
        
        private void OnStartCreateDocumentBatchOperationCompleted(object arg) {
            if ((this.StartCreateDocumentBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartCreateDocumentBatchCompleted(this, new StartCreateDocumentBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UploadDocStreamToBatch", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UploadDocStreamToBatchResponse UploadDocStreamToBatch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UploadDocStreamToBatchParams parameters) {
            object[] results = this.Invoke("UploadDocStreamToBatch", new object[] {
                        parameters});
            return ((UploadDocStreamToBatchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocStreamToBatchAsync(UploadDocStreamToBatchParams parameters) {
            this.UploadDocStreamToBatchAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UploadDocStreamToBatchAsync(UploadDocStreamToBatchParams parameters, object userState) {
            if ((this.UploadDocStreamToBatchOperationCompleted == null)) {
                this.UploadDocStreamToBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocStreamToBatchOperationCompleted);
            }
            this.InvokeAsync("UploadDocStreamToBatch", new object[] {
                        parameters}, this.UploadDocStreamToBatchOperationCompleted, userState);
        }
        
        private void OnUploadDocStreamToBatchOperationCompleted(object arg) {
            if ((this.UploadDocStreamToBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocStreamToBatchCompleted(this, new UploadDocStreamToBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SubmitCreateDocumentBatch", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SubmitCreateDocumentBatchResponse SubmitCreateDocumentBatch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SubmitCreateDocumentBatchParams parameters) {
            object[] results = this.Invoke("SubmitCreateDocumentBatch", new object[] {
                        parameters});
            return ((SubmitCreateDocumentBatchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitCreateDocumentBatchAsync(SubmitCreateDocumentBatchParams parameters) {
            this.SubmitCreateDocumentBatchAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SubmitCreateDocumentBatchAsync(SubmitCreateDocumentBatchParams parameters, object userState) {
            if ((this.SubmitCreateDocumentBatchOperationCompleted == null)) {
                this.SubmitCreateDocumentBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitCreateDocumentBatchOperationCompleted);
            }
            this.InvokeAsync("SubmitCreateDocumentBatch", new object[] {
                        parameters}, this.SubmitCreateDocumentBatchOperationCompleted, userState);
        }
        
        private void OnSubmitCreateDocumentBatchOperationCompleted(object arg) {
            if ((this.SubmitCreateDocumentBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitCreateDocumentBatchCompleted(this, new SubmitCreateDocumentBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UpdateDocument", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UpdateDocumentResponse UpdateDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UpdateDocumentParams parameters) {
            object[] results = this.Invoke("UpdateDocument", new object[] {
                        parameters});
            return ((UpdateDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDocumentAsync(UpdateDocumentParams parameters) {
            this.UpdateDocumentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentAsync(UpdateDocumentParams parameters, object userState) {
            if ((this.UpdateDocumentOperationCompleted == null)) {
                this.UpdateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentOperationCompleted);
            }
            this.InvokeAsync("UpdateDocument", new object[] {
                        parameters}, this.UpdateDocumentOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentOperationCompleted(object arg) {
            if ((this.UpdateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentCompleted(this, new UpdateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/AddStreamsToDocument", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AddStreamsToDocumentResponse AddStreamsToDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AddStreamsToDocumentParams parameters) {
            object[] results = this.Invoke("AddStreamsToDocument", new object[] {
                        parameters});
            return ((AddStreamsToDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddStreamsToDocumentAsync(AddStreamsToDocumentParams parameters) {
            this.AddStreamsToDocumentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void AddStreamsToDocumentAsync(AddStreamsToDocumentParams parameters, object userState) {
            if ((this.AddStreamsToDocumentOperationCompleted == null)) {
                this.AddStreamsToDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStreamsToDocumentOperationCompleted);
            }
            this.InvokeAsync("AddStreamsToDocument", new object[] {
                        parameters}, this.AddStreamsToDocumentOperationCompleted, userState);
        }
        
        private void OnAddStreamsToDocumentOperationCompleted(object arg) {
            if ((this.AddStreamsToDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStreamsToDocumentCompleted(this, new AddStreamsToDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/StartUpdateDocumentBatch", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StartUpdateDocumentBatchResponse StartUpdateDocumentBatch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StartUpdateDocumentBatchParams parameters) {
            object[] results = this.Invoke("StartUpdateDocumentBatch", new object[] {
                        parameters});
            return ((StartUpdateDocumentBatchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void StartUpdateDocumentBatchAsync(StartUpdateDocumentBatchParams parameters) {
            this.StartUpdateDocumentBatchAsync(parameters, null);
        }
        
        /// <remarks/>
        public void StartUpdateDocumentBatchAsync(StartUpdateDocumentBatchParams parameters, object userState) {
            if ((this.StartUpdateDocumentBatchOperationCompleted == null)) {
                this.StartUpdateDocumentBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartUpdateDocumentBatchOperationCompleted);
            }
            this.InvokeAsync("StartUpdateDocumentBatch", new object[] {
                        parameters}, this.StartUpdateDocumentBatchOperationCompleted, userState);
        }
        
        private void OnStartUpdateDocumentBatchOperationCompleted(object arg) {
            if ((this.StartUpdateDocumentBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartUpdateDocumentBatchCompleted(this, new StartUpdateDocumentBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SubmitUpdateDocumentBatch", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SubmitUpdateDocumentBatchResponse SubmitUpdateDocumentBatch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SubmitUpdateDocumentBatchParams parameters) {
            object[] results = this.Invoke("SubmitUpdateDocumentBatch", new object[] {
                        parameters});
            return ((SubmitUpdateDocumentBatchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitUpdateDocumentBatchAsync(SubmitUpdateDocumentBatchParams parameters) {
            this.SubmitUpdateDocumentBatchAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SubmitUpdateDocumentBatchAsync(SubmitUpdateDocumentBatchParams parameters, object userState) {
            if ((this.SubmitUpdateDocumentBatchOperationCompleted == null)) {
                this.SubmitUpdateDocumentBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitUpdateDocumentBatchOperationCompleted);
            }
            this.InvokeAsync("SubmitUpdateDocumentBatch", new object[] {
                        parameters}, this.SubmitUpdateDocumentBatchOperationCompleted, userState);
        }
        
        private void OnSubmitUpdateDocumentBatchOperationCompleted(object arg) {
            if ((this.SubmitUpdateDocumentBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitUpdateDocumentBatchCompleted(this, new SubmitUpdateDocumentBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCategoryInfo", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCategoryInfoResponse GetCategoryInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCategoryInfoParams parameters) {
            object[] results = this.Invoke("GetCategoryInfo", new object[] {
                        parameters});
            return ((GetCategoryInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryInfoAsync(GetCategoryInfoParams parameters) {
            this.GetCategoryInfoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCategoryInfoAsync(GetCategoryInfoParams parameters, object userState) {
            if ((this.GetCategoryInfoOperationCompleted == null)) {
                this.GetCategoryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryInfoOperationCompleted);
            }
            this.InvokeAsync("GetCategoryInfo", new object[] {
                        parameters}, this.GetCategoryInfoOperationCompleted, userState);
        }
        
        private void OnGetCategoryInfoOperationCompleted(object arg) {
            if ((this.GetCategoryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryInfoCompleted(this, new GetCategoryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/FillDependentFields", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FillDependentFieldsResponse FillDependentFields([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FillDependentFieldsParams parameters) {
            object[] results = this.Invoke("FillDependentFields", new object[] {
                        parameters});
            return ((FillDependentFieldsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void FillDependentFieldsAsync(FillDependentFieldsParams parameters) {
            this.FillDependentFieldsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void FillDependentFieldsAsync(FillDependentFieldsParams parameters, object userState) {
            if ((this.FillDependentFieldsOperationCompleted == null)) {
                this.FillDependentFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFillDependentFieldsOperationCompleted);
            }
            this.InvokeAsync("FillDependentFields", new object[] {
                        parameters}, this.FillDependentFieldsOperationCompleted, userState);
        }
        
        private void OnFillDependentFieldsOperationCompleted(object arg) {
            if ((this.FillDependentFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FillDependentFieldsCompleted(this, new FillDependentFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDocumentIndexData", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentIndexDataResponse GetDocumentIndexData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentIndexDataParams parameters) {
            object[] results = this.Invoke("GetDocumentIndexData", new object[] {
                        parameters});
            return ((GetDocumentIndexDataResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentIndexDataAsync(GetDocumentIndexDataParams parameters) {
            this.GetDocumentIndexDataAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDocumentIndexDataAsync(GetDocumentIndexDataParams parameters, object userState) {
            if ((this.GetDocumentIndexDataOperationCompleted == null)) {
                this.GetDocumentIndexDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentIndexDataOperationCompleted);
            }
            this.InvokeAsync("GetDocumentIndexData", new object[] {
                        parameters}, this.GetDocumentIndexDataOperationCompleted, userState);
        }
        
        private void OnGetDocumentIndexDataOperationCompleted(object arg) {
            if ((this.GetDocumentIndexDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentIndexDataCompleted(this, new GetDocumentIndexDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SaveDocumentIndexData", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SaveDocumentIndexDataResponse SaveDocumentIndexData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SaveDocumentIndexDataParams parameters) {
            object[] results = this.Invoke("SaveDocumentIndexData", new object[] {
                        parameters});
            return ((SaveDocumentIndexDataResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDocumentIndexDataAsync(SaveDocumentIndexDataParams parameters) {
            this.SaveDocumentIndexDataAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SaveDocumentIndexDataAsync(SaveDocumentIndexDataParams parameters, object userState) {
            if ((this.SaveDocumentIndexDataOperationCompleted == null)) {
                this.SaveDocumentIndexDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDocumentIndexDataOperationCompleted);
            }
            this.InvokeAsync("SaveDocumentIndexData", new object[] {
                        parameters}, this.SaveDocumentIndexDataOperationCompleted, userState);
        }
        
        private void OnSaveDocumentIndexDataOperationCompleted(object arg) {
            if ((this.SaveDocumentIndexDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDocumentIndexDataCompleted(this, new SaveDocumentIndexDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/CreateLinkFile", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateLinkFileResponse CreateLinkFile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CreateLinkFileParams parameters) {
            object[] results = this.Invoke("CreateLinkFile", new object[] {
                        parameters});
            return ((CreateLinkFileResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateLinkFileAsync(CreateLinkFileParams parameters) {
            this.CreateLinkFileAsync(parameters, null);
        }
        
        /// <remarks/>
        public void CreateLinkFileAsync(CreateLinkFileParams parameters, object userState) {
            if ((this.CreateLinkFileOperationCompleted == null)) {
                this.CreateLinkFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLinkFileOperationCompleted);
            }
            this.InvokeAsync("CreateLinkFile", new object[] {
                        parameters}, this.CreateLinkFileOperationCompleted, userState);
        }
        
        private void OnCreateLinkFileOperationCompleted(object arg) {
            if ((this.CreateLinkFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLinkFileCompleted(this, new CreateLinkFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDocument", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentResponse GetDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentParams parameters) {
            object[] results = this.Invoke("GetDocument", new object[] {
                        parameters});
            return ((GetDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAsync(GetDocumentParams parameters) {
            this.GetDocumentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDocumentAsync(GetDocumentParams parameters, object userState) {
            if ((this.GetDocumentOperationCompleted == null)) {
                this.GetDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentOperationCompleted);
            }
            this.InvokeAsync("GetDocument", new object[] {
                        parameters}, this.GetDocumentOperationCompleted, userState);
        }
        
        private void OnGetDocumentOperationCompleted(object arg) {
            if ((this.GetDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCompleted(this, new GetDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDocumentStream", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentStreamResponse GetDocumentStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentStreamParams parameters) {
            object[] results = this.Invoke("GetDocumentStream", new object[] {
                        parameters});
            return ((GetDocumentStreamResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentStreamAsync(GetDocumentStreamParams parameters) {
            this.GetDocumentStreamAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDocumentStreamAsync(GetDocumentStreamParams parameters, object userState) {
            if ((this.GetDocumentStreamOperationCompleted == null)) {
                this.GetDocumentStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentStreamOperationCompleted);
            }
            this.InvokeAsync("GetDocumentStream", new object[] {
                        parameters}, this.GetDocumentStreamOperationCompleted, userState);
        }
        
        private void OnGetDocumentStreamOperationCompleted(object arg) {
            if ((this.GetDocumentStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentStreamCompleted(this, new GetDocumentStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetConvertedDocStreams", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetConvertedDocStreamsResponse GetConvertedDocStreams([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetConvertedDocStreamsParams parameters) {
            object[] results = this.Invoke("GetConvertedDocStreams", new object[] {
                        parameters});
            return ((GetConvertedDocStreamsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetConvertedDocStreamsAsync(GetConvertedDocStreamsParams parameters) {
            this.GetConvertedDocStreamsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetConvertedDocStreamsAsync(GetConvertedDocStreamsParams parameters, object userState) {
            if ((this.GetConvertedDocStreamsOperationCompleted == null)) {
                this.GetConvertedDocStreamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConvertedDocStreamsOperationCompleted);
            }
            this.InvokeAsync("GetConvertedDocStreams", new object[] {
                        parameters}, this.GetConvertedDocStreamsOperationCompleted, userState);
        }
        
        private void OnGetConvertedDocStreamsOperationCompleted(object arg) {
            if ((this.GetConvertedDocStreamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConvertedDocStreamsCompleted(this, new GetConvertedDocStreamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDocumentCheckoutStatus", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentCheckoutStateResponse GetDocumentCheckoutStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentCheckoutStateParams parameters) {
            object[] results = this.Invoke("GetDocumentCheckoutStatus", new object[] {
                        parameters});
            return ((GetDocumentCheckoutStateResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentCheckoutStatusAsync(GetDocumentCheckoutStateParams parameters) {
            this.GetDocumentCheckoutStatusAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDocumentCheckoutStatusAsync(GetDocumentCheckoutStateParams parameters, object userState) {
            if ((this.GetDocumentCheckoutStatusOperationCompleted == null)) {
                this.GetDocumentCheckoutStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentCheckoutStatusOperationCompleted);
            }
            this.InvokeAsync("GetDocumentCheckoutStatus", new object[] {
                        parameters}, this.GetDocumentCheckoutStatusOperationCompleted, userState);
        }
        
        private void OnGetDocumentCheckoutStatusOperationCompleted(object arg) {
            if ((this.GetDocumentCheckoutStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCheckoutStatusCompleted(this, new GetDocumentCheckoutStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetThumbnail", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetThumbnailResponse GetThumbnail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetThumbnailParams parameters) {
            object[] results = this.Invoke("GetThumbnail", new object[] {
                        parameters});
            return ((GetThumbnailResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetThumbnailAsync(GetThumbnailParams parameters) {
            this.GetThumbnailAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetThumbnailAsync(GetThumbnailParams parameters, object userState) {
            if ((this.GetThumbnailOperationCompleted == null)) {
                this.GetThumbnailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThumbnailOperationCompleted);
            }
            this.InvokeAsync("GetThumbnail", new object[] {
                        parameters}, this.GetThumbnailOperationCompleted, userState);
        }
        
        private void OnGetThumbnailOperationCompleted(object arg) {
            if ((this.GetThumbnailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThumbnailCompleted(this, new GetThumbnailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDocumentProperties", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentPropertiesResponse GetDocumentProperties([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentPropertiesParams parameters) {
            object[] results = this.Invoke("GetDocumentProperties", new object[] {
                        parameters});
            return ((GetDocumentPropertiesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentPropertiesAsync(GetDocumentPropertiesParams parameters) {
            this.GetDocumentPropertiesAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDocumentPropertiesAsync(GetDocumentPropertiesParams parameters, object userState) {
            if ((this.GetDocumentPropertiesOperationCompleted == null)) {
                this.GetDocumentPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetDocumentProperties", new object[] {
                        parameters}, this.GetDocumentPropertiesOperationCompleted, userState);
        }
        
        private void OnGetDocumentPropertiesOperationCompleted(object arg) {
            if ((this.GetDocumentPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentPropertiesCompleted(this, new GetDocumentPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DeleteDocument", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteDocumentResponse DeleteDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeleteDocumentParams parameters) {
            object[] results = this.Invoke("DeleteDocument", new object[] {
                        parameters});
            return ((DeleteDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(DeleteDocumentParams parameters) {
            this.DeleteDocumentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(DeleteDocumentParams parameters, object userState) {
            if ((this.DeleteDocumentOperationCompleted == null)) {
                this.DeleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("DeleteDocument", new object[] {
                        parameters}, this.DeleteDocumentOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentOperationCompleted(object arg) {
            if ((this.DeleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentCompleted(this, new DeleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteSimpleQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteSimpleQueryResponse ExecuteSimpleQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteSimpleQueryParams parameters) {
            object[] results = this.Invoke("ExecuteSimpleQuery", new object[] {
                        parameters});
            return ((ExecuteSimpleQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSimpleQueryAsync(ExecuteSimpleQueryParams parameters) {
            this.ExecuteSimpleQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteSimpleQueryAsync(ExecuteSimpleQueryParams parameters, object userState) {
            if ((this.ExecuteSimpleQueryOperationCompleted == null)) {
                this.ExecuteSimpleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSimpleQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteSimpleQuery", new object[] {
                        parameters}, this.ExecuteSimpleQueryOperationCompleted, userState);
        }
        
        private void OnExecuteSimpleQueryOperationCompleted(object arg) {
            if ((this.ExecuteSimpleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSimpleQueryCompleted(this, new ExecuteSimpleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetQuerySpecification", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public QuerySpecificationResponse GetQuerySpecification([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] QuerySpecificationParams parameters) {
            object[] results = this.Invoke("GetQuerySpecification", new object[] {
                        parameters});
            return ((QuerySpecificationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuerySpecificationAsync(QuerySpecificationParams parameters) {
            this.GetQuerySpecificationAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetQuerySpecificationAsync(QuerySpecificationParams parameters, object userState) {
            if ((this.GetQuerySpecificationOperationCompleted == null)) {
                this.GetQuerySpecificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuerySpecificationOperationCompleted);
            }
            this.InvokeAsync("GetQuerySpecification", new object[] {
                        parameters}, this.GetQuerySpecificationOperationCompleted, userState);
        }
        
        private void OnGetQuerySpecificationOperationCompleted(object arg) {
            if ((this.GetQuerySpecificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuerySpecificationCompleted(this, new GetQuerySpecificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteSingleQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteSingleQueryResponse ExecuteSingleQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteSingleQueryParams parameters) {
            object[] results = this.Invoke("ExecuteSingleQuery", new object[] {
                        parameters});
            return ((ExecuteSingleQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSingleQueryAsync(ExecuteSingleQueryParams parameters) {
            this.ExecuteSingleQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteSingleQueryAsync(ExecuteSingleQueryParams parameters, object userState) {
            if ((this.ExecuteSingleQueryOperationCompleted == null)) {
                this.ExecuteSingleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSingleQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteSingleQuery", new object[] {
                        parameters}, this.ExecuteSingleQueryOperationCompleted, userState);
        }
        
        private void OnExecuteSingleQueryOperationCompleted(object arg) {
            if ((this.ExecuteSingleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSingleQueryCompleted(this, new ExecuteSingleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteAsyncSingleQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteAsyncSingleQueryResponse ExecuteAsyncSingleQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteAsyncSingleQueryParams parameters) {
            object[] results = this.Invoke("ExecuteAsyncSingleQuery", new object[] {
                        parameters});
            return ((ExecuteAsyncSingleQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsyncSingleQueryAsync(ExecuteAsyncSingleQueryParams parameters) {
            this.ExecuteAsyncSingleQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteAsyncSingleQueryAsync(ExecuteAsyncSingleQueryParams parameters, object userState) {
            if ((this.ExecuteAsyncSingleQueryOperationCompleted == null)) {
                this.ExecuteAsyncSingleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteAsyncSingleQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteAsyncSingleQuery", new object[] {
                        parameters}, this.ExecuteAsyncSingleQueryOperationCompleted, userState);
        }
        
        private void OnExecuteAsyncSingleQueryOperationCompleted(object arg) {
            if ((this.ExecuteAsyncSingleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteAsyncSingleQueryCompleted(this, new ExecuteAsyncSingleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetNextSingleQueryRows", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetNextSingleQueryRowsResponse GetNextSingleQueryRows([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetNextSingleQueryRowsParams parameters) {
            object[] results = this.Invoke("GetNextSingleQueryRows", new object[] {
                        parameters});
            return ((GetNextSingleQueryRowsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextSingleQueryRowsAsync(GetNextSingleQueryRowsParams parameters) {
            this.GetNextSingleQueryRowsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetNextSingleQueryRowsAsync(GetNextSingleQueryRowsParams parameters, object userState) {
            if ((this.GetNextSingleQueryRowsOperationCompleted == null)) {
                this.GetNextSingleQueryRowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextSingleQueryRowsOperationCompleted);
            }
            this.InvokeAsync("GetNextSingleQueryRows", new object[] {
                        parameters}, this.GetNextSingleQueryRowsOperationCompleted, userState);
        }
        
        private void OnGetNextSingleQueryRowsOperationCompleted(object arg) {
            if ((this.GetNextSingleQueryRowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextSingleQueryRowsCompleted(this, new GetNextSingleQueryRowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ReleaseSingleQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReleaseSingleQueryResponse ReleaseSingleQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ReleaseSingleQueryParams parameters) {
            object[] results = this.Invoke("ReleaseSingleQuery", new object[] {
                        parameters});
            return ((ReleaseSingleQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseSingleQueryAsync(ReleaseSingleQueryParams parameters) {
            this.ReleaseSingleQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ReleaseSingleQueryAsync(ReleaseSingleQueryParams parameters, object userState) {
            if ((this.ReleaseSingleQueryOperationCompleted == null)) {
                this.ReleaseSingleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseSingleQueryOperationCompleted);
            }
            this.InvokeAsync("ReleaseSingleQuery", new object[] {
                        parameters}, this.ReleaseSingleQueryOperationCompleted, userState);
        }
        
        private void OnReleaseSingleQueryOperationCompleted(object arg) {
            if ((this.ReleaseSingleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseSingleQueryCompleted(this, new ReleaseSingleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteMultiQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteMultiQueryResponse ExecuteMultiQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteMultiQueryParams parameters) {
            object[] results = this.Invoke("ExecuteMultiQuery", new object[] {
                        parameters});
            return ((ExecuteMultiQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteMultiQueryAsync(ExecuteMultiQueryParams parameters) {
            this.ExecuteMultiQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteMultiQueryAsync(ExecuteMultiQueryParams parameters, object userState) {
            if ((this.ExecuteMultiQueryOperationCompleted == null)) {
                this.ExecuteMultiQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteMultiQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteMultiQuery", new object[] {
                        parameters}, this.ExecuteMultiQueryOperationCompleted, userState);
        }
        
        private void OnExecuteMultiQueryOperationCompleted(object arg) {
            if ((this.ExecuteMultiQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteMultiQueryCompleted(this, new ExecuteMultiQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteAsyncMultiQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteAsyncMultiQueryResponse ExecuteAsyncMultiQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteAsyncMultiQueryParams parameters) {
            object[] results = this.Invoke("ExecuteAsyncMultiQuery", new object[] {
                        parameters});
            return ((ExecuteAsyncMultiQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsyncMultiQueryAsync(ExecuteAsyncMultiQueryParams parameters) {
            this.ExecuteAsyncMultiQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteAsyncMultiQueryAsync(ExecuteAsyncMultiQueryParams parameters, object userState) {
            if ((this.ExecuteAsyncMultiQueryOperationCompleted == null)) {
                this.ExecuteAsyncMultiQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteAsyncMultiQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteAsyncMultiQuery", new object[] {
                        parameters}, this.ExecuteAsyncMultiQueryOperationCompleted, userState);
        }
        
        private void OnExecuteAsyncMultiQueryOperationCompleted(object arg) {
            if ((this.ExecuteAsyncMultiQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteAsyncMultiQueryCompleted(this, new ExecuteAsyncMultiQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetNextMultiQueryRows", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetNextMultiQueryRowsResponse GetNextMultiQueryRows([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetNextMultiQueryRowsParams parameters) {
            object[] results = this.Invoke("GetNextMultiQueryRows", new object[] {
                        parameters});
            return ((GetNextMultiQueryRowsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextMultiQueryRowsAsync(GetNextMultiQueryRowsParams parameters) {
            this.GetNextMultiQueryRowsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetNextMultiQueryRowsAsync(GetNextMultiQueryRowsParams parameters, object userState) {
            if ((this.GetNextMultiQueryRowsOperationCompleted == null)) {
                this.GetNextMultiQueryRowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextMultiQueryRowsOperationCompleted);
            }
            this.InvokeAsync("GetNextMultiQueryRows", new object[] {
                        parameters}, this.GetNextMultiQueryRowsOperationCompleted, userState);
        }
        
        private void OnGetNextMultiQueryRowsOperationCompleted(object arg) {
            if ((this.GetNextMultiQueryRowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextMultiQueryRowsCompleted(this, new GetNextMultiQueryRowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ReleaseMultiQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReleaseMultiQueryResponse ReleaseMultiQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ReleaseMultiQueryParams parameters) {
            object[] results = this.Invoke("ReleaseMultiQuery", new object[] {
                        parameters});
            return ((ReleaseMultiQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseMultiQueryAsync(ReleaseMultiQueryParams parameters) {
            this.ReleaseMultiQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ReleaseMultiQueryAsync(ReleaseMultiQueryParams parameters, object userState) {
            if ((this.ReleaseMultiQueryOperationCompleted == null)) {
                this.ReleaseMultiQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseMultiQueryOperationCompleted);
            }
            this.InvokeAsync("ReleaseMultiQuery", new object[] {
                        parameters}, this.ReleaseMultiQueryOperationCompleted, userState);
        }
        
        private void OnReleaseMultiQueryOperationCompleted(object arg) {
            if ((this.ReleaseMultiQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseMultiQueryCompleted(this, new ReleaseMultiQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteFullTextQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteFullTextQueryResponse ExecuteFullTextQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteFullTextQueryParams parameters) {
            object[] results = this.Invoke("ExecuteFullTextQuery", new object[] {
                        parameters});
            return ((ExecuteFullTextQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteFullTextQueryAsync(ExecuteFullTextQueryParams parameters) {
            this.ExecuteFullTextQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteFullTextQueryAsync(ExecuteFullTextQueryParams parameters, object userState) {
            if ((this.ExecuteFullTextQueryOperationCompleted == null)) {
                this.ExecuteFullTextQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteFullTextQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteFullTextQuery", new object[] {
                        parameters}, this.ExecuteFullTextQueryOperationCompleted, userState);
        }
        
        private void OnExecuteFullTextQueryOperationCompleted(object arg) {
            if ((this.ExecuteFullTextQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteFullTextQueryCompleted(this, new ExecuteFullTextQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteAsyncFullTextQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteAsyncFullTextQueryResponse ExecuteAsyncFullTextQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteAsyncFullTextQueryParams parameters) {
            object[] results = this.Invoke("ExecuteAsyncFullTextQuery", new object[] {
                        parameters});
            return ((ExecuteAsyncFullTextQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsyncFullTextQueryAsync(ExecuteAsyncFullTextQueryParams parameters) {
            this.ExecuteAsyncFullTextQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteAsyncFullTextQueryAsync(ExecuteAsyncFullTextQueryParams parameters, object userState) {
            if ((this.ExecuteAsyncFullTextQueryOperationCompleted == null)) {
                this.ExecuteAsyncFullTextQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteAsyncFullTextQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteAsyncFullTextQuery", new object[] {
                        parameters}, this.ExecuteAsyncFullTextQueryOperationCompleted, userState);
        }
        
        private void OnExecuteAsyncFullTextQueryOperationCompleted(object arg) {
            if ((this.ExecuteAsyncFullTextQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteAsyncFullTextQueryCompleted(this, new ExecuteAsyncFullTextQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetNextFullTextQueryRows", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetNextFullTextQueryRowsResponse GetNextFullTextQueryRows([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetNextFullTextQueryRowsParams parameters) {
            object[] results = this.Invoke("GetNextFullTextQueryRows", new object[] {
                        parameters});
            return ((GetNextFullTextQueryRowsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextFullTextQueryRowsAsync(GetNextFullTextQueryRowsParams parameters) {
            this.GetNextFullTextQueryRowsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetNextFullTextQueryRowsAsync(GetNextFullTextQueryRowsParams parameters, object userState) {
            if ((this.GetNextFullTextQueryRowsOperationCompleted == null)) {
                this.GetNextFullTextQueryRowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextFullTextQueryRowsOperationCompleted);
            }
            this.InvokeAsync("GetNextFullTextQueryRows", new object[] {
                        parameters}, this.GetNextFullTextQueryRowsOperationCompleted, userState);
        }
        
        private void OnGetNextFullTextQueryRowsOperationCompleted(object arg) {
            if ((this.GetNextFullTextQueryRowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextFullTextQueryRowsCompleted(this, new GetNextFullTextQueryRowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ReleaseFullTextQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReleaseFullTextQueryResponse ReleaseFullTextQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ReleaseFullTextQueryParams parameters) {
            object[] results = this.Invoke("ReleaseFullTextQuery", new object[] {
                        parameters});
            return ((ReleaseFullTextQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseFullTextQueryAsync(ReleaseFullTextQueryParams parameters) {
            this.ReleaseFullTextQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ReleaseFullTextQueryAsync(ReleaseFullTextQueryParams parameters, object userState) {
            if ((this.ReleaseFullTextQueryOperationCompleted == null)) {
                this.ReleaseFullTextQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseFullTextQueryOperationCompleted);
            }
            this.InvokeAsync("ReleaseFullTextQuery", new object[] {
                        parameters}, this.ReleaseFullTextQueryOperationCompleted, userState);
        }
        
        private void OnReleaseFullTextQueryOperationCompleted(object arg) {
            if ((this.ReleaseFullTextQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseFullTextQueryCompleted(this, new ReleaseFullTextQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCategoriesTree", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCategoriesTreeResponse GetCategoriesTree([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCategoriesTreeParams parameters) {
            object[] results = this.Invoke("GetCategoriesTree", new object[] {
                        parameters});
            return ((GetCategoriesTreeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoriesTreeAsync(GetCategoriesTreeParams parameters) {
            this.GetCategoriesTreeAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCategoriesTreeAsync(GetCategoriesTreeParams parameters, object userState) {
            if ((this.GetCategoriesTreeOperationCompleted == null)) {
                this.GetCategoriesTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoriesTreeOperationCompleted);
            }
            this.InvokeAsync("GetCategoriesTree", new object[] {
                        parameters}, this.GetCategoriesTreeOperationCompleted, userState);
        }
        
        private void OnGetCategoriesTreeOperationCompleted(object arg) {
            if ((this.GetCategoriesTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoriesTreeCompleted(this, new GetCategoriesTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDomainInfo", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDomainInfoResponse GetDomainInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDomainInfoParams parameters) {
            object[] results = this.Invoke("GetDomainInfo", new object[] {
                        parameters});
            return ((GetDomainInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainInfoAsync(GetDomainInfoParams parameters) {
            this.GetDomainInfoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDomainInfoAsync(GetDomainInfoParams parameters, object userState) {
            if ((this.GetDomainInfoOperationCompleted == null)) {
                this.GetDomainInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainInfoOperationCompleted);
            }
            this.InvokeAsync("GetDomainInfo", new object[] {
                        parameters}, this.GetDomainInfoOperationCompleted, userState);
        }
        
        private void OnGetDomainInfoOperationCompleted(object arg) {
            if ((this.GetDomainInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainInfoCompleted(this, new GetDomainInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetAllTreeViews", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetAllTreeViewsResponse GetAllTreeViews([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetAllTreeViewsParams parameters) {
            object[] results = this.Invoke("GetAllTreeViews", new object[] {
                        parameters});
            return ((GetAllTreeViewsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTreeViewsAsync(GetAllTreeViewsParams parameters) {
            this.GetAllTreeViewsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetAllTreeViewsAsync(GetAllTreeViewsParams parameters, object userState) {
            if ((this.GetAllTreeViewsOperationCompleted == null)) {
                this.GetAllTreeViewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTreeViewsOperationCompleted);
            }
            this.InvokeAsync("GetAllTreeViews", new object[] {
                        parameters}, this.GetAllTreeViewsOperationCompleted, userState);
        }
        
        private void OnGetAllTreeViewsOperationCompleted(object arg) {
            if ((this.GetAllTreeViewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTreeViewsCompleted(this, new GetAllTreeViewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetTreeViewChildNodes", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetTreeViewChildNodesResponse GetTreeViewChildNodes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetTreeViewChildNodesParams parameters) {
            object[] results = this.Invoke("GetTreeViewChildNodes", new object[] {
                        parameters});
            return ((GetTreeViewChildNodesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeViewChildNodesAsync(GetTreeViewChildNodesParams parameters) {
            this.GetTreeViewChildNodesAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetTreeViewChildNodesAsync(GetTreeViewChildNodesParams parameters, object userState) {
            if ((this.GetTreeViewChildNodesOperationCompleted == null)) {
                this.GetTreeViewChildNodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeViewChildNodesOperationCompleted);
            }
            this.InvokeAsync("GetTreeViewChildNodes", new object[] {
                        parameters}, this.GetTreeViewChildNodesOperationCompleted, userState);
        }
        
        private void OnGetTreeViewChildNodesOperationCompleted(object arg) {
            if ((this.GetTreeViewChildNodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeViewChildNodesCompleted(this, new GetTreeViewChildNodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetTreeViewNodeDocuments", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetTreeViewNodeDocumentsResponse GetTreeViewNodeDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetTreeViewNodeDocumentsParams parameters) {
            object[] results = this.Invoke("GetTreeViewNodeDocuments", new object[] {
                        parameters});
            return ((GetTreeViewNodeDocumentsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeViewNodeDocumentsAsync(GetTreeViewNodeDocumentsParams parameters) {
            this.GetTreeViewNodeDocumentsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetTreeViewNodeDocumentsAsync(GetTreeViewNodeDocumentsParams parameters, object userState) {
            if ((this.GetTreeViewNodeDocumentsOperationCompleted == null)) {
                this.GetTreeViewNodeDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeViewNodeDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetTreeViewNodeDocuments", new object[] {
                        parameters}, this.GetTreeViewNodeDocumentsOperationCompleted, userState);
        }
        
        private void OnGetTreeViewNodeDocumentsOperationCompleted(object arg) {
            if ((this.GetTreeViewNodeDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeViewNodeDocumentsCompleted(this, new GetTreeViewNodeDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetConnectedUser", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetConnectedUserResponse GetConnectedUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetConnectedUserParams parameters) {
            object[] results = this.Invoke("GetConnectedUser", new object[] {
                        parameters});
            return ((GetConnectedUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectedUserAsync(GetConnectedUserParams parameters) {
            this.GetConnectedUserAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetConnectedUserAsync(GetConnectedUserParams parameters, object userState) {
            if ((this.GetConnectedUserOperationCompleted == null)) {
                this.GetConnectedUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectedUserOperationCompleted);
            }
            this.InvokeAsync("GetConnectedUser", new object[] {
                        parameters}, this.GetConnectedUserOperationCompleted, userState);
        }
        
        private void OnGetConnectedUserOperationCompleted(object arg) {
            if ((this.GetConnectedUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectedUserCompleted(this, new GetConnectedUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteUsersQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteUsersQueryResponse ExecuteUsersQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteUsersQueryParams parameters) {
            object[] results = this.Invoke("ExecuteUsersQuery", new object[] {
                        parameters});
            return ((ExecuteUsersQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteUsersQueryAsync(ExecuteUsersQueryParams parameters) {
            this.ExecuteUsersQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteUsersQueryAsync(ExecuteUsersQueryParams parameters, object userState) {
            if ((this.ExecuteUsersQueryOperationCompleted == null)) {
                this.ExecuteUsersQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteUsersQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteUsersQuery", new object[] {
                        parameters}, this.ExecuteUsersQueryOperationCompleted, userState);
        }
        
        private void OnExecuteUsersQueryOperationCompleted(object arg) {
            if ((this.ExecuteUsersQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteUsersQueryCompleted(this, new ExecuteUsersQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetWebAPIServerVersion", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetWebAPIServerVersionResponse GetWebAPIServerVersion([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetWebAPIServerVersionParams parameters) {
            object[] results = this.Invoke("GetWebAPIServerVersion", new object[] {
                        parameters});
            return ((GetWebAPIServerVersionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebAPIServerVersionAsync(GetWebAPIServerVersionParams parameters) {
            this.GetWebAPIServerVersionAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetWebAPIServerVersionAsync(GetWebAPIServerVersionParams parameters, object userState) {
            if ((this.GetWebAPIServerVersionOperationCompleted == null)) {
                this.GetWebAPIServerVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebAPIServerVersionOperationCompleted);
            }
            this.InvokeAsync("GetWebAPIServerVersion", new object[] {
                        parameters}, this.GetWebAPIServerVersionOperationCompleted, userState);
        }
        
        private void OnGetWebAPIServerVersionOperationCompleted(object arg) {
            if ((this.GetWebAPIServerVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebAPIServerVersionCompleted(this, new GetWebAPIServerVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/HasPermissions", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public HasPermissionsResponse HasPermissions([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] HasPermissionsParams parameters) {
            object[] results = this.Invoke("HasPermissions", new object[] {
                        parameters});
            return ((HasPermissionsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void HasPermissionsAsync(HasPermissionsParams parameters) {
            this.HasPermissionsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void HasPermissionsAsync(HasPermissionsParams parameters, object userState) {
            if ((this.HasPermissionsOperationCompleted == null)) {
                this.HasPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPermissionsOperationCompleted);
            }
            this.InvokeAsync("HasPermissions", new object[] {
                        parameters}, this.HasPermissionsOperationCompleted, userState);
        }
        
        private void OnHasPermissionsOperationCompleted(object arg) {
            if ((this.HasPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPermissionsCompleted(this, new HasPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetObjects", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetObjectsResponse GetObjects([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetObjectsParams parameters) {
            object[] results = this.Invoke("GetObjects", new object[] {
                        parameters});
            return ((GetObjectsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectsAsync(GetObjectsParams parameters) {
            this.GetObjectsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetObjectsAsync(GetObjectsParams parameters, object userState) {
            if ((this.GetObjectsOperationCompleted == null)) {
                this.GetObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectsOperationCompleted);
            }
            this.InvokeAsync("GetObjects", new object[] {
                        parameters}, this.GetObjectsOperationCompleted, userState);
        }
        
        private void OnGetObjectsOperationCompleted(object arg) {
            if ((this.GetObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectsCompleted(this, new GetObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetObjectRights", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetObjectRightsResponse GetObjectRights([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetObjectRightsParams parameters) {
            object[] results = this.Invoke("GetObjectRights", new object[] {
                        parameters});
            return ((GetObjectRightsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectRightsAsync(GetObjectRightsParams parameters) {
            this.GetObjectRightsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetObjectRightsAsync(GetObjectRightsParams parameters, object userState) {
            if ((this.GetObjectRightsOperationCompleted == null)) {
                this.GetObjectRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectRightsOperationCompleted);
            }
            this.InvokeAsync("GetObjectRights", new object[] {
                        parameters}, this.GetObjectRightsOperationCompleted, userState);
        }
        
        private void OnGetObjectRightsOperationCompleted(object arg) {
            if ((this.GetObjectRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectRightsCompleted(this, new GetObjectRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetPermissionConstants", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetPermissionConstantsResponse GetPermissionConstants([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetPermissionConstantsParams parameters) {
            object[] results = this.Invoke("GetPermissionConstants", new object[] {
                        parameters});
            return ((GetPermissionConstantsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPermissionConstantsAsync(GetPermissionConstantsParams parameters) {
            this.GetPermissionConstantsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetPermissionConstantsAsync(GetPermissionConstantsParams parameters, object userState) {
            if ((this.GetPermissionConstantsOperationCompleted == null)) {
                this.GetPermissionConstantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermissionConstantsOperationCompleted);
            }
            this.InvokeAsync("GetPermissionConstants", new object[] {
                        parameters}, this.GetPermissionConstantsOperationCompleted, userState);
        }
        
        private void OnGetPermissionConstantsOperationCompleted(object arg) {
            if ((this.GetPermissionConstantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermissionConstantsCompleted(this, new GetPermissionConstantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/CreateCase", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateCaseResponse CreateCase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CreateCaseParams parameters) {
            object[] results = this.Invoke("CreateCase", new object[] {
                        parameters});
            return ((CreateCaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCaseAsync(CreateCaseParams parameters) {
            this.CreateCaseAsync(parameters, null);
        }
        
        /// <remarks/>
        public void CreateCaseAsync(CreateCaseParams parameters, object userState) {
            if ((this.CreateCaseOperationCompleted == null)) {
                this.CreateCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCaseOperationCompleted);
            }
            this.InvokeAsync("CreateCase", new object[] {
                        parameters}, this.CreateCaseOperationCompleted, userState);
        }
        
        private void OnCreateCaseOperationCompleted(object arg) {
            if ((this.CreateCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCaseCompleted(this, new CreateCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCase", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCaseResponse GetCase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCaseParams parameters) {
            object[] results = this.Invoke("GetCase", new object[] {
                        parameters});
            return ((GetCaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseAsync(GetCaseParams parameters) {
            this.GetCaseAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCaseAsync(GetCaseParams parameters, object userState) {
            if ((this.GetCaseOperationCompleted == null)) {
                this.GetCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseOperationCompleted);
            }
            this.InvokeAsync("GetCase", new object[] {
                        parameters}, this.GetCaseOperationCompleted, userState);
        }
        
        private void OnGetCaseOperationCompleted(object arg) {
            if ((this.GetCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseCompleted(this, new GetCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SaveCaseIndexData", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SaveCaseIndexDataResponse SaveCaseIndexData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SaveCaseIndexDataParams parameters) {
            object[] results = this.Invoke("SaveCaseIndexData", new object[] {
                        parameters});
            return ((SaveCaseIndexDataResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCaseIndexDataAsync(SaveCaseIndexDataParams parameters) {
            this.SaveCaseIndexDataAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SaveCaseIndexDataAsync(SaveCaseIndexDataParams parameters, object userState) {
            if ((this.SaveCaseIndexDataOperationCompleted == null)) {
                this.SaveCaseIndexDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCaseIndexDataOperationCompleted);
            }
            this.InvokeAsync("SaveCaseIndexData", new object[] {
                        parameters}, this.SaveCaseIndexDataOperationCompleted, userState);
        }
        
        private void OnSaveCaseIndexDataOperationCompleted(object arg) {
            if ((this.SaveCaseIndexDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCaseIndexDataCompleted(this, new SaveCaseIndexDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DeleteCase", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteCaseResponse DeleteCase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeleteCaseParams parameters) {
            object[] results = this.Invoke("DeleteCase", new object[] {
                        parameters});
            return ((DeleteCaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCaseAsync(DeleteCaseParams parameters) {
            this.DeleteCaseAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DeleteCaseAsync(DeleteCaseParams parameters, object userState) {
            if ((this.DeleteCaseOperationCompleted == null)) {
                this.DeleteCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCaseOperationCompleted);
            }
            this.InvokeAsync("DeleteCase", new object[] {
                        parameters}, this.DeleteCaseOperationCompleted, userState);
        }
        
        private void OnDeleteCaseOperationCompleted(object arg) {
            if ((this.DeleteCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCaseCompleted(this, new DeleteCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCaseDefinition", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCaseDefinitionResponse GetCaseDefinition([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCaseDefinitionParams parameters) {
            object[] results = this.Invoke("GetCaseDefinition", new object[] {
                        parameters});
            return ((GetCaseDefinitionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseDefinitionAsync(GetCaseDefinitionParams parameters) {
            this.GetCaseDefinitionAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCaseDefinitionAsync(GetCaseDefinitionParams parameters, object userState) {
            if ((this.GetCaseDefinitionOperationCompleted == null)) {
                this.GetCaseDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetCaseDefinition", new object[] {
                        parameters}, this.GetCaseDefinitionOperationCompleted, userState);
        }
        
        private void OnGetCaseDefinitionOperationCompleted(object arg) {
            if ((this.GetCaseDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseDefinitionCompleted(this, new GetCaseDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCaseDocuments", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCaseDocumentsResponse GetCaseDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCaseDocumentsParams parameters) {
            object[] results = this.Invoke("GetCaseDocuments", new object[] {
                        parameters});
            return ((GetCaseDocumentsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseDocumentsAsync(GetCaseDocumentsParams parameters) {
            this.GetCaseDocumentsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCaseDocumentsAsync(GetCaseDocumentsParams parameters, object userState) {
            if ((this.GetCaseDocumentsOperationCompleted == null)) {
                this.GetCaseDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetCaseDocuments", new object[] {
                        parameters}, this.GetCaseDocumentsOperationCompleted, userState);
        }
        
        private void OnGetCaseDocumentsOperationCompleted(object arg) {
            if ((this.GetCaseDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseDocumentsCompleted(this, new GetCaseDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetCaseHistory", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCaseHistoryResponse GetCaseHistory([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetCaseHistoryParams parameters) {
            object[] results = this.Invoke("GetCaseHistory", new object[] {
                        parameters});
            return ((GetCaseHistoryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseHistoryAsync(GetCaseHistoryParams parameters) {
            this.GetCaseHistoryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetCaseHistoryAsync(GetCaseHistoryParams parameters, object userState) {
            if ((this.GetCaseHistoryOperationCompleted == null)) {
                this.GetCaseHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseHistoryOperationCompleted);
            }
            this.InvokeAsync("GetCaseHistory", new object[] {
                        parameters}, this.GetCaseHistoryOperationCompleted, userState);
        }
        
        private void OnGetCaseHistoryOperationCompleted(object arg) {
            if ((this.GetCaseHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseHistoryCompleted(this, new GetCaseHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteWorkflowQueryForProcess", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteWorkflowQueryForProcessResponse ExecuteWorkflowQueryForProcess([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteWorkflowQueryForProcessParams parameters) {
            object[] results = this.Invoke("ExecuteWorkflowQueryForProcess", new object[] {
                        parameters});
            return ((ExecuteWorkflowQueryForProcessResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteWorkflowQueryForProcessAsync(ExecuteWorkflowQueryForProcessParams parameters) {
            this.ExecuteWorkflowQueryForProcessAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteWorkflowQueryForProcessAsync(ExecuteWorkflowQueryForProcessParams parameters, object userState) {
            if ((this.ExecuteWorkflowQueryForProcessOperationCompleted == null)) {
                this.ExecuteWorkflowQueryForProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteWorkflowQueryForProcessOperationCompleted);
            }
            this.InvokeAsync("ExecuteWorkflowQueryForProcess", new object[] {
                        parameters}, this.ExecuteWorkflowQueryForProcessOperationCompleted, userState);
        }
        
        private void OnExecuteWorkflowQueryForProcessOperationCompleted(object arg) {
            if ((this.ExecuteWorkflowQueryForProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteWorkflowQueryForProcessCompleted(this, new ExecuteWorkflowQueryForProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteWorkflowQueryForAll", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteWorkflowQueryForAllResponse ExecuteWorkflowQueryForAll([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteWorkflowQueryForAllParams parameters) {
            object[] results = this.Invoke("ExecuteWorkflowQueryForAll", new object[] {
                        parameters});
            return ((ExecuteWorkflowQueryForAllResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteWorkflowQueryForAllAsync(ExecuteWorkflowQueryForAllParams parameters) {
            this.ExecuteWorkflowQueryForAllAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteWorkflowQueryForAllAsync(ExecuteWorkflowQueryForAllParams parameters, object userState) {
            if ((this.ExecuteWorkflowQueryForAllOperationCompleted == null)) {
                this.ExecuteWorkflowQueryForAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteWorkflowQueryForAllOperationCompleted);
            }
            this.InvokeAsync("ExecuteWorkflowQueryForAll", new object[] {
                        parameters}, this.ExecuteWorkflowQueryForAllOperationCompleted, userState);
        }
        
        private void OnExecuteWorkflowQueryForAllOperationCompleted(object arg) {
            if ((this.ExecuteWorkflowQueryForAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteWorkflowQueryForAllCompleted(this, new ExecuteWorkflowQueryForAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetWorkflowProcess", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetWorkflowProcessResponse GetWorkflowProcess([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetWorkflowProcessParams parameters) {
            object[] results = this.Invoke("GetWorkflowProcess", new object[] {
                        parameters});
            return ((GetWorkflowProcessResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkflowProcessAsync(GetWorkflowProcessParams parameters) {
            this.GetWorkflowProcessAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetWorkflowProcessAsync(GetWorkflowProcessParams parameters, object userState) {
            if ((this.GetWorkflowProcessOperationCompleted == null)) {
                this.GetWorkflowProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkflowProcessOperationCompleted);
            }
            this.InvokeAsync("GetWorkflowProcess", new object[] {
                        parameters}, this.GetWorkflowProcessOperationCompleted, userState);
        }
        
        private void OnGetWorkflowProcessOperationCompleted(object arg) {
            if ((this.GetWorkflowProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkflowProcessCompleted(this, new GetWorkflowProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetWorkflowInstanceResponse GetWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("GetWorkflowInstance", new object[] {
                        parameters});
            return ((GetWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkflowInstanceAsync(GetWorkflowInstanceParams parameters) {
            this.GetWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetWorkflowInstanceAsync(GetWorkflowInstanceParams parameters, object userState) {
            if ((this.GetWorkflowInstanceOperationCompleted == null)) {
                this.GetWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("GetWorkflowInstance", new object[] {
                        parameters}, this.GetWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnGetWorkflowInstanceOperationCompleted(object arg) {
            if ((this.GetWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkflowInstanceCompleted(this, new GetWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/StartWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StartWorkflowInstanceResponse StartWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StartWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("StartWorkflowInstance", new object[] {
                        parameters});
            return ((StartWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void StartWorkflowInstanceAsync(StartWorkflowInstanceParams parameters) {
            this.StartWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void StartWorkflowInstanceAsync(StartWorkflowInstanceParams parameters, object userState) {
            if ((this.StartWorkflowInstanceOperationCompleted == null)) {
                this.StartWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("StartWorkflowInstance", new object[] {
                        parameters}, this.StartWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnStartWorkflowInstanceOperationCompleted(object arg) {
            if ((this.StartWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartWorkflowInstanceCompleted(this, new StartWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ClaimWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClaimWorkflowInstanceResponse ClaimWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ClaimWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("ClaimWorkflowInstance", new object[] {
                        parameters});
            return ((ClaimWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ClaimWorkflowInstanceAsync(ClaimWorkflowInstanceParams parameters) {
            this.ClaimWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ClaimWorkflowInstanceAsync(ClaimWorkflowInstanceParams parameters, object userState) {
            if ((this.ClaimWorkflowInstanceOperationCompleted == null)) {
                this.ClaimWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("ClaimWorkflowInstance", new object[] {
                        parameters}, this.ClaimWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnClaimWorkflowInstanceOperationCompleted(object arg) {
            if ((this.ClaimWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimWorkflowInstanceCompleted(this, new ClaimWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DisclaimWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DisclaimWorkflowInstanceResponse DisclaimWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DisclaimWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("DisclaimWorkflowInstance", new object[] {
                        parameters});
            return ((DisclaimWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DisclaimWorkflowInstanceAsync(DisclaimWorkflowInstanceParams parameters) {
            this.DisclaimWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DisclaimWorkflowInstanceAsync(DisclaimWorkflowInstanceParams parameters, object userState) {
            if ((this.DisclaimWorkflowInstanceOperationCompleted == null)) {
                this.DisclaimWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisclaimWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("DisclaimWorkflowInstance", new object[] {
                        parameters}, this.DisclaimWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnDisclaimWorkflowInstanceOperationCompleted(object arg) {
            if ((this.DisclaimWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisclaimWorkflowInstanceCompleted(this, new DisclaimWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DelegateWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DelegateWorkflowInstanceResponse DelegateWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DelegateWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("DelegateWorkflowInstance", new object[] {
                        parameters});
            return ((DelegateWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DelegateWorkflowInstanceAsync(DelegateWorkflowInstanceParams parameters) {
            this.DelegateWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DelegateWorkflowInstanceAsync(DelegateWorkflowInstanceParams parameters, object userState) {
            if ((this.DelegateWorkflowInstanceOperationCompleted == null)) {
                this.DelegateWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelegateWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("DelegateWorkflowInstance", new object[] {
                        parameters}, this.DelegateWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnDelegateWorkflowInstanceOperationCompleted(object arg) {
            if ((this.DelegateWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelegateWorkflowInstanceCompleted(this, new DelegateWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DeleteWorkflowInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteWorkflowInstanceResponse DeleteWorkflowInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeleteWorkflowInstanceParams parameters) {
            object[] results = this.Invoke("DeleteWorkflowInstance", new object[] {
                        parameters});
            return ((DeleteWorkflowInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWorkflowInstanceAsync(DeleteWorkflowInstanceParams parameters) {
            this.DeleteWorkflowInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DeleteWorkflowInstanceAsync(DeleteWorkflowInstanceParams parameters, object userState) {
            if ((this.DeleteWorkflowInstanceOperationCompleted == null)) {
                this.DeleteWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkflowInstance", new object[] {
                        parameters}, this.DeleteWorkflowInstanceOperationCompleted, userState);
        }
        
        private void OnDeleteWorkflowInstanceOperationCompleted(object arg) {
            if ((this.DeleteWorkflowInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkflowInstanceCompleted(this, new DeleteWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/FinishCurrentWorkflowTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FinishCurrentWorkflowTaskResponse FinishCurrentWorkflowTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FinishCurrentWorkflowTaskParams parameters) {
            object[] results = this.Invoke("FinishCurrentWorkflowTask", new object[] {
                        parameters});
            return ((FinishCurrentWorkflowTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void FinishCurrentWorkflowTaskAsync(FinishCurrentWorkflowTaskParams parameters) {
            this.FinishCurrentWorkflowTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void FinishCurrentWorkflowTaskAsync(FinishCurrentWorkflowTaskParams parameters, object userState) {
            if ((this.FinishCurrentWorkflowTaskOperationCompleted == null)) {
                this.FinishCurrentWorkflowTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishCurrentWorkflowTaskOperationCompleted);
            }
            this.InvokeAsync("FinishCurrentWorkflowTask", new object[] {
                        parameters}, this.FinishCurrentWorkflowTaskOperationCompleted, userState);
        }
        
        private void OnFinishCurrentWorkflowTaskOperationCompleted(object arg) {
            if ((this.FinishCurrentWorkflowTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishCurrentWorkflowTaskCompleted(this, new FinishCurrentWorkflowTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SetChecklistItemWorkflow", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SetChecklistItemWorkflowResponse SetChecklistItemWorkflow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SetChecklistItemWorkflowParams parameters) {
            object[] results = this.Invoke("SetChecklistItemWorkflow", new object[] {
                        parameters});
            return ((SetChecklistItemWorkflowResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetChecklistItemWorkflowAsync(SetChecklistItemWorkflowParams parameters) {
            this.SetChecklistItemWorkflowAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SetChecklistItemWorkflowAsync(SetChecklistItemWorkflowParams parameters, object userState) {
            if ((this.SetChecklistItemWorkflowOperationCompleted == null)) {
                this.SetChecklistItemWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetChecklistItemWorkflowOperationCompleted);
            }
            this.InvokeAsync("SetChecklistItemWorkflow", new object[] {
                        parameters}, this.SetChecklistItemWorkflowOperationCompleted, userState);
        }
        
        private void OnSetChecklistItemWorkflowOperationCompleted(object arg) {
            if ((this.SetChecklistItemWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetChecklistItemWorkflowCompleted(this, new SetChecklistItemWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SetTextInfoWorkflow", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SetTextInfoWorkflowResponse SetTextInfoWorkflow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SetTextInfoWorkflowParams parameters) {
            object[] results = this.Invoke("SetTextInfoWorkflow", new object[] {
                        parameters});
            return ((SetTextInfoWorkflowResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetTextInfoWorkflowAsync(SetTextInfoWorkflowParams parameters) {
            this.SetTextInfoWorkflowAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SetTextInfoWorkflowAsync(SetTextInfoWorkflowParams parameters, object userState) {
            if ((this.SetTextInfoWorkflowOperationCompleted == null)) {
                this.SetTextInfoWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTextInfoWorkflowOperationCompleted);
            }
            this.InvokeAsync("SetTextInfoWorkflow", new object[] {
                        parameters}, this.SetTextInfoWorkflowOperationCompleted, userState);
        }
        
        private void OnSetTextInfoWorkflowOperationCompleted(object arg) {
            if ((this.SetTextInfoWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTextInfoWorkflowCompleted(this, new SetTextInfoWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/LinkDocuments", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LinkDocumentsResponse LinkDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] LinkDocumentsParams parameters) {
            object[] results = this.Invoke("LinkDocuments", new object[] {
                        parameters});
            return ((LinkDocumentsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LinkDocumentsAsync(LinkDocumentsParams parameters) {
            this.LinkDocumentsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void LinkDocumentsAsync(LinkDocumentsParams parameters, object userState) {
            if ((this.LinkDocumentsOperationCompleted == null)) {
                this.LinkDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkDocumentsOperationCompleted);
            }
            this.InvokeAsync("LinkDocuments", new object[] {
                        parameters}, this.LinkDocumentsOperationCompleted, userState);
        }
        
        private void OnLinkDocumentsOperationCompleted(object arg) {
            if ((this.LinkDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkDocumentsCompleted(this, new LinkDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UnlinkDocuments", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UnlinkDocumentsResponse UnlinkDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UnlinkDocumentsParams parameters) {
            object[] results = this.Invoke("UnlinkDocuments", new object[] {
                        parameters});
            return ((UnlinkDocumentsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UnlinkDocumentsAsync(UnlinkDocumentsParams parameters) {
            this.UnlinkDocumentsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UnlinkDocumentsAsync(UnlinkDocumentsParams parameters, object userState) {
            if ((this.UnlinkDocumentsOperationCompleted == null)) {
                this.UnlinkDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlinkDocumentsOperationCompleted);
            }
            this.InvokeAsync("UnlinkDocuments", new object[] {
                        parameters}, this.UnlinkDocumentsOperationCompleted, userState);
        }
        
        private void OnUnlinkDocumentsOperationCompleted(object arg) {
            if ((this.UnlinkDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlinkDocumentsCompleted(this, new UnlinkDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/LinkDocAndWFInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LinkDocAndWFInstanceResponse LinkDocAndWFInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] LinkDocAndWFInstanceParams parameters) {
            object[] results = this.Invoke("LinkDocAndWFInstance", new object[] {
                        parameters});
            return ((LinkDocAndWFInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LinkDocAndWFInstanceAsync(LinkDocAndWFInstanceParams parameters) {
            this.LinkDocAndWFInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void LinkDocAndWFInstanceAsync(LinkDocAndWFInstanceParams parameters, object userState) {
            if ((this.LinkDocAndWFInstanceOperationCompleted == null)) {
                this.LinkDocAndWFInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkDocAndWFInstanceOperationCompleted);
            }
            this.InvokeAsync("LinkDocAndWFInstance", new object[] {
                        parameters}, this.LinkDocAndWFInstanceOperationCompleted, userState);
        }
        
        private void OnLinkDocAndWFInstanceOperationCompleted(object arg) {
            if ((this.LinkDocAndWFInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkDocAndWFInstanceCompleted(this, new LinkDocAndWFInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UnlinkDocAndWFInstance", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UnlinkDocAndWFInstanceResponse UnlinkDocAndWFInstance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UnlinkDocAndWFInstanceParams parameters) {
            object[] results = this.Invoke("UnlinkDocAndWFInstance", new object[] {
                        parameters});
            return ((UnlinkDocAndWFInstanceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UnlinkDocAndWFInstanceAsync(UnlinkDocAndWFInstanceParams parameters) {
            this.UnlinkDocAndWFInstanceAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UnlinkDocAndWFInstanceAsync(UnlinkDocAndWFInstanceParams parameters, object userState) {
            if ((this.UnlinkDocAndWFInstanceOperationCompleted == null)) {
                this.UnlinkDocAndWFInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlinkDocAndWFInstanceOperationCompleted);
            }
            this.InvokeAsync("UnlinkDocAndWFInstance", new object[] {
                        parameters}, this.UnlinkDocAndWFInstanceOperationCompleted, userState);
        }
        
        private void OnUnlinkDocAndWFInstanceOperationCompleted(object arg) {
            if ((this.UnlinkDocAndWFInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlinkDocAndWFInstanceCompleted(this, new UnlinkDocAndWFInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetLinkedObjects", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetLinkedObjectsResponse GetLinkedObjects([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetLinkedObjectsParams parameters) {
            object[] results = this.Invoke("GetLinkedObjects", new object[] {
                        parameters});
            return ((GetLinkedObjectsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedObjectsAsync(GetLinkedObjectsParams parameters) {
            this.GetLinkedObjectsAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetLinkedObjectsAsync(GetLinkedObjectsParams parameters, object userState) {
            if ((this.GetLinkedObjectsOperationCompleted == null)) {
                this.GetLinkedObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedObjectsOperationCompleted);
            }
            this.InvokeAsync("GetLinkedObjects", new object[] {
                        parameters}, this.GetLinkedObjectsOperationCompleted, userState);
        }
        
        private void OnGetLinkedObjectsOperationCompleted(object arg) {
            if ((this.GetLinkedObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedObjectsCompleted(this, new GetLinkedObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetLinkedWorkflowsForDoc", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetLinkedWorkflowsForDocResponse GetLinkedWorkflowsForDoc([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetLinkedWorkflowsForDocParams parameters) {
            object[] results = this.Invoke("GetLinkedWorkflowsForDoc", new object[] {
                        parameters});
            return ((GetLinkedWorkflowsForDocResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedWorkflowsForDocAsync(GetLinkedWorkflowsForDocParams parameters) {
            this.GetLinkedWorkflowsForDocAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetLinkedWorkflowsForDocAsync(GetLinkedWorkflowsForDocParams parameters, object userState) {
            if ((this.GetLinkedWorkflowsForDocOperationCompleted == null)) {
                this.GetLinkedWorkflowsForDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedWorkflowsForDocOperationCompleted);
            }
            this.InvokeAsync("GetLinkedWorkflowsForDoc", new object[] {
                        parameters}, this.GetLinkedWorkflowsForDocOperationCompleted, userState);
        }
        
        private void OnGetLinkedWorkflowsForDocOperationCompleted(object arg) {
            if ((this.GetLinkedWorkflowsForDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedWorkflowsForDocCompleted(this, new GetLinkedWorkflowsForDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/StartTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StartTaskResponse StartTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StartTaskParams parameters) {
            object[] results = this.Invoke("StartTask", new object[] {
                        parameters});
            return ((StartTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void StartTaskAsync(StartTaskParams parameters) {
            this.StartTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void StartTaskAsync(StartTaskParams parameters, object userState) {
            if ((this.StartTaskOperationCompleted == null)) {
                this.StartTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartTaskOperationCompleted);
            }
            this.InvokeAsync("StartTask", new object[] {
                        parameters}, this.StartTaskOperationCompleted, userState);
        }
        
        private void OnStartTaskOperationCompleted(object arg) {
            if ((this.StartTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartTaskCompleted(this, new StartTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetTaskResponse GetTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetTaskParams parameters) {
            object[] results = this.Invoke("GetTask", new object[] {
                        parameters});
            return ((GetTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskAsync(GetTaskParams parameters) {
            this.GetTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetTaskAsync(GetTaskParams parameters, object userState) {
            if ((this.GetTaskOperationCompleted == null)) {
                this.GetTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskOperationCompleted);
            }
            this.InvokeAsync("GetTask", new object[] {
                        parameters}, this.GetTaskOperationCompleted, userState);
        }
        
        private void OnGetTaskOperationCompleted(object arg) {
            if ((this.GetTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskCompleted(this, new GetTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetTaskInfo", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetTaskInfoResponse GetTaskInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetTaskInfoParams parameters) {
            object[] results = this.Invoke("GetTaskInfo", new object[] {
                        parameters});
            return ((GetTaskInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskInfoAsync(GetTaskInfoParams parameters) {
            this.GetTaskInfoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetTaskInfoAsync(GetTaskInfoParams parameters, object userState) {
            if ((this.GetTaskInfoOperationCompleted == null)) {
                this.GetTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskInfoOperationCompleted);
            }
            this.InvokeAsync("GetTaskInfo", new object[] {
                        parameters}, this.GetTaskInfoOperationCompleted, userState);
        }
        
        private void OnGetTaskInfoOperationCompleted(object arg) {
            if ((this.GetTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskInfoCompleted(this, new GetTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UpdateTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UpdateTaskResponse UpdateTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UpdateTaskParams parameters) {
            object[] results = this.Invoke("UpdateTask", new object[] {
                        parameters});
            return ((UpdateTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTaskAsync(UpdateTaskParams parameters) {
            this.UpdateTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UpdateTaskAsync(UpdateTaskParams parameters, object userState) {
            if ((this.UpdateTaskOperationCompleted == null)) {
                this.UpdateTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaskOperationCompleted);
            }
            this.InvokeAsync("UpdateTask", new object[] {
                        parameters}, this.UpdateTaskOperationCompleted, userState);
        }
        
        private void OnUpdateTaskOperationCompleted(object arg) {
            if ((this.UpdateTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaskCompleted(this, new UpdateTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DeleteTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteTaskResponse DeleteTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeleteTaskParams parameters) {
            object[] results = this.Invoke("DeleteTask", new object[] {
                        parameters});
            return ((DeleteTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(DeleteTaskParams parameters) {
            this.DeleteTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(DeleteTaskParams parameters, object userState) {
            if ((this.DeleteTaskOperationCompleted == null)) {
                this.DeleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTaskOperationCompleted);
            }
            this.InvokeAsync("DeleteTask", new object[] {
                        parameters}, this.DeleteTaskOperationCompleted, userState);
        }
        
        private void OnDeleteTaskOperationCompleted(object arg) {
            if ((this.DeleteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTaskCompleted(this, new DeleteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/SetTaskStatus", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SetTaskStatusResponse SetTaskStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SetTaskStatusParams parameters) {
            object[] results = this.Invoke("SetTaskStatus", new object[] {
                        parameters});
            return ((SetTaskStatusResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetTaskStatusAsync(SetTaskStatusParams parameters) {
            this.SetTaskStatusAsync(parameters, null);
        }
        
        /// <remarks/>
        public void SetTaskStatusAsync(SetTaskStatusParams parameters, object userState) {
            if ((this.SetTaskStatusOperationCompleted == null)) {
                this.SetTaskStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTaskStatusOperationCompleted);
            }
            this.InvokeAsync("SetTaskStatus", new object[] {
                        parameters}, this.SetTaskStatusOperationCompleted, userState);
        }
        
        private void OnSetTaskStatusOperationCompleted(object arg) {
            if ((this.SetTaskStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTaskStatusCompleted(this, new SetTaskStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UpdateTaskComment", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UpdateTaskCommentResponse UpdateTaskComment([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UpdateTaskCommentParams parameters) {
            object[] results = this.Invoke("UpdateTaskComment", new object[] {
                        parameters});
            return ((UpdateTaskCommentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTaskCommentAsync(UpdateTaskCommentParams parameters) {
            this.UpdateTaskCommentAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UpdateTaskCommentAsync(UpdateTaskCommentParams parameters, object userState) {
            if ((this.UpdateTaskCommentOperationCompleted == null)) {
                this.UpdateTaskCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaskCommentOperationCompleted);
            }
            this.InvokeAsync("UpdateTaskComment", new object[] {
                        parameters}, this.UpdateTaskCommentOperationCompleted, userState);
        }
        
        private void OnUpdateTaskCommentOperationCompleted(object arg) {
            if ((this.UpdateTaskCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaskCommentCompleted(this, new UpdateTaskCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/CompleteTask", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CompleteTaskResponse CompleteTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CompleteTaskParams parameters) {
            object[] results = this.Invoke("CompleteTask", new object[] {
                        parameters});
            return ((CompleteTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteTaskAsync(CompleteTaskParams parameters) {
            this.CompleteTaskAsync(parameters, null);
        }
        
        /// <remarks/>
        public void CompleteTaskAsync(CompleteTaskParams parameters, object userState) {
            if ((this.CompleteTaskOperationCompleted == null)) {
                this.CompleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteTaskOperationCompleted);
            }
            this.InvokeAsync("CompleteTask", new object[] {
                        parameters}, this.CompleteTaskOperationCompleted, userState);
        }
        
        private void OnCompleteTaskOperationCompleted(object arg) {
            if ((this.CompleteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteTaskCompleted(this, new CompleteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteTaskInfoQuery", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteTaskInfoQueryResponse ExecuteTaskInfoQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteTaskInfoQueryParams parameters) {
            object[] results = this.Invoke("ExecuteTaskInfoQuery", new object[] {
                        parameters});
            return ((ExecuteTaskInfoQueryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteTaskInfoQueryAsync(ExecuteTaskInfoQueryParams parameters) {
            this.ExecuteTaskInfoQueryAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteTaskInfoQueryAsync(ExecuteTaskInfoQueryParams parameters, object userState) {
            if ((this.ExecuteTaskInfoQueryOperationCompleted == null)) {
                this.ExecuteTaskInfoQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteTaskInfoQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteTaskInfoQuery", new object[] {
                        parameters}, this.ExecuteTaskInfoQueryOperationCompleted, userState);
        }
        
        private void OnExecuteTaskInfoQueryOperationCompleted(object arg) {
            if ((this.ExecuteTaskInfoQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteTaskInfoQueryCompleted(this, new ExecuteTaskInfoQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetSettingString", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetSettingStringResponse GetSettingString([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetSettingStringParams parameters) {
            object[] results = this.Invoke("GetSettingString", new object[] {
                        parameters});
            return ((GetSettingStringResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettingStringAsync(GetSettingStringParams parameters) {
            this.GetSettingStringAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetSettingStringAsync(GetSettingStringParams parameters, object userState) {
            if ((this.GetSettingStringOperationCompleted == null)) {
                this.GetSettingStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettingStringOperationCompleted);
            }
            this.InvokeAsync("GetSettingString", new object[] {
                        parameters}, this.GetSettingStringOperationCompleted, userState);
        }
        
        private void OnGetSettingStringOperationCompleted(object arg) {
            if ((this.GetSettingStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettingStringCompleted(this, new GetSettingStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetSettingInt", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetSettingIntResponse GetSettingInt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetSettingIntParams parameters) {
            object[] results = this.Invoke("GetSettingInt", new object[] {
                        parameters});
            return ((GetSettingIntResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettingIntAsync(GetSettingIntParams parameters) {
            this.GetSettingIntAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetSettingIntAsync(GetSettingIntParams parameters, object userState) {
            if ((this.GetSettingIntOperationCompleted == null)) {
                this.GetSettingIntOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettingIntOperationCompleted);
            }
            this.InvokeAsync("GetSettingInt", new object[] {
                        parameters}, this.GetSettingIntOperationCompleted, userState);
        }
        
        private void OnGetSettingIntOperationCompleted(object arg) {
            if ((this.GetSettingIntCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettingIntCompleted(this, new GetSettingIntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetReportDefinition", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetReportDefinitionResponse GetReportDefinition([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetReportDefinitionParams parameters) {
            object[] results = this.Invoke("GetReportDefinition", new object[] {
                        parameters});
            return ((GetReportDefinitionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportDefinitionAsync(GetReportDefinitionParams parameters) {
            this.GetReportDefinitionAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetReportDefinitionAsync(GetReportDefinitionParams parameters, object userState) {
            if ((this.GetReportDefinitionOperationCompleted == null)) {
                this.GetReportDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetReportDefinition", new object[] {
                        parameters}, this.GetReportDefinitionOperationCompleted, userState);
        }
        
        private void OnGetReportDefinitionOperationCompleted(object arg) {
            if ((this.GetReportDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportDefinitionCompleted(this, new GetReportDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/ExecuteReport", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExecuteReportResponse ExecuteReport([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExecuteReportParams parameters) {
            object[] results = this.Invoke("ExecuteReport", new object[] {
                        parameters});
            return ((ExecuteReportResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteReportAsync(ExecuteReportParams parameters) {
            this.ExecuteReportAsync(parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteReportAsync(ExecuteReportParams parameters, object userState) {
            if ((this.ExecuteReportOperationCompleted == null)) {
                this.ExecuteReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteReportOperationCompleted);
            }
            this.InvokeAsync("ExecuteReport", new object[] {
                        parameters}, this.ExecuteReportOperationCompleted, userState);
        }
        
        private void OnExecuteReportOperationCompleted(object arg) {
            if ((this.ExecuteReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteReportCompleted(this, new ExecuteReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetKeywordsByFieldNo", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetKeywordsByFieldNoResponse GetKeywordsByFieldNo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetKeywordsByFieldNoParams parameters) {
            object[] results = this.Invoke("GetKeywordsByFieldNo", new object[] {
                        parameters});
            return ((GetKeywordsByFieldNoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeywordsByFieldNoAsync(GetKeywordsByFieldNoParams parameters) {
            this.GetKeywordsByFieldNoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetKeywordsByFieldNoAsync(GetKeywordsByFieldNoParams parameters, object userState) {
            if ((this.GetKeywordsByFieldNoOperationCompleted == null)) {
                this.GetKeywordsByFieldNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeywordsByFieldNoOperationCompleted);
            }
            this.InvokeAsync("GetKeywordsByFieldNo", new object[] {
                        parameters}, this.GetKeywordsByFieldNoOperationCompleted, userState);
        }
        
        private void OnGetKeywordsByFieldNoOperationCompleted(object arg) {
            if ((this.GetKeywordsByFieldNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeywordsByFieldNoCompleted(this, new GetKeywordsByFieldNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/GetDictionaryInfo", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDictionaryInfoResponse GetDictionaryInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDictionaryInfoParams parameters) {
            object[] results = this.Invoke("GetDictionaryInfo", new object[] {
                        parameters});
            return ((GetDictionaryInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDictionaryInfoAsync(GetDictionaryInfoParams parameters) {
            this.GetDictionaryInfoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void GetDictionaryInfoAsync(GetDictionaryInfoParams parameters, object userState) {
            if ((this.GetDictionaryInfoOperationCompleted == null)) {
                this.GetDictionaryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictionaryInfoOperationCompleted);
            }
            this.InvokeAsync("GetDictionaryInfo", new object[] {
                        parameters}, this.GetDictionaryInfoOperationCompleted, userState);
        }
        
        private void OnGetDictionaryInfoOperationCompleted(object arg) {
            if ((this.GetDictionaryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictionaryInfoCompleted(this, new GetDictionaryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/AddDictionaryKeyword", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AddDictionaryKeywordResponse AddDictionaryKeyword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AddDictionaryKeywordParams parameters) {
            object[] results = this.Invoke("AddDictionaryKeyword", new object[] {
                        parameters});
            return ((AddDictionaryKeywordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddDictionaryKeywordAsync(AddDictionaryKeywordParams parameters) {
            this.AddDictionaryKeywordAsync(parameters, null);
        }
        
        /// <remarks/>
        public void AddDictionaryKeywordAsync(AddDictionaryKeywordParams parameters, object userState) {
            if ((this.AddDictionaryKeywordOperationCompleted == null)) {
                this.AddDictionaryKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDictionaryKeywordOperationCompleted);
            }
            this.InvokeAsync("AddDictionaryKeyword", new object[] {
                        parameters}, this.AddDictionaryKeywordOperationCompleted, userState);
        }
        
        private void OnAddDictionaryKeywordOperationCompleted(object arg) {
            if ((this.AddDictionaryKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDictionaryKeywordCompleted(this, new AddDictionaryKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/DeleteDictionaryKeyword", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteDictionaryKeywordResponse DeleteDictionaryKeyword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeleteDictionaryKeywordParams parameters) {
            object[] results = this.Invoke("DeleteDictionaryKeyword", new object[] {
                        parameters});
            return ((DeleteDictionaryKeywordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDictionaryKeywordAsync(DeleteDictionaryKeywordParams parameters) {
            this.DeleteDictionaryKeywordAsync(parameters, null);
        }
        
        /// <remarks/>
        public void DeleteDictionaryKeywordAsync(DeleteDictionaryKeywordParams parameters, object userState) {
            if ((this.DeleteDictionaryKeywordOperationCompleted == null)) {
                this.DeleteDictionaryKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDictionaryKeywordOperationCompleted);
            }
            this.InvokeAsync("DeleteDictionaryKeyword", new object[] {
                        parameters}, this.DeleteDictionaryKeywordOperationCompleted, userState);
        }
        
        private void OnDeleteDictionaryKeywordOperationCompleted(object arg) {
            if ((this.DeleteDictionaryKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDictionaryKeywordCompleted(this, new DeleteDictionaryKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.therefore.net/webservices/interop/v0001/messages/IThereforeService" +
            "/UpdateDictionaryKeyword", RequestNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", ResponseNamespace="http://schemas.therefore.net/webservices/interop/v0001/messages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UpdateDictionaryKeywordResponse UpdateDictionaryKeyword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UpdateDictionaryKeywordParams parameters) {
            object[] results = this.Invoke("UpdateDictionaryKeyword", new object[] {
                        parameters});
            return ((UpdateDictionaryKeywordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDictionaryKeywordAsync(UpdateDictionaryKeywordParams parameters) {
            this.UpdateDictionaryKeywordAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UpdateDictionaryKeywordAsync(UpdateDictionaryKeywordParams parameters, object userState) {
            if ((this.UpdateDictionaryKeywordOperationCompleted == null)) {
                this.UpdateDictionaryKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDictionaryKeywordOperationCompleted);
            }
            this.InvokeAsync("UpdateDictionaryKeyword", new object[] {
                        parameters}, this.UpdateDictionaryKeywordOperationCompleted, userState);
        }
        
        private void OnUpdateDictionaryKeywordOperationCompleted(object arg) {
            if ((this.UpdateDictionaryKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDictionaryKeywordCompleted(this, new UpdateDictionaryKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateDocumentParams {
        
        private int categoryNoField;
        
        private string checkInCommentsField;
        
        private WSIndexDataItem[] indexDataItemsField;
        
        private WSStreamInfoWithData[] streamsField;
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckInComments {
            get {
                return this.checkInCommentsField;
            }
            set {
                this.checkInCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSIndexDataItem[] IndexDataItems {
            get {
                return this.indexDataItemsField;
            }
            set {
                this.indexDataItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSStreamInfoWithData[] Streams {
            get {
                return this.streamsField;
            }
            set {
                this.streamsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataItem {
        
        private WSIndexDataDate dateIndexDataField;
        
        private WSIndexDataInt intIndexDataField;
        
        private WSIndexDataLogical logicalIndexDataField;
        
        private WSIndexDataMoney moneyIndexDataField;
        
        private WSIndexDataMultipleKeyword multipleKeywordDataField;
        
        private WSIndexDataSingleKeyword singleKeywordDataField;
        
        private WSIndexDataString stringIndexDataField;
        
        private WSIndexDataTable tableIndexDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataDate DateIndexData {
            get {
                return this.dateIndexDataField;
            }
            set {
                this.dateIndexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataInt IntIndexData {
            get {
                return this.intIndexDataField;
            }
            set {
                this.intIndexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataLogical LogicalIndexData {
            get {
                return this.logicalIndexDataField;
            }
            set {
                this.logicalIndexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataMoney MoneyIndexData {
            get {
                return this.moneyIndexDataField;
            }
            set {
                this.moneyIndexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataMultipleKeyword MultipleKeywordData {
            get {
                return this.multipleKeywordDataField;
            }
            set {
                this.multipleKeywordDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataSingleKeyword SingleKeywordData {
            get {
                return this.singleKeywordDataField;
            }
            set {
                this.singleKeywordDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataString StringIndexData {
            get {
                return this.stringIndexDataField;
            }
            set {
                this.stringIndexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataTable TableIndexData {
            get {
                return this.tableIndexDataField;
            }
            set {
                this.tableIndexDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataDate : WSIndexDataBase {
        
        private System.Nullable<System.DateTime> dataValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DataValue {
            get {
                return this.dataValueField;
            }
            set {
                this.dataValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSIndexDataTable))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSIndexDataString))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSIndexDataSingleKeyword))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSIndexDataMultipleKeyword))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSIndexDataMoney))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSIndexDataLogical))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSIndexDataInt))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSIndexDataDate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataBase {
        
        private int fieldNoField;
        
        /// <remarks/>
        public int FieldNo {
            get {
                return this.fieldNoField;
            }
            set {
                this.fieldNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateDictionaryKeywordResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateDictionaryKeywordParams {
        
        private System.Nullable<int> byDictionaryIDField;
        
        private bool byDictionaryIDFieldSpecified;
        
        private System.Nullable<int> byDictionaryTypeNoField;
        
        private bool byDictionaryTypeNoFieldSpecified;
        
        private System.Nullable<bool> isKeywordDeactivatedField;
        
        private bool isKeywordDeactivatedFieldSpecified;
        
        private int keywordIDField;
        
        private string keywordNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ByDictionaryID {
            get {
                return this.byDictionaryIDField;
            }
            set {
                this.byDictionaryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ByDictionaryIDSpecified {
            get {
                return this.byDictionaryIDFieldSpecified;
            }
            set {
                this.byDictionaryIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ByDictionaryTypeNo {
            get {
                return this.byDictionaryTypeNoField;
            }
            set {
                this.byDictionaryTypeNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ByDictionaryTypeNoSpecified {
            get {
                return this.byDictionaryTypeNoFieldSpecified;
            }
            set {
                this.byDictionaryTypeNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsKeywordDeactivated {
            get {
                return this.isKeywordDeactivatedField;
            }
            set {
                this.isKeywordDeactivatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsKeywordDeactivatedSpecified {
            get {
                return this.isKeywordDeactivatedFieldSpecified;
            }
            set {
                this.isKeywordDeactivatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int KeywordID {
            get {
                return this.keywordIDField;
            }
            set {
                this.keywordIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string KeywordName {
            get {
                return this.keywordNameField;
            }
            set {
                this.keywordNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteDictionaryKeywordResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteDictionaryKeywordParams {
        
        private System.Nullable<int> byDictionaryIDField;
        
        private bool byDictionaryIDFieldSpecified;
        
        private System.Nullable<int> byDictionaryTypeNoField;
        
        private bool byDictionaryTypeNoFieldSpecified;
        
        private int keywordIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ByDictionaryID {
            get {
                return this.byDictionaryIDField;
            }
            set {
                this.byDictionaryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ByDictionaryIDSpecified {
            get {
                return this.byDictionaryIDFieldSpecified;
            }
            set {
                this.byDictionaryIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ByDictionaryTypeNo {
            get {
                return this.byDictionaryTypeNoField;
            }
            set {
                this.byDictionaryTypeNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ByDictionaryTypeNoSpecified {
            get {
                return this.byDictionaryTypeNoFieldSpecified;
            }
            set {
                this.byDictionaryTypeNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int KeywordID {
            get {
                return this.keywordIDField;
            }
            set {
                this.keywordIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class AddDictionaryKeywordResponse {
        
        private int keywordIDField;
        
        private bool keywordIDFieldSpecified;
        
        /// <remarks/>
        public int KeywordID {
            get {
                return this.keywordIDField;
            }
            set {
                this.keywordIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeywordIDSpecified {
            get {
                return this.keywordIDFieldSpecified;
            }
            set {
                this.keywordIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class AddDictionaryKeywordParams {
        
        private System.Nullable<int> byDictionaryIDField;
        
        private bool byDictionaryIDFieldSpecified;
        
        private System.Nullable<int> byDictionaryTypeNoField;
        
        private bool byDictionaryTypeNoFieldSpecified;
        
        private bool isKeywordDeactivatedField;
        
        private bool isKeywordDeactivatedFieldSpecified;
        
        private string keywordNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ByDictionaryID {
            get {
                return this.byDictionaryIDField;
            }
            set {
                this.byDictionaryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ByDictionaryIDSpecified {
            get {
                return this.byDictionaryIDFieldSpecified;
            }
            set {
                this.byDictionaryIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ByDictionaryTypeNo {
            get {
                return this.byDictionaryTypeNoField;
            }
            set {
                this.byDictionaryTypeNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ByDictionaryTypeNoSpecified {
            get {
                return this.byDictionaryTypeNoFieldSpecified;
            }
            set {
                this.byDictionaryTypeNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsKeywordDeactivated {
            get {
                return this.isKeywordDeactivatedField;
            }
            set {
                this.isKeywordDeactivatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsKeywordDeactivatedSpecified {
            get {
                return this.isKeywordDeactivatedFieldSpecified;
            }
            set {
                this.isKeywordDeactivatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string KeywordName {
            get {
                return this.keywordNameField;
            }
            set {
                this.keywordNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSKeyword {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isDeactivatedField;
        
        private bool isDeactivatedFieldSpecified;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeactivated {
            get {
                return this.isDeactivatedField;
            }
            set {
                this.isDeactivatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDeactivatedSpecified {
            get {
                return this.isDeactivatedFieldSpecified;
            }
            set {
                this.isDeactivatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSKeywordDictionary {
        
        private int folderNoField;
        
        private bool folderNoFieldSpecified;
        
        private WSKeyword[] itemsField;
        
        private int keywordDictionaryNoField;
        
        private bool keywordDictionaryNoFieldSpecified;
        
        private int multiTypeNoField;
        
        private bool multiTypeNoFieldSpecified;
        
        private string nameField;
        
        private int singleTypeNoField;
        
        private bool singleTypeNoFieldSpecified;
        
        private string tableNameField;
        
        private string tableNameMultiKeywordField;
        
        /// <remarks/>
        public int FolderNo {
            get {
                return this.folderNoField;
            }
            set {
                this.folderNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FolderNoSpecified {
            get {
                return this.folderNoFieldSpecified;
            }
            set {
                this.folderNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSKeyword[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        public int KeywordDictionaryNo {
            get {
                return this.keywordDictionaryNoField;
            }
            set {
                this.keywordDictionaryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeywordDictionaryNoSpecified {
            get {
                return this.keywordDictionaryNoFieldSpecified;
            }
            set {
                this.keywordDictionaryNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MultiTypeNo {
            get {
                return this.multiTypeNoField;
            }
            set {
                this.multiTypeNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiTypeNoSpecified {
            get {
                return this.multiTypeNoFieldSpecified;
            }
            set {
                this.multiTypeNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int SingleTypeNo {
            get {
                return this.singleTypeNoField;
            }
            set {
                this.singleTypeNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SingleTypeNoSpecified {
            get {
                return this.singleTypeNoFieldSpecified;
            }
            set {
                this.singleTypeNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TableNameMultiKeyword {
            get {
                return this.tableNameMultiKeywordField;
            }
            set {
                this.tableNameMultiKeywordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDictionaryInfoResponse {
        
        private WSKeywordDictionary dictionaryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSKeywordDictionary Dictionary {
            get {
                return this.dictionaryField;
            }
            set {
                this.dictionaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDictionaryInfoParams {
        
        private System.Nullable<int> byDictionaryIDField;
        
        private bool byDictionaryIDFieldSpecified;
        
        private System.Nullable<int> byDictionaryTypeNoField;
        
        private bool byDictionaryTypeNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ByDictionaryID {
            get {
                return this.byDictionaryIDField;
            }
            set {
                this.byDictionaryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ByDictionaryIDSpecified {
            get {
                return this.byDictionaryIDFieldSpecified;
            }
            set {
                this.byDictionaryIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ByDictionaryTypeNo {
            get {
                return this.byDictionaryTypeNoField;
            }
            set {
                this.byDictionaryTypeNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ByDictionaryTypeNoSpecified {
            get {
                return this.byDictionaryTypeNoFieldSpecified;
            }
            set {
                this.byDictionaryTypeNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetKeywordsByFieldNoResponse {
        
        private string[] keywordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword")]
        public string[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetKeywordsByFieldNoParams {
        
        private int categoryNoField;
        
        private string dependentFieldFilterValueField;
        
        private int fieldNoField;
        
        private bool showDeactivatedKeywordsField;
        
        private bool showDeactivatedKeywordsFieldSpecified;
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DependentFieldFilterValue {
            get {
                return this.dependentFieldFilterValueField;
            }
            set {
                this.dependentFieldFilterValueField = value;
            }
        }
        
        /// <remarks/>
        public int FieldNo {
            get {
                return this.fieldNoField;
            }
            set {
                this.fieldNoField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowDeactivatedKeywords {
            get {
                return this.showDeactivatedKeywordsField;
            }
            set {
                this.showDeactivatedKeywordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowDeactivatedKeywordsSpecified {
            get {
                return this.showDeactivatedKeywordsFieldSpecified;
            }
            set {
                this.showDeactivatedKeywordsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteReportResponse {
        
        private int reportDefinitionNoField;
        
        private bool reportDefinitionNoFieldSpecified;
        
        private byte[] reportFileDataField;
        
        private string reportFileNameField;
        
        /// <remarks/>
        public int ReportDefinitionNo {
            get {
                return this.reportDefinitionNoField;
            }
            set {
                this.reportDefinitionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportDefinitionNoSpecified {
            get {
                return this.reportDefinitionNoFieldSpecified;
            }
            set {
                this.reportDefinitionNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] ReportFileData {
            get {
                return this.reportFileDataField;
            }
            set {
                this.reportFileDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReportFileName {
            get {
                return this.reportFileNameField;
            }
            set {
                this.reportFileNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSReportParameter {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteReportParams {
        
        private WSReportFormat formatField;
        
        private int reportDefNoField;
        
        private WSReportParameter[] reportParametersField;
        
        /// <remarks/>
        public WSReportFormat Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        public int ReportDefNo {
            get {
                return this.reportDefNoField;
            }
            set {
                this.reportDefNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSReportParameter[] ReportParameters {
            get {
                return this.reportParametersField;
            }
            set {
                this.reportParametersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSReportFormat {
        
        /// <remarks/>
        HTML4,
        
        /// <remarks/>
        Pdf,
        
        /// <remarks/>
        Xml,
        
        /// <remarks/>
        Csv,
        
        /// <remarks/>
        Tiff,
        
        /// <remarks/>
        HTML3,
        
        /// <remarks/>
        MHTML,
        
        /// <remarks/>
        ExcelFormat,
        
        /// <remarks/>
        WordFormat,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSValidParamValue {
        
        private string labelField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSReportParameterDefinition {
        
        private bool allowBlankField;
        
        private bool allowBlankFieldSpecified;
        
        private string defaultValueField;
        
        private bool isHiddenField;
        
        private bool isHiddenFieldSpecified;
        
        private bool isNullableField;
        
        private bool isNullableFieldSpecified;
        
        private string labelField;
        
        private string nameField;
        
        private WSValidParamValue[] validParamValuesField;
        
        /// <remarks/>
        public bool AllowBlank {
            get {
                return this.allowBlankField;
            }
            set {
                this.allowBlankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowBlankSpecified {
            get {
                return this.allowBlankFieldSpecified;
            }
            set {
                this.allowBlankFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public bool IsHidden {
            get {
                return this.isHiddenField;
            }
            set {
                this.isHiddenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsHiddenSpecified {
            get {
                return this.isHiddenFieldSpecified;
            }
            set {
                this.isHiddenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsNullable {
            get {
                return this.isNullableField;
            }
            set {
                this.isNullableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNullableSpecified {
            get {
                return this.isNullableFieldSpecified;
            }
            set {
                this.isNullableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSValidParamValue[] ValidParamValues {
            get {
                return this.validParamValuesField;
            }
            set {
                this.validParamValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetReportDefinitionResponse {
        
        private int categoryNoField;
        
        private bool categoryNoFieldSpecified;
        
        private int folderNoField;
        
        private bool folderNoFieldSpecified;
        
        private bool hasChangeableParametersField;
        
        private bool hasChangeableParametersFieldSpecified;
        
        private bool hasParametersWithoutDefaultField;
        
        private bool hasParametersWithoutDefaultFieldSpecified;
        
        private string nameField;
        
        private int reportDefNoField;
        
        private bool reportDefNoFieldSpecified;
        
        private WSReportParameterDefinition[] reportParametersField;
        
        private WSReportType reportTypeField;
        
        private bool reportTypeFieldSpecified;
        
        private int workflowProcessNoField;
        
        private bool workflowProcessNoFieldSpecified;
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryNoSpecified {
            get {
                return this.categoryNoFieldSpecified;
            }
            set {
                this.categoryNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int FolderNo {
            get {
                return this.folderNoField;
            }
            set {
                this.folderNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FolderNoSpecified {
            get {
                return this.folderNoFieldSpecified;
            }
            set {
                this.folderNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool HasChangeableParameters {
            get {
                return this.hasChangeableParametersField;
            }
            set {
                this.hasChangeableParametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasChangeableParametersSpecified {
            get {
                return this.hasChangeableParametersFieldSpecified;
            }
            set {
                this.hasChangeableParametersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool HasParametersWithoutDefault {
            get {
                return this.hasParametersWithoutDefaultField;
            }
            set {
                this.hasParametersWithoutDefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasParametersWithoutDefaultSpecified {
            get {
                return this.hasParametersWithoutDefaultFieldSpecified;
            }
            set {
                this.hasParametersWithoutDefaultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ReportDefNo {
            get {
                return this.reportDefNoField;
            }
            set {
                this.reportDefNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportDefNoSpecified {
            get {
                return this.reportDefNoFieldSpecified;
            }
            set {
                this.reportDefNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSReportParameterDefinition[] ReportParameters {
            get {
                return this.reportParametersField;
            }
            set {
                this.reportParametersField = value;
            }
        }
        
        /// <remarks/>
        public WSReportType ReportType {
            get {
                return this.reportTypeField;
            }
            set {
                this.reportTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportTypeSpecified {
            get {
                return this.reportTypeFieldSpecified;
            }
            set {
                this.reportTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int WorkflowProcessNo {
            get {
                return this.workflowProcessNoField;
            }
            set {
                this.workflowProcessNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowProcessNoSpecified {
            get {
                return this.workflowProcessNoFieldSpecified;
            }
            set {
                this.workflowProcessNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSReportType {
        
        /// <remarks/>
        ReportTypeNoTemplate,
        
        /// <remarks/>
        ReportTypeCategory,
        
        /// <remarks/>
        ReportTypeWorkflow,
        
        /// <remarks/>
        ReportTypeSystem,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetReportDefinitionParams {
        
        private int reportDefNoField;
        
        private bool reportDefNoFieldSpecified;
        
        /// <remarks/>
        public int ReportDefNo {
            get {
                return this.reportDefNoField;
            }
            set {
                this.reportDefNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportDefNoSpecified {
            get {
                return this.reportDefNoFieldSpecified;
            }
            set {
                this.reportDefNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetSettingIntResponse {
        
        private int settingValueField;
        
        private bool settingValueFieldSpecified;
        
        /// <remarks/>
        public int SettingValue {
            get {
                return this.settingValueField;
            }
            set {
                this.settingValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SettingValueSpecified {
            get {
                return this.settingValueFieldSpecified;
            }
            set {
                this.settingValueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetSettingIntParams {
        
        private int settingKeyField;
        
        /// <remarks/>
        public int SettingKey {
            get {
                return this.settingKeyField;
            }
            set {
                this.settingKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetSettingStringResponse {
        
        private string settingValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SettingValue {
            get {
                return this.settingValueField;
            }
            set {
                this.settingValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetSettingStringParams {
        
        private int settingKeyField;
        
        /// <remarks/>
        public int SettingKey {
            get {
                return this.settingKeyField;
            }
            set {
                this.settingKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteTaskInfoQueryResponse {
        
        private WSTaskInfo[] queryResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSTaskInfo[] QueryResult {
            get {
                return this.queryResultField;
            }
            set {
                this.queryResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTaskInfo {
        
        private string assignedToNameField;
        
        private int assignedToNumberField;
        
        private bool assignedToNumberFieldSpecified;
        
        private string commentField;
        
        private WSTaskDecision completedDecisionField;
        
        private bool completedDecisionFieldSpecified;
        
        private string createdByField;
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private System.Nullable<System.DateTime> dueDateField;
        
        private bool dueDateFieldSpecified;
        
        private string instructionsField;
        
        private bool isAssignedToUserField;
        
        private bool isAssignedToUserFieldSpecified;
        
        private System.DateTime lastUpdateField;
        
        private bool lastUpdateFieldSpecified;
        
        private WSTaskMode modeField;
        
        private bool modeFieldSpecified;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private bool startDateFieldSpecified;
        
        private WSTaskStatus statusField;
        
        private bool statusFieldSpecified;
        
        private string subjectField;
        
        private int taskNoField;
        
        private bool taskNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AssignedToName {
            get {
                return this.assignedToNameField;
            }
            set {
                this.assignedToNameField = value;
            }
        }
        
        /// <remarks/>
        public int AssignedToNumber {
            get {
                return this.assignedToNumberField;
            }
            set {
                this.assignedToNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssignedToNumberSpecified {
            get {
                return this.assignedToNumberFieldSpecified;
            }
            set {
                this.assignedToNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public WSTaskDecision CompletedDecision {
            get {
                return this.completedDecisionField;
            }
            set {
                this.completedDecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompletedDecisionSpecified {
            get {
                return this.completedDecisionFieldSpecified;
            }
            set {
                this.completedDecisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DueDateSpecified {
            get {
                return this.dueDateFieldSpecified;
            }
            set {
                this.dueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Instructions {
            get {
                return this.instructionsField;
            }
            set {
                this.instructionsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAssignedToUser {
            get {
                return this.isAssignedToUserField;
            }
            set {
                this.isAssignedToUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAssignedToUserSpecified {
            get {
                return this.isAssignedToUserFieldSpecified;
            }
            set {
                this.isAssignedToUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastUpdateSpecified {
            get {
                return this.lastUpdateFieldSpecified;
            }
            set {
                this.lastUpdateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSTaskMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModeSpecified {
            get {
                return this.modeFieldSpecified;
            }
            set {
                this.modeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSTaskStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskNoSpecified {
            get {
                return this.taskNoFieldSpecified;
            }
            set {
                this.taskNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTaskDecision {
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        Positive,
        
        /// <remarks/>
        Negative,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTaskMode {
        
        /// <remarks/>
        Complete,
        
        /// <remarks/>
        CompleteDecline,
        
        /// <remarks/>
        ApproveReject,
        
        /// <remarks/>
        YesNo,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTaskStatus {
        
        /// <remarks/>
        NotStartedStatus,
        
        /// <remarks/>
        InProgressStatus,
        
        /// <remarks/>
        WaitingStatus,
        
        /// <remarks/>
        DeferredStatus,
        
        /// <remarks/>
        CompletedStatus,
        
        /// <remarks/>
        RevokedStatus,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteTaskInfoQueryParams {
        
        private int maxRowsField;
        
        private bool maxRowsFieldSpecified;
        
        private WSTaskQueryMode queryModeField;
        
        private int taskNoField;
        
        private WSTaskViewMode viewModeField;
        
        /// <remarks/>
        public int MaxRows {
            get {
                return this.maxRowsField;
            }
            set {
                this.maxRowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxRowsSpecified {
            get {
                return this.maxRowsFieldSpecified;
            }
            set {
                this.maxRowsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSTaskQueryMode QueryMode {
            get {
                return this.queryModeField;
            }
            set {
                this.queryModeField = value;
            }
        }
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
        
        /// <remarks/>
        public WSTaskViewMode ViewMode {
            get {
                return this.viewModeField;
            }
            set {
                this.viewModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTaskQueryMode {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        AllStarted,
        
        /// <remarks/>
        AllParticipated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTaskViewMode {
        
        /// <remarks/>
        AllTasks,
        
        /// <remarks/>
        Today,
        
        /// <remarks/>
        Next7,
        
        /// <remarks/>
        Overdue,
        
        /// <remarks/>
        NotStarted,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Completed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CompleteTaskResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CompleteTaskParams {
        
        private string commentField;
        
        private WSTaskDecision taskDecisionField;
        
        private int taskNoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public WSTaskDecision TaskDecision {
            get {
                return this.taskDecisionField;
            }
            set {
                this.taskDecisionField = value;
            }
        }
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateTaskCommentResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateTaskCommentParams {
        
        private string commentField;
        
        private int taskNoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetTaskStatusResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetTaskStatusParams {
        
        private string commentField;
        
        private int taskNoField;
        
        private WSTaskStatus taskStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
        
        /// <remarks/>
        public WSTaskStatus TaskStatus {
            get {
                return this.taskStatusField;
            }
            set {
                this.taskStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteTaskResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteTaskParams {
        
        private int taskNoField;
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateTaskResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateTaskParams {
        
        private WSTask taskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSTask Task {
            get {
                return this.taskField;
            }
            set {
                this.taskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTask {
        
        private WSUser[] assignToField;
        
        private int docNoField;
        
        private System.Nullable<System.DateTime> dueDateField;
        
        private bool dueDateFieldSpecified;
        
        private string instructionsField;
        
        private WSTaskMode modeField;
        
        private bool notifyOnAssignField;
        
        private bool notifyOnAssignFieldSpecified;
        
        private bool notifyOnUpdateField;
        
        private bool notifyOnUpdateFieldSpecified;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private bool startDateFieldSpecified;
        
        private string subjectField;
        
        private System.Nullable<int> taskNoField;
        
        private bool taskNoFieldSpecified;
        
        private int userNoField;
        
        private bool userNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSUser[] AssignTo {
            get {
                return this.assignToField;
            }
            set {
                this.assignToField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DueDateSpecified {
            get {
                return this.dueDateFieldSpecified;
            }
            set {
                this.dueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Instructions {
            get {
                return this.instructionsField;
            }
            set {
                this.instructionsField = value;
            }
        }
        
        /// <remarks/>
        public WSTaskMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        public bool NotifyOnAssign {
            get {
                return this.notifyOnAssignField;
            }
            set {
                this.notifyOnAssignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NotifyOnAssignSpecified {
            get {
                return this.notifyOnAssignFieldSpecified;
            }
            set {
                this.notifyOnAssignFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool NotifyOnUpdate {
            get {
                return this.notifyOnUpdateField;
            }
            set {
                this.notifyOnUpdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NotifyOnUpdateSpecified {
            get {
                return this.notifyOnUpdateFieldSpecified;
            }
            set {
                this.notifyOnUpdateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskNoSpecified {
            get {
                return this.taskNoFieldSpecified;
            }
            set {
                this.taskNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int UserNo {
            get {
                return this.userNoField;
            }
            set {
                this.userNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNoSpecified {
            get {
                return this.userNoFieldSpecified;
            }
            set {
                this.userNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSUser {
        
        private string descriptionField;
        
        private string displayNameField;
        
        private string domainNameField;
        
        private string inFolderField;
        
        private string sMTPField;
        
        private System.Nullable<int> userIdField;
        
        private bool userIdFieldSpecified;
        
        private string userNameField;
        
        private System.Nullable<WSUserType> userTypeField;
        
        private bool userTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InFolder {
            get {
                return this.inFolderField;
            }
            set {
                this.inFolderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SMTP {
            get {
                return this.sMTPField;
            }
            set {
                this.sMTPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserIdSpecified {
            get {
                return this.userIdFieldSpecified;
            }
            set {
                this.userIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<WSUserType> UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserTypeSpecified {
            get {
                return this.userTypeFieldSpecified;
            }
            set {
                this.userTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSUserType {
        
        /// <remarks/>
        SingleUser,
        
        /// <remarks/>
        UserGroup,
        
        /// <remarks/>
        SystemUser,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTaskInfoResponse {
        
        private WSTaskInfo taskInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSTaskInfo TaskInfo {
            get {
                return this.taskInfoField;
            }
            set {
                this.taskInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTaskInfoParams {
        
        private int taskNoField;
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTaskResponse {
        
        private WSTask taskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSTask Task {
            get {
                return this.taskField;
            }
            set {
                this.taskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTaskParams {
        
        private int taskNoField;
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartTaskResponse {
        
        private int taskNoField;
        
        private bool taskNoFieldSpecified;
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskNoSpecified {
            get {
                return this.taskNoFieldSpecified;
            }
            set {
                this.taskNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartTaskParams {
        
        private WSTask taskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSTask Task {
            get {
                return this.taskField;
            }
            set {
                this.taskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFInstanceInfo {
        
        private string assignedToField;
        
        private bool claimedField;
        
        private bool claimedFieldSpecified;
        
        private string currTaskNameField;
        
        private int currTaskNoField;
        
        private bool currTaskNoFieldSpecified;
        
        private int initiatorNoField;
        
        private bool initiatorNoFieldSpecified;
        
        private int instanceNoField;
        
        private bool instanceNoFieldSpecified;
        
        private WSWFDocLinkType linkTypeField;
        
        private bool linkTypeFieldSpecified;
        
        private System.Nullable<System.DateTime> processDueDateField;
        
        private bool processDueDateFieldSpecified;
        
        private string processNameField;
        
        private int processNoField;
        
        private bool processNoFieldSpecified;
        
        private System.Nullable<System.DateTime> processStartDateField;
        
        private bool processStartDateFieldSpecified;
        
        private System.Nullable<System.DateTime> taskDueDateField;
        
        private bool taskDueDateFieldSpecified;
        
        private System.Nullable<System.DateTime> taskStartDateField;
        
        private bool taskStartDateFieldSpecified;
        
        private int tokenNoField;
        
        private bool tokenNoFieldSpecified;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AssignedTo {
            get {
                return this.assignedToField;
            }
            set {
                this.assignedToField = value;
            }
        }
        
        /// <remarks/>
        public bool Claimed {
            get {
                return this.claimedField;
            }
            set {
                this.claimedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClaimedSpecified {
            get {
                return this.claimedFieldSpecified;
            }
            set {
                this.claimedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrTaskName {
            get {
                return this.currTaskNameField;
            }
            set {
                this.currTaskNameField = value;
            }
        }
        
        /// <remarks/>
        public int CurrTaskNo {
            get {
                return this.currTaskNoField;
            }
            set {
                this.currTaskNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrTaskNoSpecified {
            get {
                return this.currTaskNoFieldSpecified;
            }
            set {
                this.currTaskNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int InitiatorNo {
            get {
                return this.initiatorNoField;
            }
            set {
                this.initiatorNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InitiatorNoSpecified {
            get {
                return this.initiatorNoFieldSpecified;
            }
            set {
                this.initiatorNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int InstanceNo {
            get {
                return this.instanceNoField;
            }
            set {
                this.instanceNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InstanceNoSpecified {
            get {
                return this.instanceNoFieldSpecified;
            }
            set {
                this.instanceNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSWFDocLinkType LinkType {
            get {
                return this.linkTypeField;
            }
            set {
                this.linkTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinkTypeSpecified {
            get {
                return this.linkTypeFieldSpecified;
            }
            set {
                this.linkTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ProcessDueDate {
            get {
                return this.processDueDateField;
            }
            set {
                this.processDueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessDueDateSpecified {
            get {
                return this.processDueDateFieldSpecified;
            }
            set {
                this.processDueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProcessName {
            get {
                return this.processNameField;
            }
            set {
                this.processNameField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessNo {
            get {
                return this.processNoField;
            }
            set {
                this.processNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessNoSpecified {
            get {
                return this.processNoFieldSpecified;
            }
            set {
                this.processNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ProcessStartDate {
            get {
                return this.processStartDateField;
            }
            set {
                this.processStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessStartDateSpecified {
            get {
                return this.processStartDateFieldSpecified;
            }
            set {
                this.processStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TaskDueDate {
            get {
                return this.taskDueDateField;
            }
            set {
                this.taskDueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskDueDateSpecified {
            get {
                return this.taskDueDateFieldSpecified;
            }
            set {
                this.taskDueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TaskStartDate {
            get {
                return this.taskStartDateField;
            }
            set {
                this.taskStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskStartDateSpecified {
            get {
                return this.taskStartDateFieldSpecified;
            }
            set {
                this.taskStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TokenNoSpecified {
            get {
                return this.tokenNoFieldSpecified;
            }
            set {
                this.tokenNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSWFDocLinkType {
        
        /// <remarks/>
        Any,
        
        /// <remarks/>
        MainDocument,
        
        /// <remarks/>
        AdditionalDocument,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetLinkedWorkflowsForDocResponse {
        
        private WSWFInstanceInfo[] infoListsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSWFInstanceInfo[] InfoLists {
            get {
                return this.infoListsField;
            }
            set {
                this.infoListsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetLinkedWorkflowsForDocParams {
        
        private int docNoField;
        
        private WSWFDocLinkType wFDocLinkTypeField;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        public WSWFDocLinkType WFDocLinkType {
            get {
                return this.wFDocLinkTypeField;
            }
            set {
                this.wFDocLinkTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSLinkedObjectInfo {
        
        private int linkedObjectIdField;
        
        private bool linkedObjectIdFieldSpecified;
        
        private WSLinkedObjectType linkedObjectTypeField;
        
        private bool linkedObjectTypeFieldSpecified;
        
        /// <remarks/>
        public int LinkedObjectId {
            get {
                return this.linkedObjectIdField;
            }
            set {
                this.linkedObjectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinkedObjectIdSpecified {
            get {
                return this.linkedObjectIdFieldSpecified;
            }
            set {
                this.linkedObjectIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSLinkedObjectType LinkedObjectType {
            get {
                return this.linkedObjectTypeField;
            }
            set {
                this.linkedObjectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinkedObjectTypeSpecified {
            get {
                return this.linkedObjectTypeFieldSpecified;
            }
            set {
                this.linkedObjectTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSLinkedObjectType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        AutomaticDocumentLink,
        
        /// <remarks/>
        ManualDocumentLink,
        
        /// <remarks/>
        DocumentLink,
        
        /// <remarks/>
        WorkflowLink,
        
        /// <remarks/>
        TaskLink,
        
        /// <remarks/>
        CaseLink,
        
        /// <remarks/>
        AllLinks,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetLinkedObjectsResponse {
        
        private WSLinkedObjectInfo[] linkedObjectsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSLinkedObjectInfo[] LinkedObjects {
            get {
                return this.linkedObjectsField;
            }
            set {
                this.linkedObjectsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetLinkedObjectsParams {
        
        private int objectIdField;
        
        private WSGetLinkedObjectType objectTypeField;
        
        /// <remarks/>
        public int ObjectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        public WSGetLinkedObjectType ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSGetLinkedObjectType {
        
        /// <remarks/>
        Document,
        
        /// <remarks/>
        WorkflowInstance,
        
        /// <remarks/>
        Task,
        
        /// <remarks/>
        Case,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UnlinkDocAndWFInstanceResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UnlinkDocAndWFInstanceParams {
        
        private bool autoClaimWorkflowInstanceField;
        
        private bool autoClaimWorkflowInstanceFieldSpecified;
        
        private int docNoField;
        
        private int tokenNoField;
        
        private int workflowInstanceNoField;
        
        /// <remarks/>
        public bool AutoClaimWorkflowInstance {
            get {
                return this.autoClaimWorkflowInstanceField;
            }
            set {
                this.autoClaimWorkflowInstanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoClaimWorkflowInstanceSpecified {
            get {
                return this.autoClaimWorkflowInstanceFieldSpecified;
            }
            set {
                this.autoClaimWorkflowInstanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
        
        /// <remarks/>
        public int WorkflowInstanceNo {
            get {
                return this.workflowInstanceNoField;
            }
            set {
                this.workflowInstanceNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class LinkDocAndWFInstanceResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class LinkDocAndWFInstanceParams {
        
        private bool autoClaimWorkflowInstanceField;
        
        private bool autoClaimWorkflowInstanceFieldSpecified;
        
        private int docNoField;
        
        private int tokenNoField;
        
        private int workflowInstanceNoField;
        
        /// <remarks/>
        public bool AutoClaimWorkflowInstance {
            get {
                return this.autoClaimWorkflowInstanceField;
            }
            set {
                this.autoClaimWorkflowInstanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoClaimWorkflowInstanceSpecified {
            get {
                return this.autoClaimWorkflowInstanceFieldSpecified;
            }
            set {
                this.autoClaimWorkflowInstanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
        
        /// <remarks/>
        public int WorkflowInstanceNo {
            get {
                return this.workflowInstanceNoField;
            }
            set {
                this.workflowInstanceNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UnlinkDocumentsResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UnlinkDocumentsParams {
        
        private int docNoAField;
        
        private int docNoBField;
        
        /// <remarks/>
        public int DocNoA {
            get {
                return this.docNoAField;
            }
            set {
                this.docNoAField = value;
            }
        }
        
        /// <remarks/>
        public int DocNoB {
            get {
                return this.docNoBField;
            }
            set {
                this.docNoBField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class LinkDocumentsResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class LinkDocumentsParams {
        
        private int docNoAField;
        
        private int docNoBField;
        
        /// <remarks/>
        public int DocNoA {
            get {
                return this.docNoAField;
            }
            set {
                this.docNoAField = value;
            }
        }
        
        /// <remarks/>
        public int DocNoB {
            get {
                return this.docNoBField;
            }
            set {
                this.docNoBField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetTextInfoWorkflowResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetTextInfoWorkflowParams {
        
        private int instanceNoField;
        
        private string textInformationField;
        
        private int tokenNoField;
        
        /// <remarks/>
        public int InstanceNo {
            get {
                return this.instanceNoField;
            }
            set {
                this.instanceNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TextInformation {
            get {
                return this.textInformationField;
            }
            set {
                this.textInformationField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetChecklistItemWorkflowResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SetChecklistItemWorkflowParams {
        
        private int checkListItemIndexField;
        
        private int instanceNoField;
        
        private bool isCheckedField;
        
        private int tokenNoField;
        
        /// <remarks/>
        public int CheckListItemIndex {
            get {
                return this.checkListItemIndexField;
            }
            set {
                this.checkListItemIndexField = value;
            }
        }
        
        /// <remarks/>
        public int InstanceNo {
            get {
                return this.instanceNoField;
            }
            set {
                this.instanceNoField = value;
            }
        }
        
        /// <remarks/>
        public bool IsChecked {
            get {
                return this.isCheckedField;
            }
            set {
                this.isCheckedField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class FinishCurrentWorkflowTaskResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class FinishCurrentWorkflowTaskParams {
        
        private int instanceNoField;
        
        private int nextTaskNoField;
        
        private string textInformationField;
        
        private int tokenNoField;
        
        /// <remarks/>
        public int InstanceNo {
            get {
                return this.instanceNoField;
            }
            set {
                this.instanceNoField = value;
            }
        }
        
        /// <remarks/>
        public int NextTaskNo {
            get {
                return this.nextTaskNoField;
            }
            set {
                this.nextTaskNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TextInformation {
            get {
                return this.textInformationField;
            }
            set {
                this.textInformationField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteWorkflowInstanceResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteWorkflowInstanceParams {
        
        private int instanceNoField;
        
        private int tokenNoField;
        
        /// <remarks/>
        public int InstanceNo {
            get {
                return this.instanceNoField;
            }
            set {
                this.instanceNoField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DelegateWorkflowInstanceResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DelegateWorkflowInstanceParams {
        
        private string domainNameField;
        
        private int instanceNoField;
        
        private int tokenNoField;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public int InstanceNo {
            get {
                return this.instanceNoField;
            }
            set {
                this.instanceNoField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DisclaimWorkflowInstanceResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DisclaimWorkflowInstanceParams {
        
        private int instanceNoField;
        
        private int tokenNoField;
        
        /// <remarks/>
        public int InstanceNo {
            get {
                return this.instanceNoField;
            }
            set {
                this.instanceNoField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ClaimWorkflowInstanceResponse {
        
        private string claimedByUserNameField;
        
        private bool isAlreadyClaimedField;
        
        private bool isAlreadyClaimedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClaimedByUserName {
            get {
                return this.claimedByUserNameField;
            }
            set {
                this.claimedByUserNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAlreadyClaimed {
            get {
                return this.isAlreadyClaimedField;
            }
            set {
                this.isAlreadyClaimedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAlreadyClaimedSpecified {
            get {
                return this.isAlreadyClaimedFieldSpecified;
            }
            set {
                this.isAlreadyClaimedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ClaimWorkflowInstanceParams {
        
        private int instanceNoField;
        
        private int tokenNoField;
        
        /// <remarks/>
        public int InstanceNo {
            get {
                return this.instanceNoField;
            }
            set {
                this.instanceNoField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartWorkflowInstanceResponse {
        
        private int workflowInstanceNoField;
        
        private bool workflowInstanceNoFieldSpecified;
        
        /// <remarks/>
        public int WorkflowInstanceNo {
            get {
                return this.workflowInstanceNoField;
            }
            set {
                this.workflowInstanceNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowInstanceNoSpecified {
            get {
                return this.workflowInstanceNoFieldSpecified;
            }
            set {
                this.workflowInstanceNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartWorkflowInstanceParams {
        
        private int docNoField;
        
        private int processNoField;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessNo {
            get {
                return this.processNoField;
            }
            set {
                this.processNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFInstance {
        
        private bool askForPwdField;
        
        private bool askForPwdFieldSpecified;
        
        private string assignedToField;
        
        private int checklistItemCountField;
        
        private bool checklistItemCountFieldSpecified;
        
        private bool claimedField;
        
        private bool claimedFieldSpecified;
        
        private string currTaskNameField;
        
        private int currTaskNoField;
        
        private bool currTaskNoFieldSpecified;
        
        private int currTaskTypeField;
        
        private bool currTaskTypeFieldSpecified;
        
        private bool delegationDisabledField;
        
        private bool delegationDisabledFieldSpecified;
        
        private int historyEntryCountField;
        
        private bool historyEntryCountFieldSpecified;
        
        private int initiatorNoField;
        
        private bool initiatorNoFieldSpecified;
        
        private int instanceNoField;
        
        private bool instanceNoFieldSpecified;
        
        private bool isAssignedToUserField;
        
        private bool isAssignedToUserFieldSpecified;
        
        private bool isChangeCtgryField;
        
        private bool isChangeCtgryFieldSpecified;
        
        private bool isProcessOwnerField;
        
        private bool isProcessOwnerFieldSpecified;
        
        private int linkedDocCountField;
        
        private bool linkedDocCountFieldSpecified;
        
        private int nextTaskCountField;
        
        private bool nextTaskCountFieldSpecified;
        
        private System.Nullable<System.DateTime> processDueDateField;
        
        private bool processDueDateFieldSpecified;
        
        private string processNameField;
        
        private int processNoField;
        
        private bool processNoFieldSpecified;
        
        private System.Nullable<System.DateTime> processStartDateField;
        
        private bool processStartDateFieldSpecified;
        
        private System.Nullable<System.DateTime> taskDueDateField;
        
        private bool taskDueDateFieldSpecified;
        
        private System.Nullable<System.DateTime> taskStartDateField;
        
        private bool taskStartDateFieldSpecified;
        
        private string textField;
        
        private int tokenNoField;
        
        private bool tokenNoFieldSpecified;
        
        private int transitionCountField;
        
        private bool transitionCountFieldSpecified;
        
        private bool useChecklistField;
        
        private bool useChecklistFieldSpecified;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        public bool AskForPwd {
            get {
                return this.askForPwdField;
            }
            set {
                this.askForPwdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AskForPwdSpecified {
            get {
                return this.askForPwdFieldSpecified;
            }
            set {
                this.askForPwdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AssignedTo {
            get {
                return this.assignedToField;
            }
            set {
                this.assignedToField = value;
            }
        }
        
        /// <remarks/>
        public int ChecklistItemCount {
            get {
                return this.checklistItemCountField;
            }
            set {
                this.checklistItemCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChecklistItemCountSpecified {
            get {
                return this.checklistItemCountFieldSpecified;
            }
            set {
                this.checklistItemCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Claimed {
            get {
                return this.claimedField;
            }
            set {
                this.claimedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClaimedSpecified {
            get {
                return this.claimedFieldSpecified;
            }
            set {
                this.claimedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrTaskName {
            get {
                return this.currTaskNameField;
            }
            set {
                this.currTaskNameField = value;
            }
        }
        
        /// <remarks/>
        public int CurrTaskNo {
            get {
                return this.currTaskNoField;
            }
            set {
                this.currTaskNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrTaskNoSpecified {
            get {
                return this.currTaskNoFieldSpecified;
            }
            set {
                this.currTaskNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CurrTaskType {
            get {
                return this.currTaskTypeField;
            }
            set {
                this.currTaskTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrTaskTypeSpecified {
            get {
                return this.currTaskTypeFieldSpecified;
            }
            set {
                this.currTaskTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool DelegationDisabled {
            get {
                return this.delegationDisabledField;
            }
            set {
                this.delegationDisabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DelegationDisabledSpecified {
            get {
                return this.delegationDisabledFieldSpecified;
            }
            set {
                this.delegationDisabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int HistoryEntryCount {
            get {
                return this.historyEntryCountField;
            }
            set {
                this.historyEntryCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HistoryEntryCountSpecified {
            get {
                return this.historyEntryCountFieldSpecified;
            }
            set {
                this.historyEntryCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int InitiatorNo {
            get {
                return this.initiatorNoField;
            }
            set {
                this.initiatorNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InitiatorNoSpecified {
            get {
                return this.initiatorNoFieldSpecified;
            }
            set {
                this.initiatorNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int InstanceNo {
            get {
                return this.instanceNoField;
            }
            set {
                this.instanceNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InstanceNoSpecified {
            get {
                return this.instanceNoFieldSpecified;
            }
            set {
                this.instanceNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsAssignedToUser {
            get {
                return this.isAssignedToUserField;
            }
            set {
                this.isAssignedToUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAssignedToUserSpecified {
            get {
                return this.isAssignedToUserFieldSpecified;
            }
            set {
                this.isAssignedToUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsChangeCtgry {
            get {
                return this.isChangeCtgryField;
            }
            set {
                this.isChangeCtgryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsChangeCtgrySpecified {
            get {
                return this.isChangeCtgryFieldSpecified;
            }
            set {
                this.isChangeCtgryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsProcessOwner {
            get {
                return this.isProcessOwnerField;
            }
            set {
                this.isProcessOwnerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsProcessOwnerSpecified {
            get {
                return this.isProcessOwnerFieldSpecified;
            }
            set {
                this.isProcessOwnerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int LinkedDocCount {
            get {
                return this.linkedDocCountField;
            }
            set {
                this.linkedDocCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinkedDocCountSpecified {
            get {
                return this.linkedDocCountFieldSpecified;
            }
            set {
                this.linkedDocCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NextTaskCount {
            get {
                return this.nextTaskCountField;
            }
            set {
                this.nextTaskCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NextTaskCountSpecified {
            get {
                return this.nextTaskCountFieldSpecified;
            }
            set {
                this.nextTaskCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ProcessDueDate {
            get {
                return this.processDueDateField;
            }
            set {
                this.processDueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessDueDateSpecified {
            get {
                return this.processDueDateFieldSpecified;
            }
            set {
                this.processDueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProcessName {
            get {
                return this.processNameField;
            }
            set {
                this.processNameField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessNo {
            get {
                return this.processNoField;
            }
            set {
                this.processNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessNoSpecified {
            get {
                return this.processNoFieldSpecified;
            }
            set {
                this.processNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ProcessStartDate {
            get {
                return this.processStartDateField;
            }
            set {
                this.processStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessStartDateSpecified {
            get {
                return this.processStartDateFieldSpecified;
            }
            set {
                this.processStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TaskDueDate {
            get {
                return this.taskDueDateField;
            }
            set {
                this.taskDueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskDueDateSpecified {
            get {
                return this.taskDueDateFieldSpecified;
            }
            set {
                this.taskDueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TaskStartDate {
            get {
                return this.taskStartDateField;
            }
            set {
                this.taskStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskStartDateSpecified {
            get {
                return this.taskStartDateFieldSpecified;
            }
            set {
                this.taskStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TokenNoSpecified {
            get {
                return this.tokenNoFieldSpecified;
            }
            set {
                this.tokenNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TransitionCount {
            get {
                return this.transitionCountField;
            }
            set {
                this.transitionCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransitionCountSpecified {
            get {
                return this.transitionCountFieldSpecified;
            }
            set {
                this.transitionCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool UseChecklist {
            get {
                return this.useChecklistField;
            }
            set {
                this.useChecklistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseChecklistSpecified {
            get {
                return this.useChecklistFieldSpecified;
            }
            set {
                this.useChecklistFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFTransition {
        
        private string actionTextField;
        
        private bool isDefaultField;
        
        private bool isDefaultFieldSpecified;
        
        private bool isHiddenField;
        
        private bool isHiddenFieldSpecified;
        
        private bool isValidField;
        
        private bool isValidFieldSpecified;
        
        private bool requestInfoField;
        
        private bool requestInfoFieldSpecified;
        
        private int seqPosField;
        
        private bool seqPosFieldSpecified;
        
        private int taskFromNoField;
        
        private bool taskFromNoFieldSpecified;
        
        private int taskToNoField;
        
        private bool taskToNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ActionText {
            get {
                return this.actionTextField;
            }
            set {
                this.actionTextField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDefaultSpecified {
            get {
                return this.isDefaultFieldSpecified;
            }
            set {
                this.isDefaultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsHidden {
            get {
                return this.isHiddenField;
            }
            set {
                this.isHiddenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsHiddenSpecified {
            get {
                return this.isHiddenFieldSpecified;
            }
            set {
                this.isHiddenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsValid {
            get {
                return this.isValidField;
            }
            set {
                this.isValidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsValidSpecified {
            get {
                return this.isValidFieldSpecified;
            }
            set {
                this.isValidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool RequestInfo {
            get {
                return this.requestInfoField;
            }
            set {
                this.requestInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestInfoSpecified {
            get {
                return this.requestInfoFieldSpecified;
            }
            set {
                this.requestInfoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SeqPos {
            get {
                return this.seqPosField;
            }
            set {
                this.seqPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeqPosSpecified {
            get {
                return this.seqPosFieldSpecified;
            }
            set {
                this.seqPosFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TaskFromNo {
            get {
                return this.taskFromNoField;
            }
            set {
                this.taskFromNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskFromNoSpecified {
            get {
                return this.taskFromNoFieldSpecified;
            }
            set {
                this.taskFromNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TaskToNo {
            get {
                return this.taskToNoField;
            }
            set {
                this.taskToNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskToNoSpecified {
            get {
                return this.taskToNoFieldSpecified;
            }
            set {
                this.taskToNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFChoice {
        
        private int taskNoField;
        
        private bool taskNoFieldSpecified;
        
        private string userNameField;
        
        private int userNoField;
        
        private bool userNoFieldSpecified;
        
        private int userTypeField;
        
        private bool userTypeFieldSpecified;
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskNoSpecified {
            get {
                return this.taskNoFieldSpecified;
            }
            set {
                this.taskNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public int UserNo {
            get {
                return this.userNoField;
            }
            set {
                this.userNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNoSpecified {
            get {
                return this.userNoFieldSpecified;
            }
            set {
                this.userNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserTypeSpecified {
            get {
                return this.userTypeFieldSpecified;
            }
            set {
                this.userTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFTask {
        
        private bool allowMultiSelectionField;
        
        private bool allowMultiSelectionFieldSpecified;
        
        private bool askForPwdField;
        
        private bool askForPwdFieldSpecified;
        
        private int assignFromFieldNoField;
        
        private bool assignFromFieldNoFieldSpecified;
        
        private int choiceCountField;
        
        private bool choiceCountFieldSpecified;
        
        private WSWFChoice[] choicesField;
        
        private int durationField;
        
        private bool durationFieldSpecified;
        
        private string guidField;
        
        private bool isDelegationDisabledField;
        
        private bool isDelegationDisabledFieldSpecified;
        
        private string nameField;
        
        private int processNoField;
        
        private bool processNoFieldSpecified;
        
        private int seqPosField;
        
        private bool seqPosFieldSpecified;
        
        private WSWFTaskType typeField;
        
        private bool typeFieldSpecified;
        
        private bool useChecklistField;
        
        private bool useChecklistFieldSpecified;
        
        private bool userChoiceField;
        
        private bool userChoiceFieldSpecified;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        public bool AllowMultiSelection {
            get {
                return this.allowMultiSelectionField;
            }
            set {
                this.allowMultiSelectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowMultiSelectionSpecified {
            get {
                return this.allowMultiSelectionFieldSpecified;
            }
            set {
                this.allowMultiSelectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool AskForPwd {
            get {
                return this.askForPwdField;
            }
            set {
                this.askForPwdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AskForPwdSpecified {
            get {
                return this.askForPwdFieldSpecified;
            }
            set {
                this.askForPwdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int AssignFromFieldNo {
            get {
                return this.assignFromFieldNoField;
            }
            set {
                this.assignFromFieldNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssignFromFieldNoSpecified {
            get {
                return this.assignFromFieldNoFieldSpecified;
            }
            set {
                this.assignFromFieldNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ChoiceCount {
            get {
                return this.choiceCountField;
            }
            set {
                this.choiceCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChoiceCountSpecified {
            get {
                return this.choiceCountFieldSpecified;
            }
            set {
                this.choiceCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSWFChoice[] Choices {
            get {
                return this.choicesField;
            }
            set {
                this.choicesField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDelegationDisabled {
            get {
                return this.isDelegationDisabledField;
            }
            set {
                this.isDelegationDisabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDelegationDisabledSpecified {
            get {
                return this.isDelegationDisabledFieldSpecified;
            }
            set {
                this.isDelegationDisabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessNo {
            get {
                return this.processNoField;
            }
            set {
                this.processNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessNoSpecified {
            get {
                return this.processNoFieldSpecified;
            }
            set {
                this.processNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SeqPos {
            get {
                return this.seqPosField;
            }
            set {
                this.seqPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeqPosSpecified {
            get {
                return this.seqPosFieldSpecified;
            }
            set {
                this.seqPosFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSWFTaskType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool UseChecklist {
            get {
                return this.useChecklistField;
            }
            set {
                this.useChecklistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseChecklistSpecified {
            get {
                return this.useChecklistFieldSpecified;
            }
            set {
                this.useChecklistFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool UserChoice {
            get {
                return this.userChoiceField;
            }
            set {
                this.userChoiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserChoiceSpecified {
            get {
                return this.userChoiceFieldSpecified;
            }
            set {
                this.userChoiceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSWFTaskType {
        
        /// <remarks/>
        StartTask,
        
        /// <remarks/>
        EndTask,
        
        /// <remarks/>
        ManualTask,
        
        /// <remarks/>
        AutomaticTask,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFDocument {
        
        private int caseDefNoField;
        
        private bool caseDefNoFieldSpecified;
        
        private int caseNoField;
        
        private bool caseNoFieldSpecified;
        
        private int categoryNoField;
        
        private bool categoryNoFieldSpecified;
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private int docPosField;
        
        private bool docPosFieldSpecified;
        
        private string indexDataStringField;
        
        /// <remarks/>
        public int CaseDefNo {
            get {
                return this.caseDefNoField;
            }
            set {
                this.caseDefNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseDefNoSpecified {
            get {
                return this.caseDefNoFieldSpecified;
            }
            set {
                this.caseDefNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CaseNo {
            get {
                return this.caseNoField;
            }
            set {
                this.caseNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseNoSpecified {
            get {
                return this.caseNoFieldSpecified;
            }
            set {
                this.caseNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryNoSpecified {
            get {
                return this.categoryNoFieldSpecified;
            }
            set {
                this.categoryNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DocPos {
            get {
                return this.docPosField;
            }
            set {
                this.docPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocPosSpecified {
            get {
                return this.docPosFieldSpecified;
            }
            set {
                this.docPosFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IndexDataString {
            get {
                return this.indexDataStringField;
            }
            set {
                this.indexDataStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFHistoryEntry {
        
        private System.Nullable<System.DateTime> actionDateField;
        
        private bool actionDateFieldSpecified;
        
        private int seqPosField;
        
        private bool seqPosFieldSpecified;
        
        private string taskNameField;
        
        private int taskNoField;
        
        private bool taskNoFieldSpecified;
        
        private int taskToNoField;
        
        private bool taskToNoFieldSpecified;
        
        private string textField;
        
        private WSWFHistoryEntryType typeField;
        
        private bool typeFieldSpecified;
        
        private string userNameField;
        
        private int userNoField;
        
        private bool userNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActionDate {
            get {
                return this.actionDateField;
            }
            set {
                this.actionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionDateSpecified {
            get {
                return this.actionDateFieldSpecified;
            }
            set {
                this.actionDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SeqPos {
            get {
                return this.seqPosField;
            }
            set {
                this.seqPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeqPosSpecified {
            get {
                return this.seqPosFieldSpecified;
            }
            set {
                this.seqPosFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TaskName {
            get {
                return this.taskNameField;
            }
            set {
                this.taskNameField = value;
            }
        }
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskNoSpecified {
            get {
                return this.taskNoFieldSpecified;
            }
            set {
                this.taskNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TaskToNo {
            get {
                return this.taskToNoField;
            }
            set {
                this.taskToNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskToNoSpecified {
            get {
                return this.taskToNoFieldSpecified;
            }
            set {
                this.taskToNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public WSWFHistoryEntryType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public int UserNo {
            get {
                return this.userNoField;
            }
            set {
                this.userNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNoSpecified {
            get {
                return this.userNoFieldSpecified;
            }
            set {
                this.userNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSWFHistoryEntryType {
        
        /// <remarks/>
        WFStartEntry,
        
        /// <remarks/>
        WFFinishedEntry,
        
        /// <remarks/>
        SaveEntry,
        
        /// <remarks/>
        RoutingEntry,
        
        /// <remarks/>
        ClaimEntry,
        
        /// <remarks/>
        UnclaimEntry,
        
        /// <remarks/>
        ReclaimEntry,
        
        /// <remarks/>
        DelegateEntry,
        
        /// <remarks/>
        DocLinkedEntry,
        
        /// <remarks/>
        DocLinkRemovedEntry,
        
        /// <remarks/>
        OverdueMailEntry,
        
        /// <remarks/>
        OverdueRoutingEntry,
        
        /// <remarks/>
        ReroutingEntry,
        
        /// <remarks/>
        CustomEntry,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFChecklistItem {
        
        private bool checkedField;
        
        private bool checkedFieldSpecified;
        
        private int seqPosField;
        
        private bool seqPosFieldSpecified;
        
        private int taskNoField;
        
        private bool taskNoFieldSpecified;
        
        private string textField;
        
        /// <remarks/>
        public bool Checked {
            get {
                return this.checkedField;
            }
            set {
                this.checkedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckedSpecified {
            get {
                return this.checkedFieldSpecified;
            }
            set {
                this.checkedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SeqPos {
            get {
                return this.seqPosField;
            }
            set {
                this.seqPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeqPosSpecified {
            get {
                return this.seqPosFieldSpecified;
            }
            set {
                this.seqPosFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskNoSpecified {
            get {
                return this.taskNoFieldSpecified;
            }
            set {
                this.taskNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWorkflowInstanceResponse {
        
        private WSWFChecklistItem[] checklistItemsField;
        
        private WSWFHistoryEntry[] historyEntriesField;
        
        private WSWFDocument[] linkedDocumentsField;
        
        private WSWFTask[] nextTasksField;
        
        private WSWFTransition[] transitionsField;
        
        private WSWFInstance workflowInstanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSWFChecklistItem[] ChecklistItems {
            get {
                return this.checklistItemsField;
            }
            set {
                this.checklistItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSWFHistoryEntry[] HistoryEntries {
            get {
                return this.historyEntriesField;
            }
            set {
                this.historyEntriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSWFDocument[] LinkedDocuments {
            get {
                return this.linkedDocumentsField;
            }
            set {
                this.linkedDocumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSWFTask[] NextTasks {
            get {
                return this.nextTasksField;
            }
            set {
                this.nextTasksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSWFTransition[] Transitions {
            get {
                return this.transitionsField;
            }
            set {
                this.transitionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSWFInstance WorkflowInstance {
            get {
                return this.workflowInstanceField;
            }
            set {
                this.workflowInstanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWorkflowInstanceParams {
        
        private int instanceNoField;
        
        private int tokenNoField;
        
        /// <remarks/>
        public int InstanceNo {
            get {
                return this.instanceNoField;
            }
            set {
                this.instanceNoField = value;
            }
        }
        
        /// <remarks/>
        public int TokenNo {
            get {
                return this.tokenNoField;
            }
            set {
                this.tokenNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWFProcess {
        
        private bool activatedField;
        
        private bool activatedFieldSpecified;
        
        private bool allowManualStartField;
        
        private bool allowManualStartFieldSpecified;
        
        private int caseDefinitionNoField;
        
        private bool caseDefinitionNoFieldSpecified;
        
        private int categoryNoField;
        
        private bool categoryNoFieldSpecified;
        
        private int daysToDeleteInstancesField;
        
        private bool daysToDeleteInstancesFieldSpecified;
        
        private string delegateMailTextField;
        
        private string descriptionField;
        
        private int durationField;
        
        private bool durationFieldSpecified;
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private int folderNoField;
        
        private bool folderNoFieldSpecified;
        
        private string guidField;
        
        private System.DateTime lastModifiedField;
        
        private bool lastModifiedFieldSpecified;
        
        private string nameField;
        
        private string notificationMailTextField;
        
        private string notifyOnErrorField;
        
        private string overdueMailTextField;
        
        private int processNoField;
        
        private bool processNoFieldSpecified;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        public bool Activated {
            get {
                return this.activatedField;
            }
            set {
                this.activatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActivatedSpecified {
            get {
                return this.activatedFieldSpecified;
            }
            set {
                this.activatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool AllowManualStart {
            get {
                return this.allowManualStartField;
            }
            set {
                this.allowManualStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowManualStartSpecified {
            get {
                return this.allowManualStartFieldSpecified;
            }
            set {
                this.allowManualStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CaseDefinitionNo {
            get {
                return this.caseDefinitionNoField;
            }
            set {
                this.caseDefinitionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseDefinitionNoSpecified {
            get {
                return this.caseDefinitionNoFieldSpecified;
            }
            set {
                this.caseDefinitionNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryNoSpecified {
            get {
                return this.categoryNoFieldSpecified;
            }
            set {
                this.categoryNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DaysToDeleteInstances {
            get {
                return this.daysToDeleteInstancesField;
            }
            set {
                this.daysToDeleteInstancesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DaysToDeleteInstancesSpecified {
            get {
                return this.daysToDeleteInstancesFieldSpecified;
            }
            set {
                this.daysToDeleteInstancesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DelegateMailText {
            get {
                return this.delegateMailTextField;
            }
            set {
                this.delegateMailTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int FolderNo {
            get {
                return this.folderNoField;
            }
            set {
                this.folderNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FolderNoSpecified {
            get {
                return this.folderNoFieldSpecified;
            }
            set {
                this.folderNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastModifiedSpecified {
            get {
                return this.lastModifiedFieldSpecified;
            }
            set {
                this.lastModifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NotificationMailText {
            get {
                return this.notificationMailTextField;
            }
            set {
                this.notificationMailTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NotifyOnError {
            get {
                return this.notifyOnErrorField;
            }
            set {
                this.notifyOnErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OverdueMailText {
            get {
                return this.overdueMailTextField;
            }
            set {
                this.overdueMailTextField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessNo {
            get {
                return this.processNoField;
            }
            set {
                this.processNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessNoSpecified {
            get {
                return this.processNoFieldSpecified;
            }
            set {
                this.processNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWorkflowProcessResponse {
        
        private WSWFProcess workflowProcessField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSWFProcess WorkflowProcess {
            get {
                return this.workflowProcessField;
            }
            set {
                this.workflowProcessField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWorkflowProcessParams {
        
        private int processNoField;
        
        private bool processNoFieldSpecified;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        public int ProcessNo {
            get {
                return this.processNoField;
            }
            set {
                this.processNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessNoSpecified {
            get {
                return this.processNoFieldSpecified;
            }
            set {
                this.processNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteWorkflowQueryForAllResponse {
        
        private WSWorkflowQueryResult[] workflowQueryResultListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSWorkflowQueryResult[] WorkflowQueryResultList {
            get {
                return this.workflowQueryResultListField;
            }
            set {
                this.workflowQueryResultListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWorkflowQueryResult {
        
        private WSWorkflowResultRow[] resultRowsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSWorkflowResultRow[] ResultRows {
            get {
                return this.resultRowsField;
            }
            set {
                this.resultRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSWorkflowResultRow {
        
        private WSAccessMask accessMaskField;
        
        private string[] indexValuesField;
        
        private long sizeField;
        
        private bool sizeFieldSpecified;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        private int workflowNoField;
        
        private bool workflowNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSAccessMask AccessMask {
            get {
                return this.accessMaskField;
            }
            set {
                this.accessMaskField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("IndexValue")]
        public string[] IndexValues {
            get {
                return this.indexValuesField;
            }
            set {
                this.indexValuesField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified {
            get {
                return this.sizeFieldSpecified;
            }
            set {
                this.sizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int WorkflowNo {
            get {
                return this.workflowNoField;
            }
            set {
                this.workflowNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowNoSpecified {
            get {
                return this.workflowNoFieldSpecified;
            }
            set {
                this.workflowNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSAccessMask {
        
        private ulong valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        public ulong Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteWorkflowQueryForAllParams {
        
        private WSWorkflowFlags workflowFlagsField;
        
        /// <remarks/>
        public WSWorkflowFlags WorkflowFlags {
            get {
                return this.workflowFlagsField;
            }
            set {
                this.workflowFlagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSWorkflowFlags {
        
        /// <remarks/>
        DefaultInstances,
        
        /// <remarks/>
        RunningInstances,
        
        /// <remarks/>
        FinishedInstances,
        
        /// <remarks/>
        AllInstances,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteWorkflowQueryForProcessResponse {
        
        private WSWorkflowQueryResult workflowQueryResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSWorkflowQueryResult WorkflowQueryResult {
            get {
                return this.workflowQueryResultField;
            }
            set {
                this.workflowQueryResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteWorkflowQueryForProcessParams {
        
        private int processNoField;
        
        private WSWorkflowFlags workflowFlagsField;
        
        /// <remarks/>
        public int ProcessNo {
            get {
                return this.processNoField;
            }
            set {
                this.processNoField = value;
            }
        }
        
        /// <remarks/>
        public WSWorkflowFlags WorkflowFlags {
            get {
                return this.workflowFlagsField;
            }
            set {
                this.workflowFlagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCaseHistoryEntry {
        
        private System.Nullable<System.DateTime> actionDateField;
        
        private bool actionDateFieldSpecified;
        
        private WSCaseHistoryEntryType entryTypeField;
        
        private bool entryTypeFieldSpecified;
        
        private int itemDataField;
        
        private bool itemDataFieldSpecified;
        
        private int itemNoField;
        
        private bool itemNoFieldSpecified;
        
        private int parentItemNoField;
        
        private bool parentItemNoFieldSpecified;
        
        private string textField;
        
        private string userNameField;
        
        private int userNoField;
        
        private bool userNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActionDate {
            get {
                return this.actionDateField;
            }
            set {
                this.actionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionDateSpecified {
            get {
                return this.actionDateFieldSpecified;
            }
            set {
                this.actionDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSCaseHistoryEntryType EntryType {
            get {
                return this.entryTypeField;
            }
            set {
                this.entryTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EntryTypeSpecified {
            get {
                return this.entryTypeFieldSpecified;
            }
            set {
                this.entryTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ItemData {
            get {
                return this.itemDataField;
            }
            set {
                this.itemDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemDataSpecified {
            get {
                return this.itemDataFieldSpecified;
            }
            set {
                this.itemDataFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ItemNo {
            get {
                return this.itemNoField;
            }
            set {
                this.itemNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemNoSpecified {
            get {
                return this.itemNoFieldSpecified;
            }
            set {
                this.itemNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ParentItemNo {
            get {
                return this.parentItemNoField;
            }
            set {
                this.parentItemNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentItemNoSpecified {
            get {
                return this.parentItemNoFieldSpecified;
            }
            set {
                this.parentItemNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public int UserNo {
            get {
                return this.userNoField;
            }
            set {
                this.userNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNoSpecified {
            get {
                return this.userNoFieldSpecified;
            }
            set {
                this.userNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCaseHistoryEntryType {
        
        /// <remarks/>
        CaseCreatedCH,
        
        /// <remarks/>
        DocumentAddedCH,
        
        /// <remarks/>
        DocumentModifiedCH,
        
        /// <remarks/>
        DocumentDeletedCH,
        
        /// <remarks/>
        TheCaseHistoryEntryType,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseHistoryResponse {
        
        private WSCaseHistoryEntry[] caseHistoryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSCaseHistoryEntry[] CaseHistory {
            get {
                return this.caseHistoryField;
            }
            set {
                this.caseHistoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseHistoryParams {
        
        private int caseNoField;
        
        /// <remarks/>
        public int CaseNo {
            get {
                return this.caseNoField;
            }
            set {
                this.caseNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseDocumentsResponse {
        
        private int[] documentNosField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("DocumentNo", IsNullable=false)]
        public int[] DocumentNos {
            get {
                return this.documentNosField;
            }
            set {
                this.documentNosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseDocumentsParams {
        
        private int caseNoField;
        
        private int categoryNoField;
        
        private bool categoryNoFieldSpecified;
        
        /// <remarks/>
        public int CaseNo {
            get {
                return this.caseNoField;
            }
            set {
                this.caseNoField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryNoSpecified {
            get {
                return this.categoryNoFieldSpecified;
            }
            set {
                this.categoryNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCategory {
        
        private int categoryNoField;
        
        private string guidField;
        
        private string nameField;
        
        private int parentFolderNoField;
        
        private string titleField;
        
        private int versionField;
        
        private bool versionFieldSpecified;
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ParentFolderNo {
            get {
                return this.parentFolderNoField;
            }
            set {
                this.parentFolderNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCaseDefinition {
        
        private int caseDefNoField;
        
        private bool caseDefNoFieldSpecified;
        
        private WSCategory[] categoriesField;
        
        private WSCategoryField[] fieldsField;
        
        private string guidField;
        
        private bool isFullTextEnabledField;
        
        private bool isFullTextEnabledFieldSpecified;
        
        private string nameField;
        
        private int parentFolderNoField;
        
        private int versionField;
        
        private bool versionFieldSpecified;
        
        private int workflowProcessNoField;
        
        private bool workflowProcessNoFieldSpecified;
        
        /// <remarks/>
        public int CaseDefNo {
            get {
                return this.caseDefNoField;
            }
            set {
                this.caseDefNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseDefNoSpecified {
            get {
                return this.caseDefNoFieldSpecified;
            }
            set {
                this.caseDefNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSCategory[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSCategoryField[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFullTextEnabled {
            get {
                return this.isFullTextEnabledField;
            }
            set {
                this.isFullTextEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsFullTextEnabledSpecified {
            get {
                return this.isFullTextEnabledFieldSpecified;
            }
            set {
                this.isFullTextEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ParentFolderNo {
            get {
                return this.parentFolderNoField;
            }
            set {
                this.parentFolderNoField = value;
            }
        }
        
        /// <remarks/>
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int WorkflowProcessNo {
            get {
                return this.workflowProcessNoField;
            }
            set {
                this.workflowProcessNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowProcessNoSpecified {
            get {
                return this.workflowProcessNoFieldSpecified;
            }
            set {
                this.workflowProcessNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCategoryField {
        
        private int belongsToField;
        
        private bool belongsToFieldSpecified;
        
        private int belongsToTableField;
        
        private bool belongsToTableFieldSpecified;
        
        private string captionField;
        
        private bool caseSensitiveField;
        
        private bool caseSensitiveFieldSpecified;
        
        private string colNameField;
        
        private WSCounterMode counterModeField;
        
        private bool counterModeFieldSpecified;
        
        private string defaultValField;
        
        private WSDependencyMode dependencyModeField;
        
        private bool dependencyModeFieldSpecified;
        
        private int displayOrderPosField;
        
        private bool displayOrderPosFieldSpecified;
        
        private bool dontLoadValuesField;
        
        private bool dontLoadValuesFieldSpecified;
        
        private int fieldNoField;
        
        private bool fieldNoFieldSpecified;
        
        private WSCategoryFieldType fieldTypeField;
        
        private bool fieldTypeFieldSpecified;
        
        private string foreignColField;
        
        private string guidField;
        
        private int heightField;
        
        private bool heightFieldSpecified;
        
        private string indexDataFieldNameField;
        
        private int indexTypeField;
        
        private bool indexTypeFieldSpecified;
        
        private bool isForeignDatatypeField;
        
        private bool isForeignDatatypeFieldSpecified;
        
        private bool isMultipleKeywordField;
        
        private bool isMultipleKeywordFieldSpecified;
        
        private bool isSingleKeywordField;
        
        private bool isSingleKeywordFieldSpecified;
        
        private bool keepRedundantField;
        
        private bool keepRedundantFieldSpecified;
        
        private int lengthField;
        
        private bool lengthFieldSpecified;
        
        private bool mandatoryField;
        
        private bool mandatoryFieldSpecified;
        
        private int posXField;
        
        private bool posXFieldSpecified;
        
        private int posYField;
        
        private bool posYFieldSpecified;
        
        private string regularExprField;
        
        private int tabOrderPosField;
        
        private bool tabOrderPosFieldSpecified;
        
        private WSTypeGroup typeGroupField;
        
        private bool typeGroupFieldSpecified;
        
        private string typeIndexColumnField;
        
        private string typeMultiInnerField;
        
        private string typeMultiJoinField;
        
        private string typeMultiOuterField;
        
        private int typeNoField;
        
        private bool typeNoFieldSpecified;
        
        private string typeTableNameField;
        
        private bool visibleField;
        
        private bool visibleFieldSpecified;
        
        private int widthField;
        
        private bool widthFieldSpecified;
        
        private string workflowFieldField;
        
        /// <remarks/>
        public int BelongsTo {
            get {
                return this.belongsToField;
            }
            set {
                this.belongsToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BelongsToSpecified {
            get {
                return this.belongsToFieldSpecified;
            }
            set {
                this.belongsToFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int BelongsToTable {
            get {
                return this.belongsToTableField;
            }
            set {
                this.belongsToTableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BelongsToTableSpecified {
            get {
                return this.belongsToTableFieldSpecified;
            }
            set {
                this.belongsToTableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public bool CaseSensitive {
            get {
                return this.caseSensitiveField;
            }
            set {
                this.caseSensitiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseSensitiveSpecified {
            get {
                return this.caseSensitiveFieldSpecified;
            }
            set {
                this.caseSensitiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ColName {
            get {
                return this.colNameField;
            }
            set {
                this.colNameField = value;
            }
        }
        
        /// <remarks/>
        public WSCounterMode CounterMode {
            get {
                return this.counterModeField;
            }
            set {
                this.counterModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CounterModeSpecified {
            get {
                return this.counterModeFieldSpecified;
            }
            set {
                this.counterModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DefaultVal {
            get {
                return this.defaultValField;
            }
            set {
                this.defaultValField = value;
            }
        }
        
        /// <remarks/>
        public WSDependencyMode DependencyMode {
            get {
                return this.dependencyModeField;
            }
            set {
                this.dependencyModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependencyModeSpecified {
            get {
                return this.dependencyModeFieldSpecified;
            }
            set {
                this.dependencyModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DisplayOrderPos {
            get {
                return this.displayOrderPosField;
            }
            set {
                this.displayOrderPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisplayOrderPosSpecified {
            get {
                return this.displayOrderPosFieldSpecified;
            }
            set {
                this.displayOrderPosFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool DontLoadValues {
            get {
                return this.dontLoadValuesField;
            }
            set {
                this.dontLoadValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DontLoadValuesSpecified {
            get {
                return this.dontLoadValuesFieldSpecified;
            }
            set {
                this.dontLoadValuesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int FieldNo {
            get {
                return this.fieldNoField;
            }
            set {
                this.fieldNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldNoSpecified {
            get {
                return this.fieldNoFieldSpecified;
            }
            set {
                this.fieldNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSCategoryFieldType FieldType {
            get {
                return this.fieldTypeField;
            }
            set {
                this.fieldTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldTypeSpecified {
            get {
                return this.fieldTypeFieldSpecified;
            }
            set {
                this.fieldTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ForeignCol {
            get {
                return this.foreignColField;
            }
            set {
                this.foreignColField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified {
            get {
                return this.heightFieldSpecified;
            }
            set {
                this.heightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IndexDataFieldName {
            get {
                return this.indexDataFieldNameField;
            }
            set {
                this.indexDataFieldNameField = value;
            }
        }
        
        /// <remarks/>
        public int IndexType {
            get {
                return this.indexTypeField;
            }
            set {
                this.indexTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexTypeSpecified {
            get {
                return this.indexTypeFieldSpecified;
            }
            set {
                this.indexTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsForeignDatatype {
            get {
                return this.isForeignDatatypeField;
            }
            set {
                this.isForeignDatatypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsForeignDatatypeSpecified {
            get {
                return this.isForeignDatatypeFieldSpecified;
            }
            set {
                this.isForeignDatatypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsMultipleKeyword {
            get {
                return this.isMultipleKeywordField;
            }
            set {
                this.isMultipleKeywordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsMultipleKeywordSpecified {
            get {
                return this.isMultipleKeywordFieldSpecified;
            }
            set {
                this.isMultipleKeywordFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsSingleKeyword {
            get {
                return this.isSingleKeywordField;
            }
            set {
                this.isSingleKeywordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSingleKeywordSpecified {
            get {
                return this.isSingleKeywordFieldSpecified;
            }
            set {
                this.isSingleKeywordFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool KeepRedundant {
            get {
                return this.keepRedundantField;
            }
            set {
                this.keepRedundantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepRedundantSpecified {
            get {
                return this.keepRedundantFieldSpecified;
            }
            set {
                this.keepRedundantFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified {
            get {
                return this.lengthFieldSpecified;
            }
            set {
                this.lengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Mandatory {
            get {
                return this.mandatoryField;
            }
            set {
                this.mandatoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MandatorySpecified {
            get {
                return this.mandatoryFieldSpecified;
            }
            set {
                this.mandatoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PosX {
            get {
                return this.posXField;
            }
            set {
                this.posXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PosXSpecified {
            get {
                return this.posXFieldSpecified;
            }
            set {
                this.posXFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PosY {
            get {
                return this.posYField;
            }
            set {
                this.posYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PosYSpecified {
            get {
                return this.posYFieldSpecified;
            }
            set {
                this.posYFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RegularExpr {
            get {
                return this.regularExprField;
            }
            set {
                this.regularExprField = value;
            }
        }
        
        /// <remarks/>
        public int TabOrderPos {
            get {
                return this.tabOrderPosField;
            }
            set {
                this.tabOrderPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TabOrderPosSpecified {
            get {
                return this.tabOrderPosFieldSpecified;
            }
            set {
                this.tabOrderPosFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSTypeGroup TypeGroup {
            get {
                return this.typeGroupField;
            }
            set {
                this.typeGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeGroupSpecified {
            get {
                return this.typeGroupFieldSpecified;
            }
            set {
                this.typeGroupFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TypeIndexColumn {
            get {
                return this.typeIndexColumnField;
            }
            set {
                this.typeIndexColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TypeMultiInner {
            get {
                return this.typeMultiInnerField;
            }
            set {
                this.typeMultiInnerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TypeMultiJoin {
            get {
                return this.typeMultiJoinField;
            }
            set {
                this.typeMultiJoinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TypeMultiOuter {
            get {
                return this.typeMultiOuterField;
            }
            set {
                this.typeMultiOuterField = value;
            }
        }
        
        /// <remarks/>
        public int TypeNo {
            get {
                return this.typeNoField;
            }
            set {
                this.typeNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeNoSpecified {
            get {
                return this.typeNoFieldSpecified;
            }
            set {
                this.typeNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TypeTableName {
            get {
                return this.typeTableNameField;
            }
            set {
                this.typeTableNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibleSpecified {
            get {
                return this.visibleFieldSpecified;
            }
            set {
                this.visibleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified {
            get {
                return this.widthFieldSpecified;
            }
            set {
                this.widthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WorkflowField {
            get {
                return this.workflowFieldField;
            }
            set {
                this.workflowFieldField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCounterMode {
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        ClientCounter,
        
        /// <remarks/>
        ServerCounter,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSDependencyMode {
        
        /// <remarks/>
        Referenced,
        
        /// <remarks/>
        SynchronizedRedundant,
        
        /// <remarks/>
        EditableRedundant,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCategoryFieldType {
        
        /// <remarks/>
        StringField,
        
        /// <remarks/>
        IntField,
        
        /// <remarks/>
        DateField,
        
        /// <remarks/>
        LabelField,
        
        /// <remarks/>
        MoneyField,
        
        /// <remarks/>
        LogicalField,
        
        /// <remarks/>
        NumericCounter,
        
        /// <remarks/>
        TextCounter,
        
        /// <remarks/>
        TableField,
        
        /// <remarks/>
        CustomField,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSTypeGroup {
        
        /// <remarks/>
        StandardTypeGroup,
        
        /// <remarks/>
        KeywordTypeGroup,
        
        /// <remarks/>
        UserInt,
        
        /// <remarks/>
        UserTextAnsi,
        
        /// <remarks/>
        UserDate,
        
        /// <remarks/>
        UserFloat,
        
        /// <remarks/>
        UserTextUnicode,
        
        /// <remarks/>
        CaseDefinitionTypeGroup,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseDefinitionResponse {
        
        private WSCaseDefinition caseDefinitionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSCaseDefinition CaseDefinition {
            get {
                return this.caseDefinitionField;
            }
            set {
                this.caseDefinitionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseDefinitionParams {
        
        private int caseDefinitionNoField;
        
        /// <remarks/>
        public int CaseDefinitionNo {
            get {
                return this.caseDefinitionNoField;
            }
            set {
                this.caseDefinitionNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteCaseResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteCaseParams {
        
        private int caseNoField;
        
        /// <remarks/>
        public int CaseNo {
            get {
                return this.caseNoField;
            }
            set {
                this.caseNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveCaseIndexDataResponse {
        
        private System.DateTime lastChangeTimeField;
        
        private bool lastChangeTimeFieldSpecified;
        
        /// <remarks/>
        public System.DateTime LastChangeTime {
            get {
                return this.lastChangeTimeField;
            }
            set {
                this.lastChangeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastChangeTimeSpecified {
            get {
                return this.lastChangeTimeFieldSpecified;
            }
            set {
                this.lastChangeTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveCaseIndexDataParams {
        
        private int caseNoField;
        
        private string checkInCommentsField;
        
        private WSIndexDataToPut indexDataField;
        
        /// <remarks/>
        public int CaseNo {
            get {
                return this.caseNoField;
            }
            set {
                this.caseNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckInComments {
            get {
                return this.checkInCommentsField;
            }
            set {
                this.checkInCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataToPut IndexData {
            get {
                return this.indexDataField;
            }
            set {
                this.indexDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataToPut {
        
        private WSIndexDataItem[] indexDataItemsField;
        
        private System.DateTime lastChangeTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSIndexDataItem[] IndexDataItems {
            get {
                return this.indexDataItemsField;
            }
            set {
                this.indexDataItemsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastChangeTime {
            get {
                return this.lastChangeTimeField;
            }
            set {
                this.lastChangeTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCase {
        
        private int caseDefinitionNoField;
        
        private bool caseDefinitionNoFieldSpecified;
        
        private int caseNoField;
        
        private bool caseNoFieldSpecified;
        
        private string createdByUserField;
        
        private int createdByUserNoField;
        
        private bool createdByUserNoFieldSpecified;
        
        private System.Nullable<System.DateTime> createdOnField;
        
        private bool createdOnFieldSpecified;
        
        private WSIndexDataToGet indexDataField;
        
        /// <remarks/>
        public int CaseDefinitionNo {
            get {
                return this.caseDefinitionNoField;
            }
            set {
                this.caseDefinitionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseDefinitionNoSpecified {
            get {
                return this.caseDefinitionNoFieldSpecified;
            }
            set {
                this.caseDefinitionNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CaseNo {
            get {
                return this.caseNoField;
            }
            set {
                this.caseNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseNoSpecified {
            get {
                return this.caseNoFieldSpecified;
            }
            set {
                this.caseNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreatedByUser {
            get {
                return this.createdByUserField;
            }
            set {
                this.createdByUserField = value;
            }
        }
        
        /// <remarks/>
        public int CreatedByUserNo {
            get {
                return this.createdByUserNoField;
            }
            set {
                this.createdByUserNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedByUserNoSpecified {
            get {
                return this.createdByUserNoFieldSpecified;
            }
            set {
                this.createdByUserNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedOnSpecified {
            get {
                return this.createdOnFieldSpecified;
            }
            set {
                this.createdOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataToGet IndexData {
            get {
                return this.indexDataField;
            }
            set {
                this.indexDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataToGet {
        
        private int categoryNoField;
        
        private string ctgryNameField;
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private WSIndexDataItem[] indexDataItemsField;
        
        private System.DateTime lastChangeTimeField;
        
        private bool lastChangeTimeFieldSpecified;
        
        private string titleField;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CtgryName {
            get {
                return this.ctgryNameField;
            }
            set {
                this.ctgryNameField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSIndexDataItem[] IndexDataItems {
            get {
                return this.indexDataItemsField;
            }
            set {
                this.indexDataItemsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastChangeTime {
            get {
                return this.lastChangeTimeField;
            }
            set {
                this.lastChangeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastChangeTimeSpecified {
            get {
                return this.lastChangeTimeFieldSpecified;
            }
            set {
                this.lastChangeTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseResponse {
        
        private WSCase caseField;
        
        private System.DateTime lastChangeTimeField;
        
        private bool lastChangeTimeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSCase Case {
            get {
                return this.caseField;
            }
            set {
                this.caseField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastChangeTime {
            get {
                return this.lastChangeTimeField;
            }
            set {
                this.lastChangeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastChangeTimeSpecified {
            get {
                return this.lastChangeTimeFieldSpecified;
            }
            set {
                this.lastChangeTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCaseParams {
        
        private int caseNoField;
        
        /// <remarks/>
        public int CaseNo {
            get {
                return this.caseNoField;
            }
            set {
                this.caseNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateCaseResponse {
        
        private int caseNoField;
        
        private bool caseNoFieldSpecified;
        
        private System.DateTime lastChangeTimeField;
        
        private bool lastChangeTimeFieldSpecified;
        
        /// <remarks/>
        public int CaseNo {
            get {
                return this.caseNoField;
            }
            set {
                this.caseNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseNoSpecified {
            get {
                return this.caseNoFieldSpecified;
            }
            set {
                this.caseNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastChangeTime {
            get {
                return this.lastChangeTimeField;
            }
            set {
                this.lastChangeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastChangeTimeSpecified {
            get {
                return this.lastChangeTimeFieldSpecified;
            }
            set {
                this.lastChangeTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateCaseParams {
        
        private int caseDefNoField;
        
        private WSIndexDataItem[] indexDataItemsField;
        
        /// <remarks/>
        public int CaseDefNo {
            get {
                return this.caseDefNoField;
            }
            set {
                this.caseDefNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSIndexDataItem[] IndexDataItems {
            get {
                return this.indexDataItemsField;
            }
            set {
                this.indexDataItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSPermissionConstants {
        
        private ulong accessField;
        
        private bool accessFieldSpecified;
        
        private ulong administratorField;
        
        private bool administratorFieldSpecified;
        
        private ulong caseCloseField;
        
        private bool caseCloseFieldSpecified;
        
        private ulong caseCreateField;
        
        private bool caseCreateFieldSpecified;
        
        private ulong caseDeleteField;
        
        private bool caseDeleteFieldSpecified;
        
        private ulong caseReopenField;
        
        private bool caseReopenFieldSpecified;
        
        private ulong categoryAccessArchiveField;
        
        private bool categoryAccessArchiveFieldSpecified;
        
        private ulong categoryArchiveField;
        
        private bool categoryArchiveFieldSpecified;
        
        private ulong categoryFieldChangeField;
        
        private bool categoryFieldChangeFieldSpecified;
        
        private ulong categoryFieldReadField;
        
        private bool categoryFieldReadFieldSpecified;
        
        private ulong categoryFieldSetField;
        
        private bool categoryFieldSetFieldSpecified;
        
        private ulong documentAddAnnotationField;
        
        private bool documentAddAnnotationFieldSpecified;
        
        private ulong documentAddPageField;
        
        private bool documentAddPageFieldSpecified;
        
        private ulong documentCreateTaskField;
        
        private bool documentCreateTaskFieldSpecified;
        
        private ulong documentDeleteField;
        
        private bool documentDeleteFieldSpecified;
        
        private ulong documentDeleteAnnotationField;
        
        private bool documentDeleteAnnotationFieldSpecified;
        
        private ulong documentDeletePageField;
        
        private bool documentDeletePageFieldSpecified;
        
        private ulong documentEditField;
        
        private bool documentEditFieldSpecified;
        
        private ulong documentExportField;
        
        private bool documentExportFieldSpecified;
        
        private ulong documentManageLinkField;
        
        private bool documentManageLinkFieldSpecified;
        
        private ulong documentPrintField;
        
        private bool documentPrintFieldSpecified;
        
        private ulong documentProtectField;
        
        private bool documentProtectFieldSpecified;
        
        private ulong documentUpdateIndexDataField;
        
        private bool documentUpdateIndexDataFieldSpecified;
        
        private ulong documentViewDocumentField;
        
        private bool documentViewDocumentFieldSpecified;
        
        private ulong documentViewHistoryField;
        
        private bool documentViewHistoryFieldSpecified;
        
        private ulong documentViewInHitListField;
        
        private bool documentViewInHitListFieldSpecified;
        
        private ulong keywordDictionaryChangeField;
        
        private bool keywordDictionaryChangeFieldSpecified;
        
        private ulong operatorField;
        
        private bool operatorFieldSpecified;
        
        private ulong queryAdministratorField;
        
        private bool queryAdministratorFieldSpecified;
        
        private ulong queryCategoryTabsField;
        
        private bool queryCategoryTabsFieldSpecified;
        
        private ulong queryExecuteField;
        
        private bool queryExecuteFieldSpecified;
        
        private ulong queryTemplatesReadField;
        
        private bool queryTemplatesReadFieldSpecified;
        
        private ulong readPermissionsField;
        
        private bool readPermissionsFieldSpecified;
        
        private ulong setPermissionsField;
        
        private bool setPermissionsFieldSpecified;
        
        private ulong systemConnectField;
        
        private bool systemConnectFieldSpecified;
        
        private ulong systemWriteField;
        
        private bool systemWriteFieldSpecified;
        
        private ulong workflowAddDocumentField;
        
        private bool workflowAddDocumentFieldSpecified;
        
        private ulong workflowDelegateField;
        
        private bool workflowDelegateFieldSpecified;
        
        private ulong workflowDeleteField;
        
        private bool workflowDeleteFieldSpecified;
        
        private ulong workflowParticipateField;
        
        private bool workflowParticipateFieldSpecified;
        
        private ulong workflowStartManuallyField;
        
        private bool workflowStartManuallyFieldSpecified;
        
        private ulong workflowViewAllField;
        
        private bool workflowViewAllFieldSpecified;
        
        private ulong workflowViewHistoryField;
        
        private bool workflowViewHistoryFieldSpecified;
        
        /// <remarks/>
        public ulong Access {
            get {
                return this.accessField;
            }
            set {
                this.accessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccessSpecified {
            get {
                return this.accessFieldSpecified;
            }
            set {
                this.accessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong Administrator {
            get {
                return this.administratorField;
            }
            set {
                this.administratorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdministratorSpecified {
            get {
                return this.administratorFieldSpecified;
            }
            set {
                this.administratorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong CaseClose {
            get {
                return this.caseCloseField;
            }
            set {
                this.caseCloseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseCloseSpecified {
            get {
                return this.caseCloseFieldSpecified;
            }
            set {
                this.caseCloseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong CaseCreate {
            get {
                return this.caseCreateField;
            }
            set {
                this.caseCreateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseCreateSpecified {
            get {
                return this.caseCreateFieldSpecified;
            }
            set {
                this.caseCreateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong CaseDelete {
            get {
                return this.caseDeleteField;
            }
            set {
                this.caseDeleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseDeleteSpecified {
            get {
                return this.caseDeleteFieldSpecified;
            }
            set {
                this.caseDeleteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong CaseReopen {
            get {
                return this.caseReopenField;
            }
            set {
                this.caseReopenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseReopenSpecified {
            get {
                return this.caseReopenFieldSpecified;
            }
            set {
                this.caseReopenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong CategoryAccessArchive {
            get {
                return this.categoryAccessArchiveField;
            }
            set {
                this.categoryAccessArchiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryAccessArchiveSpecified {
            get {
                return this.categoryAccessArchiveFieldSpecified;
            }
            set {
                this.categoryAccessArchiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong CategoryArchive {
            get {
                return this.categoryArchiveField;
            }
            set {
                this.categoryArchiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryArchiveSpecified {
            get {
                return this.categoryArchiveFieldSpecified;
            }
            set {
                this.categoryArchiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong CategoryFieldChange {
            get {
                return this.categoryFieldChangeField;
            }
            set {
                this.categoryFieldChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryFieldChangeSpecified {
            get {
                return this.categoryFieldChangeFieldSpecified;
            }
            set {
                this.categoryFieldChangeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong CategoryFieldRead {
            get {
                return this.categoryFieldReadField;
            }
            set {
                this.categoryFieldReadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryFieldReadSpecified {
            get {
                return this.categoryFieldReadFieldSpecified;
            }
            set {
                this.categoryFieldReadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong CategoryFieldSet {
            get {
                return this.categoryFieldSetField;
            }
            set {
                this.categoryFieldSetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryFieldSetSpecified {
            get {
                return this.categoryFieldSetFieldSpecified;
            }
            set {
                this.categoryFieldSetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentAddAnnotation {
            get {
                return this.documentAddAnnotationField;
            }
            set {
                this.documentAddAnnotationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentAddAnnotationSpecified {
            get {
                return this.documentAddAnnotationFieldSpecified;
            }
            set {
                this.documentAddAnnotationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentAddPage {
            get {
                return this.documentAddPageField;
            }
            set {
                this.documentAddPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentAddPageSpecified {
            get {
                return this.documentAddPageFieldSpecified;
            }
            set {
                this.documentAddPageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentCreateTask {
            get {
                return this.documentCreateTaskField;
            }
            set {
                this.documentCreateTaskField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentCreateTaskSpecified {
            get {
                return this.documentCreateTaskFieldSpecified;
            }
            set {
                this.documentCreateTaskFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentDelete {
            get {
                return this.documentDeleteField;
            }
            set {
                this.documentDeleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentDeleteSpecified {
            get {
                return this.documentDeleteFieldSpecified;
            }
            set {
                this.documentDeleteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentDeleteAnnotation {
            get {
                return this.documentDeleteAnnotationField;
            }
            set {
                this.documentDeleteAnnotationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentDeleteAnnotationSpecified {
            get {
                return this.documentDeleteAnnotationFieldSpecified;
            }
            set {
                this.documentDeleteAnnotationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentDeletePage {
            get {
                return this.documentDeletePageField;
            }
            set {
                this.documentDeletePageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentDeletePageSpecified {
            get {
                return this.documentDeletePageFieldSpecified;
            }
            set {
                this.documentDeletePageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentEdit {
            get {
                return this.documentEditField;
            }
            set {
                this.documentEditField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentEditSpecified {
            get {
                return this.documentEditFieldSpecified;
            }
            set {
                this.documentEditFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentExport {
            get {
                return this.documentExportField;
            }
            set {
                this.documentExportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentExportSpecified {
            get {
                return this.documentExportFieldSpecified;
            }
            set {
                this.documentExportFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentManageLink {
            get {
                return this.documentManageLinkField;
            }
            set {
                this.documentManageLinkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentManageLinkSpecified {
            get {
                return this.documentManageLinkFieldSpecified;
            }
            set {
                this.documentManageLinkFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentPrint {
            get {
                return this.documentPrintField;
            }
            set {
                this.documentPrintField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentPrintSpecified {
            get {
                return this.documentPrintFieldSpecified;
            }
            set {
                this.documentPrintFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentProtect {
            get {
                return this.documentProtectField;
            }
            set {
                this.documentProtectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentProtectSpecified {
            get {
                return this.documentProtectFieldSpecified;
            }
            set {
                this.documentProtectFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentUpdateIndexData {
            get {
                return this.documentUpdateIndexDataField;
            }
            set {
                this.documentUpdateIndexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentUpdateIndexDataSpecified {
            get {
                return this.documentUpdateIndexDataFieldSpecified;
            }
            set {
                this.documentUpdateIndexDataFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentViewDocument {
            get {
                return this.documentViewDocumentField;
            }
            set {
                this.documentViewDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentViewDocumentSpecified {
            get {
                return this.documentViewDocumentFieldSpecified;
            }
            set {
                this.documentViewDocumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentViewHistory {
            get {
                return this.documentViewHistoryField;
            }
            set {
                this.documentViewHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentViewHistorySpecified {
            get {
                return this.documentViewHistoryFieldSpecified;
            }
            set {
                this.documentViewHistoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong DocumentViewInHitList {
            get {
                return this.documentViewInHitListField;
            }
            set {
                this.documentViewInHitListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentViewInHitListSpecified {
            get {
                return this.documentViewInHitListFieldSpecified;
            }
            set {
                this.documentViewInHitListFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong KeywordDictionaryChange {
            get {
                return this.keywordDictionaryChangeField;
            }
            set {
                this.keywordDictionaryChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeywordDictionaryChangeSpecified {
            get {
                return this.keywordDictionaryChangeFieldSpecified;
            }
            set {
                this.keywordDictionaryChangeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperatorSpecified {
            get {
                return this.operatorFieldSpecified;
            }
            set {
                this.operatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong QueryAdministrator {
            get {
                return this.queryAdministratorField;
            }
            set {
                this.queryAdministratorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryAdministratorSpecified {
            get {
                return this.queryAdministratorFieldSpecified;
            }
            set {
                this.queryAdministratorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong QueryCategoryTabs {
            get {
                return this.queryCategoryTabsField;
            }
            set {
                this.queryCategoryTabsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryCategoryTabsSpecified {
            get {
                return this.queryCategoryTabsFieldSpecified;
            }
            set {
                this.queryCategoryTabsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong QueryExecute {
            get {
                return this.queryExecuteField;
            }
            set {
                this.queryExecuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryExecuteSpecified {
            get {
                return this.queryExecuteFieldSpecified;
            }
            set {
                this.queryExecuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong QueryTemplatesRead {
            get {
                return this.queryTemplatesReadField;
            }
            set {
                this.queryTemplatesReadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryTemplatesReadSpecified {
            get {
                return this.queryTemplatesReadFieldSpecified;
            }
            set {
                this.queryTemplatesReadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong ReadPermissions {
            get {
                return this.readPermissionsField;
            }
            set {
                this.readPermissionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReadPermissionsSpecified {
            get {
                return this.readPermissionsFieldSpecified;
            }
            set {
                this.readPermissionsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong SetPermissions {
            get {
                return this.setPermissionsField;
            }
            set {
                this.setPermissionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SetPermissionsSpecified {
            get {
                return this.setPermissionsFieldSpecified;
            }
            set {
                this.setPermissionsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong SystemConnect {
            get {
                return this.systemConnectField;
            }
            set {
                this.systemConnectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SystemConnectSpecified {
            get {
                return this.systemConnectFieldSpecified;
            }
            set {
                this.systemConnectFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong SystemWrite {
            get {
                return this.systemWriteField;
            }
            set {
                this.systemWriteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SystemWriteSpecified {
            get {
                return this.systemWriteFieldSpecified;
            }
            set {
                this.systemWriteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong WorkflowAddDocument {
            get {
                return this.workflowAddDocumentField;
            }
            set {
                this.workflowAddDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowAddDocumentSpecified {
            get {
                return this.workflowAddDocumentFieldSpecified;
            }
            set {
                this.workflowAddDocumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong WorkflowDelegate {
            get {
                return this.workflowDelegateField;
            }
            set {
                this.workflowDelegateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowDelegateSpecified {
            get {
                return this.workflowDelegateFieldSpecified;
            }
            set {
                this.workflowDelegateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong WorkflowDelete {
            get {
                return this.workflowDeleteField;
            }
            set {
                this.workflowDeleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowDeleteSpecified {
            get {
                return this.workflowDeleteFieldSpecified;
            }
            set {
                this.workflowDeleteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong WorkflowParticipate {
            get {
                return this.workflowParticipateField;
            }
            set {
                this.workflowParticipateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowParticipateSpecified {
            get {
                return this.workflowParticipateFieldSpecified;
            }
            set {
                this.workflowParticipateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong WorkflowStartManually {
            get {
                return this.workflowStartManuallyField;
            }
            set {
                this.workflowStartManuallyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowStartManuallySpecified {
            get {
                return this.workflowStartManuallyFieldSpecified;
            }
            set {
                this.workflowStartManuallyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong WorkflowViewAll {
            get {
                return this.workflowViewAllField;
            }
            set {
                this.workflowViewAllField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowViewAllSpecified {
            get {
                return this.workflowViewAllFieldSpecified;
            }
            set {
                this.workflowViewAllFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ulong WorkflowViewHistory {
            get {
                return this.workflowViewHistoryField;
            }
            set {
                this.workflowViewHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowViewHistorySpecified {
            get {
                return this.workflowViewHistoryFieldSpecified;
            }
            set {
                this.workflowViewHistoryFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetPermissionConstantsResponse {
        
        private WSPermissionConstants permissionConstantsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSPermissionConstants PermissionConstants {
            get {
                return this.permissionConstantsField;
            }
            set {
                this.permissionConstantsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetPermissionConstantsParams {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetObjectRightsResponse {
        
        private WSAccessMask accessMaskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSAccessMask AccessMask {
            get {
                return this.accessMaskField;
            }
            set {
                this.accessMaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetObjectRightsParams {
        
        private int objectNoField;
        
        private WSObjectType objectTypeField;
        
        private int subObjNoField;
        
        private bool subObjNoFieldSpecified;
        
        /// <remarks/>
        public int ObjectNo {
            get {
                return this.objectNoField;
            }
            set {
                this.objectNoField = value;
            }
        }
        
        /// <remarks/>
        public WSObjectType ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SubObjNo {
            get {
                return this.subObjNoField;
            }
            set {
                this.subObjNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubObjNoSpecified {
            get {
                return this.subObjNoFieldSpecified;
            }
            set {
                this.subObjNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSObjectType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Server,
        
        /// <remarks/>
        Document,
        
        /// <remarks/>
        Category,
        
        /// <remarks/>
        Field,
        
        /// <remarks/>
        DataType,
        
        /// <remarks/>
        MediaPool,
        
        /// <remarks/>
        Media,
        
        /// <remarks/>
        IndexingProfile,
        
        /// <remarks/>
        SpoolType,
        
        /// <remarks/>
        Query,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Group,
        
        /// <remarks/>
        CaptureProfile,
        
        /// <remarks/>
        PreProcessor,
        
        /// <remarks/>
        COLDForm,
        
        /// <remarks/>
        QueryTemplate,
        
        /// <remarks/>
        Folder,
        
        /// <remarks/>
        LoaderProfile,
        
        /// <remarks/>
        WorkflowProcess,
        
        /// <remarks/>
        WorkflowTask,
        
        /// <remarks/>
        WorkflowInstance,
        
        /// <remarks/>
        KeyDict,
        
        /// <remarks/>
        StoragePolicy,
        
        /// <remarks/>
        Device,
        
        /// <remarks/>
        StorageArea,
        
        /// <remarks/>
        Count,
        
        /// <remarks/>
        CaseDefinition,
        
        /// <remarks/>
        Case,
        
        /// <remarks/>
        ReportDefinition,
        
        /// <remarks/>
        FormImage,
        
        /// <remarks/>
        Keyword,
        
        /// <remarks/>
        Migrate,
        
        /// <remarks/>
        Connectors,
        
        /// <remarks/>
        StorageCtgry,
        
        /// <remarks/>
        ServerMediaPools,
        
        /// <remarks/>
        StorageAreaMedia,
        
        /// <remarks/>
        ServerDevices,
        
        /// <remarks/>
        ServerMedia,
        
        /// <remarks/>
        TheSystem,
        
        /// <remarks/>
        COLD,
        
        /// <remarks/>
        ExchangeConnector,
        
        /// <remarks/>
        LotusConnector,
        
        /// <remarks/>
        SAPConnector,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFolderItem {
        
        private int dataField;
        
        private bool dataFieldSpecified;
        
        private int flagsField;
        
        private bool flagsFieldSpecified;
        
        private int folderNoField;
        
        private string guidField;
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSpecified {
            get {
                return this.dataFieldSpecified;
            }
            set {
                this.dataFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlagsSpecified {
            get {
                return this.flagsFieldSpecified;
            }
            set {
                this.flagsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int FolderNo {
            get {
                return this.folderNoField;
            }
            set {
                this.folderNoField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFolder {
        
        private int folderNoField;
        
        private int foldertypeField;
        
        private bool foldertypeFieldSpecified;
        
        private string guidField;
        
        private string nameField;
        
        private int parentFolderNoField;
        
        /// <remarks/>
        public int FolderNo {
            get {
                return this.folderNoField;
            }
            set {
                this.folderNoField = value;
            }
        }
        
        /// <remarks/>
        public int Foldertype {
            get {
                return this.foldertypeField;
            }
            set {
                this.foldertypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FoldertypeSpecified {
            get {
                return this.foldertypeFieldSpecified;
            }
            set {
                this.foldertypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ParentFolderNo {
            get {
                return this.parentFolderNoField;
            }
            set {
                this.parentFolderNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetObjectsResponse {
        
        private WSFolder[] folderListField;
        
        private WSFolderItem[] itemListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSFolder[] FolderList {
            get {
                return this.folderListField;
            }
            set {
                this.folderListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSFolderItem[] ItemList {
            get {
                return this.itemListField;
            }
            set {
                this.itemListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetObjectsParams {
        
        private WSGetObjectFlags flagsField;
        
        private WSPermissionType permTypeField;
        
        private WSObjectType typeField;
        
        /// <remarks/>
        public WSGetObjectFlags Flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        public WSPermissionType PermType {
            get {
                return this.permTypeField;
            }
            set {
                this.permTypeField = value;
            }
        }
        
        /// <remarks/>
        public WSObjectType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSGetObjectFlags {
        
        /// <remarks/>
        GetNoFolders,
        
        /// <remarks/>
        GetAllFolders,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSPermissionType : long {
        
        /// <remarks/>
        IgnorePermissions = 1,
        
        /// <remarks/>
        OperatorPermission = 2,
        
        /// <remarks/>
        AdminPermission = 4,
        
        /// <remarks/>
        SetPermPermission = 8,
        
        /// <remarks/>
        AccessPermission = 16,
        
        /// <remarks/>
        TheSystemConnectPermission = 32,
        
        /// <remarks/>
        TheSystemWritePermission = 64,
        
        /// <remarks/>
        CategoryArchivePermission = 128,
        
        /// <remarks/>
        QueryAdminPermission = 256,
        
        /// <remarks/>
        QueryExecutePermission = 512,
        
        /// <remarks/>
        QueryCtgrytabsPermission = 1024,
        
        /// <remarks/>
        KeywordDictionaryChangePermission = 2048,
        
        /// <remarks/>
        QueryTemplatesReadPermission = 4096,
        
        /// <remarks/>
        DocViewinHitListPermission = 8192,
        
        /// <remarks/>
        DocViewDocPermission = 16384,
        
        /// <remarks/>
        DocPrintPermission = 32768,
        
        /// <remarks/>
        DocExportSendPermission = 65536,
        
        /// <remarks/>
        DocViewAnnotationPermission = 131072,
        
        /// <remarks/>
        DocHideAnnotationPermission = 262144,
        
        /// <remarks/>
        DocViewHistoryPermission = 524288,
        
        /// <remarks/>
        WfParticipatePermission = 1048576,
        
        /// <remarks/>
        DocAddAnnotationsPermission = 2097152,
        
        /// <remarks/>
        WfAddDocPermission = 4194304,
        
        /// <remarks/>
        DocDeleteAnnotationsPermission = 8388608,
        
        /// <remarks/>
        WfViewHistoryPermission = 16777216,
        
        /// <remarks/>
        DocEditPermission = 33554432,
        
        /// <remarks/>
        WfDelegatePermission = 67108864,
        
        /// <remarks/>
        DocUpdateIndexDataPermission = 134217728,
        
        /// <remarks/>
        WfViewAllPermission = 268435456,
        
        /// <remarks/>
        DocAddPagePermission = 536870912,
        
        /// <remarks/>
        WfDeletePermission = 1073741824,
        
        /// <remarks/>
        DocDeletePagePermission = 2147483648,
        
        /// <remarks/>
        DocDeleteDocPermission = 4294967296,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class HasPermissionsResponse {
        
        private bool hasPermissionsField;
        
        private bool hasPermissionsFieldSpecified;
        
        /// <remarks/>
        public bool HasPermissions {
            get {
                return this.hasPermissionsField;
            }
            set {
                this.hasPermissionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasPermissionsSpecified {
            get {
                return this.hasPermissionsFieldSpecified;
            }
            set {
                this.hasPermissionsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class HasPermissionsParams {
        
        private int objNoField;
        
        private WSObjectType objTypeField;
        
        private WSPermissionType permTypeField;
        
        private int subObjNoField;
        
        /// <remarks/>
        public int ObjNo {
            get {
                return this.objNoField;
            }
            set {
                this.objNoField = value;
            }
        }
        
        /// <remarks/>
        public WSObjectType ObjType {
            get {
                return this.objTypeField;
            }
            set {
                this.objTypeField = value;
            }
        }
        
        /// <remarks/>
        public WSPermissionType PermType {
            get {
                return this.permTypeField;
            }
            set {
                this.permTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SubObjNo {
            get {
                return this.subObjNoField;
            }
            set {
                this.subObjNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWebAPIServerVersionResponse {
        
        private string commentField;
        
        private int updateNoField;
        
        private bool updateNoFieldSpecified;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public int UpdateNo {
            get {
                return this.updateNoField;
            }
            set {
                this.updateNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdateNoSpecified {
            get {
                return this.updateNoFieldSpecified;
            }
            set {
                this.updateNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetWebAPIServerVersionParams {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteUsersQueryResponse {
        
        private WSUser[] usersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSUser[] Users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteUsersQueryParams {
        
        private string[] domainNamesField;
        
        private WSUserQueryFlags flagsField;
        
        private string queryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("DomainName")]
        public string[] DomainNames {
            get {
                return this.domainNamesField;
            }
            set {
                this.domainNamesField = value;
            }
        }
        
        /// <remarks/>
        public WSUserQueryFlags Flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSUserQueryFlags {
        
        /// <remarks/>
        FindUsersInActiveDirectory,
        
        /// <remarks/>
        FindUsersInTherefore,
        
        /// <remarks/>
        FindAllUsers,
        
        /// <remarks/>
        FindUsersNotInTherefore,
        
        /// <remarks/>
        FindGroupsInActiveDirectory,
        
        /// <remarks/>
        FindGroupsInTherefore,
        
        /// <remarks/>
        FindAllGroups,
        
        /// <remarks/>
        FindAllUsersAndGroups,
        
        /// <remarks/>
        FindGroupsNotInTherefore,
        
        /// <remarks/>
        FindSMTPUsersOnly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConnectedUserResponse {
        
        private WSUser userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSUser User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConnectedUserParams {
        
        private bool createField;
        
        private bool createFieldSpecified;
        
        /// <remarks/>
        public bool Create {
            get {
                return this.createField;
            }
            set {
                this.createField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreateSpecified {
            get {
                return this.createFieldSpecified;
            }
            set {
                this.createFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTreeViewNodeDocumentsResponse {
        
        private string categoryNameField;
        
        private int categoryNoField;
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private WSIndexDataToGet[] documentsIndexDataListField;
        
        private string titleField;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSIndexDataToGet[] DocumentsIndexDataList {
            get {
                return this.documentsIndexDataListField;
            }
            set {
                this.documentsIndexDataListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTreeViewNodeDocumentsParams {
        
        private bool isIndexDataNeededField;
        
        private bool isIndexDataNeededFieldSpecified;
        
        private string[] pathListField;
        
        private int viewNoField;
        
        /// <remarks/>
        public bool IsIndexDataNeeded {
            get {
                return this.isIndexDataNeededField;
            }
            set {
                this.isIndexDataNeededField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsIndexDataNeededSpecified {
            get {
                return this.isIndexDataNeededFieldSpecified;
            }
            set {
                this.isIndexDataNeededFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Path")]
        public string[] PathList {
            get {
                return this.pathListField;
            }
            set {
                this.pathListField = value;
            }
        }
        
        /// <remarks/>
        public int ViewNo {
            get {
                return this.viewNoField;
            }
            set {
                this.viewNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTreeViewLevelNode {
        
        private WSTreeViewLevelNode[] childNodesField;
        
        private string nodeValueField;
        
        private string[] pathListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSTreeViewLevelNode[] ChildNodes {
            get {
                return this.childNodesField;
            }
            set {
                this.childNodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NodeValue {
            get {
                return this.nodeValueField;
            }
            set {
                this.nodeValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Path")]
        public string[] PathList {
            get {
                return this.pathListField;
            }
            set {
                this.pathListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTreeViewChildNodesResponse {
        
        private WSTreeViewLevelNode[] childNodesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSTreeViewLevelNode[] ChildNodes {
            get {
                return this.childNodesField;
            }
            set {
                this.childNodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetTreeViewChildNodesParams {
        
        private bool getAllNestedNodesField;
        
        private bool getAllNestedNodesFieldSpecified;
        
        private string[] pathListField;
        
        private int viewNoField;
        
        /// <remarks/>
        public bool GetAllNestedNodes {
            get {
                return this.getAllNestedNodesField;
            }
            set {
                this.getAllNestedNodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GetAllNestedNodesSpecified {
            get {
                return this.getAllNestedNodesFieldSpecified;
            }
            set {
                this.getAllNestedNodesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Path")]
        public string[] PathList {
            get {
                return this.pathListField;
            }
            set {
                this.pathListField = value;
            }
        }
        
        /// <remarks/>
        public int ViewNo {
            get {
                return this.viewNoField;
            }
            set {
                this.viewNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTreeViewLevelDefinition {
        
        private int fieldNoField;
        
        private bool fieldNoFieldSpecified;
        
        private string funcParamField;
        
        private WSLevelFunction functionField;
        
        private bool functionFieldSpecified;
        
        private bool isLastLevelField;
        
        private bool isLastLevelFieldSpecified;
        
        private int levelNoField;
        
        private bool levelNoFieldSpecified;
        
        private WSSortOrder sortOrderField;
        
        private bool sortOrderFieldSpecified;
        
        private int viewNoField;
        
        private bool viewNoFieldSpecified;
        
        /// <remarks/>
        public int FieldNo {
            get {
                return this.fieldNoField;
            }
            set {
                this.fieldNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldNoSpecified {
            get {
                return this.fieldNoFieldSpecified;
            }
            set {
                this.fieldNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FuncParam {
            get {
                return this.funcParamField;
            }
            set {
                this.funcParamField = value;
            }
        }
        
        /// <remarks/>
        public WSLevelFunction Function {
            get {
                return this.functionField;
            }
            set {
                this.functionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FunctionSpecified {
            get {
                return this.functionFieldSpecified;
            }
            set {
                this.functionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsLastLevel {
            get {
                return this.isLastLevelField;
            }
            set {
                this.isLastLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsLastLevelSpecified {
            get {
                return this.isLastLevelFieldSpecified;
            }
            set {
                this.isLastLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int LevelNo {
            get {
                return this.levelNoField;
            }
            set {
                this.levelNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelNoSpecified {
            get {
                return this.levelNoFieldSpecified;
            }
            set {
                this.levelNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSSortOrder SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortOrderSpecified {
            get {
                return this.sortOrderFieldSpecified;
            }
            set {
                this.sortOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ViewNo {
            get {
                return this.viewNoField;
            }
            set {
                this.viewNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ViewNoSpecified {
            get {
                return this.viewNoFieldSpecified;
            }
            set {
                this.viewNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSLevelFunction {
        
        /// <remarks/>
        NoFunction,
        
        /// <remarks/>
        Month,
        
        /// <remarks/>
        Year,
        
        /// <remarks/>
        MonthYear,
        
        /// <remarks/>
        FirstChar,
        
        /// <remarks/>
        FirstCharGroup,
        
        /// <remarks/>
        Range,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSSortOrder {
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTreeViewItem {
        
        private int categoryNoField;
        
        private bool categoryNoFieldSpecified;
        
        private string guidField;
        
        private WSTreeViewLevelDefinition[] levelsDefinitionField;
        
        private string nameField;
        
        private int viewNoField;
        
        private bool viewNoFieldSpecified;
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryNoSpecified {
            get {
                return this.categoryNoFieldSpecified;
            }
            set {
                this.categoryNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSTreeViewLevelDefinition[] LevelsDefinition {
            get {
                return this.levelsDefinitionField;
            }
            set {
                this.levelsDefinitionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ViewNo {
            get {
                return this.viewNoField;
            }
            set {
                this.viewNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ViewNoSpecified {
            get {
                return this.viewNoFieldSpecified;
            }
            set {
                this.viewNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetAllTreeViewsResponse {
        
        private WSTreeViewItem[] treeViewListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSTreeViewItem[] TreeViewList {
            get {
                return this.treeViewListField;
            }
            set {
                this.treeViewListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetAllTreeViewsParams {
        
        private WSPermissionType permissionsField;
        
        /// <remarks/>
        public WSPermissionType Permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDomainInfoResponse {
        
        private string defaultDomainField;
        
        private string[] domainNamesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DefaultDomain {
            get {
                return this.defaultDomainField;
            }
            set {
                this.defaultDomainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("DomainName")]
        public string[] DomainNames {
            get {
                return this.domainNamesField;
            }
            set {
                this.domainNamesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDomainInfoParams {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCategoryTreeItem {
        
        private WSCategoryTreeItem[] childItemsField;
        
        private int folderTypeField;
        
        private bool folderTypeFieldSpecified;
        
        private string guidField;
        
        private int itemNoField;
        
        private bool itemNoFieldSpecified;
        
        private WSCategoryTreeItemType itemTypeField;
        
        private bool itemTypeFieldSpecified;
        
        private string nameField;
        
        private int parentCaseDefNoField;
        
        private bool parentCaseDefNoFieldSpecified;
        
        private int parentFolderNoField;
        
        private bool parentFolderNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSCategoryTreeItem[] ChildItems {
            get {
                return this.childItemsField;
            }
            set {
                this.childItemsField = value;
            }
        }
        
        /// <remarks/>
        public int FolderType {
            get {
                return this.folderTypeField;
            }
            set {
                this.folderTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FolderTypeSpecified {
            get {
                return this.folderTypeFieldSpecified;
            }
            set {
                this.folderTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public int ItemNo {
            get {
                return this.itemNoField;
            }
            set {
                this.itemNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemNoSpecified {
            get {
                return this.itemNoFieldSpecified;
            }
            set {
                this.itemNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSCategoryTreeItemType ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemTypeSpecified {
            get {
                return this.itemTypeFieldSpecified;
            }
            set {
                this.itemTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ParentCaseDefNo {
            get {
                return this.parentCaseDefNoField;
            }
            set {
                this.parentCaseDefNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentCaseDefNoSpecified {
            get {
                return this.parentCaseDefNoFieldSpecified;
            }
            set {
                this.parentCaseDefNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ParentFolderNo {
            get {
                return this.parentFolderNoField;
            }
            set {
                this.parentFolderNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentFolderNoSpecified {
            get {
                return this.parentFolderNoFieldSpecified;
            }
            set {
                this.parentFolderNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCategoryTreeItemType {
        
        /// <remarks/>
        Root,
        
        /// <remarks/>
        Folder,
        
        /// <remarks/>
        Category,
        
        /// <remarks/>
        CaseDefinition,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCategoriesTreeResponse {
        
        private WSCategoryTreeItem[] treeItemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSCategoryTreeItem[] TreeItems {
            get {
                return this.treeItemsField;
            }
            set {
                this.treeItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCategoriesTreeParams {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseFullTextQueryResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseFullTextQueryParams {
        
        private int queryIDField;
        
        /// <remarks/>
        public int QueryID {
            get {
                return this.queryIDField;
            }
            set {
                this.queryIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextFullTextQueryRowsResponse {
        
        private bool hasRemainingRowsField;
        
        private bool hasRemainingRowsFieldSpecified;
        
        private WSFullTextQueryResultRow[] resultsField;
        
        /// <remarks/>
        public bool HasRemainingRows {
            get {
                return this.hasRemainingRowsField;
            }
            set {
                this.hasRemainingRowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasRemainingRowsSpecified {
            get {
                return this.hasRemainingRowsFieldSpecified;
            }
            set {
                this.hasRemainingRowsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSFullTextQueryResultRow[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFullTextQueryResultRow {
        
        private WSAccessMask accessMaskField;
        
        private int categoryNoField;
        
        private bool categoryNoFieldSpecified;
        
        private string contextField;
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private long docSizeField;
        
        private bool docSizeFieldSpecified;
        
        private string extensionField;
        
        private int hitCountField;
        
        private bool hitCountFieldSpecified;
        
        private string[] matchedWordsField;
        
        private System.DateTime modifiedField;
        
        private bool modifiedFieldSpecified;
        
        private int rankField;
        
        private bool rankFieldSpecified;
        
        private int relevanceField;
        
        private bool relevanceFieldSpecified;
        
        private int subCategoryNoField;
        
        private bool subCategoryNoFieldSpecified;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSAccessMask AccessMask {
            get {
                return this.accessMaskField;
            }
            set {
                this.accessMaskField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryNoSpecified {
            get {
                return this.categoryNoFieldSpecified;
            }
            set {
                this.categoryNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long DocSize {
            get {
                return this.docSizeField;
            }
            set {
                this.docSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocSizeSpecified {
            get {
                return this.docSizeFieldSpecified;
            }
            set {
                this.docSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public int HitCount {
            get {
                return this.hitCountField;
            }
            set {
                this.hitCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HitCountSpecified {
            get {
                return this.hitCountFieldSpecified;
            }
            set {
                this.hitCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("MatchedWord")]
        public string[] MatchedWords {
            get {
                return this.matchedWordsField;
            }
            set {
                this.matchedWordsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModifiedSpecified {
            get {
                return this.modifiedFieldSpecified;
            }
            set {
                this.modifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RankSpecified {
            get {
                return this.rankFieldSpecified;
            }
            set {
                this.rankFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Relevance {
            get {
                return this.relevanceField;
            }
            set {
                this.relevanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RelevanceSpecified {
            get {
                return this.relevanceFieldSpecified;
            }
            set {
                this.relevanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SubCategoryNo {
            get {
                return this.subCategoryNoField;
            }
            set {
                this.subCategoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubCategoryNoSpecified {
            get {
                return this.subCategoryNoFieldSpecified;
            }
            set {
                this.subCategoryNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextFullTextQueryRowsParams {
        
        private int queryIDField;
        
        /// <remarks/>
        public int QueryID {
            get {
                return this.queryIDField;
            }
            set {
                this.queryIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncFullTextQueryResponse {
        
        private int queryIdField;
        
        private bool queryIdFieldSpecified;
        
        /// <remarks/>
        public int QueryId {
            get {
                return this.queryIdField;
            }
            set {
                this.queryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryIdSpecified {
            get {
                return this.queryIdFieldSpecified;
            }
            set {
                this.queryIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncFullTextQueryParams {
        
        private WSFullTextQuery fullTextQueryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSFullTextQuery FullTextQuery {
            get {
                return this.fullTextQueryField;
            }
            set {
                this.fullTextQueryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSFullTextQuery {
        
        private int blockSizeField;
        
        private bool blockSizeFieldSpecified;
        
        private int caseNoField;
        
        private bool caseNoFieldSpecified;
        
        private int[] categoriesField;
        
        private int contextMaxSizeKBField;
        
        private bool contextMaxSizeKBFieldSpecified;
        
        private WSFullTextContext contextModeField;
        
        private int fuzzySearchLevelField;
        
        private bool fuzzySearchLevelFieldSpecified;
        
        private int lCIDField;
        
        private bool lCIDFieldSpecified;
        
        private int maxContentCharsField;
        
        private bool maxContentCharsFieldSpecified;
        
        private int maxRowsField;
        
        private bool maxRowsFieldSpecified;
        
        private string searchField;
        
        private WSSearchScope searchScopeField;
        
        private WSFullTextSortOrder sortOrderField;
        
        private bool useThesaurusField;
        
        private bool useThesaurusFieldSpecified;
        
        /// <remarks/>
        public int BlockSize {
            get {
                return this.blockSizeField;
            }
            set {
                this.blockSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlockSizeSpecified {
            get {
                return this.blockSizeFieldSpecified;
            }
            set {
                this.blockSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CaseNo {
            get {
                return this.caseNoField;
            }
            set {
                this.caseNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseNoSpecified {
            get {
                return this.caseNoFieldSpecified;
            }
            set {
                this.caseNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Category", IsNullable=false)]
        public int[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public int ContextMaxSizeKB {
            get {
                return this.contextMaxSizeKBField;
            }
            set {
                this.contextMaxSizeKBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContextMaxSizeKBSpecified {
            get {
                return this.contextMaxSizeKBFieldSpecified;
            }
            set {
                this.contextMaxSizeKBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSFullTextContext ContextMode {
            get {
                return this.contextModeField;
            }
            set {
                this.contextModeField = value;
            }
        }
        
        /// <remarks/>
        public int FuzzySearchLevel {
            get {
                return this.fuzzySearchLevelField;
            }
            set {
                this.fuzzySearchLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FuzzySearchLevelSpecified {
            get {
                return this.fuzzySearchLevelFieldSpecified;
            }
            set {
                this.fuzzySearchLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int LCID {
            get {
                return this.lCIDField;
            }
            set {
                this.lCIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LCIDSpecified {
            get {
                return this.lCIDFieldSpecified;
            }
            set {
                this.lCIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MaxContentChars {
            get {
                return this.maxContentCharsField;
            }
            set {
                this.maxContentCharsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxContentCharsSpecified {
            get {
                return this.maxContentCharsFieldSpecified;
            }
            set {
                this.maxContentCharsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MaxRows {
            get {
                return this.maxRowsField;
            }
            set {
                this.maxRowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxRowsSpecified {
            get {
                return this.maxRowsFieldSpecified;
            }
            set {
                this.maxRowsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Search {
            get {
                return this.searchField;
            }
            set {
                this.searchField = value;
            }
        }
        
        /// <remarks/>
        public WSSearchScope SearchScope {
            get {
                return this.searchScopeField;
            }
            set {
                this.searchScopeField = value;
            }
        }
        
        /// <remarks/>
        public WSFullTextSortOrder SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        public bool UseThesaurus {
            get {
                return this.useThesaurusField;
            }
            set {
                this.useThesaurusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseThesaurusSpecified {
            get {
                return this.useThesaurusFieldSpecified;
            }
            set {
                this.useThesaurusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSFullTextContext {
        
        /// <remarks/>
        FTContextOff,
        
        /// <remarks/>
        FTContextOn,
        
        /// <remarks/>
        FTContextSize,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSSearchScope {
        
        /// <remarks/>
        IndexData,
        
        /// <remarks/>
        Content,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSFullTextSortOrder {
        
        /// <remarks/>
        ByRelevance,
        
        /// <remarks/>
        ByDate,
        
        /// <remarks/>
        ByHitCount,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteFullTextQueryResponse {
        
        private WSFullTextQueryResultRow[] resultsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSFullTextQueryResultRow[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteFullTextQueryParams {
        
        private WSFullTextQuery fullTextQueryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSFullTextQuery FullTextQuery {
            get {
                return this.fullTextQueryField;
            }
            set {
                this.fullTextQueryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseMultiQueryResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseMultiQueryParams {
        
        private int queryIDField;
        
        /// <remarks/>
        public int QueryID {
            get {
                return this.queryIDField;
            }
            set {
                this.queryIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextMultiQueryRowsResponse {
        
        private bool hasRemainingRowsField;
        
        private bool hasRemainingRowsFieldSpecified;
        
        private WSQueryResult[] queryResultsField;
        
        /// <remarks/>
        public bool HasRemainingRows {
            get {
                return this.hasRemainingRowsField;
            }
            set {
                this.hasRemainingRowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasRemainingRowsSpecified {
            get {
                return this.hasRemainingRowsFieldSpecified;
            }
            set {
                this.hasRemainingRowsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSQueryResult[] QueryResults {
            get {
                return this.queryResultsField;
            }
            set {
                this.queryResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSQueryResult {
        
        private int caseDefinitionNoField;
        
        private bool caseDefinitionNoFieldSpecified;
        
        private int categoryNoField;
        
        private bool categoryNoFieldSpecified;
        
        private int processNoField;
        
        private bool processNoFieldSpecified;
        
        private WSQueryResultRow[] resultRowsField;
        
        /// <remarks/>
        public int CaseDefinitionNo {
            get {
                return this.caseDefinitionNoField;
            }
            set {
                this.caseDefinitionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseDefinitionNoSpecified {
            get {
                return this.caseDefinitionNoFieldSpecified;
            }
            set {
                this.caseDefinitionNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryNoSpecified {
            get {
                return this.categoryNoFieldSpecified;
            }
            set {
                this.categoryNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ProcessNo {
            get {
                return this.processNoField;
            }
            set {
                this.processNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessNoSpecified {
            get {
                return this.processNoFieldSpecified;
            }
            set {
                this.processNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSQueryResultRow[] ResultRows {
            get {
                return this.resultRowsField;
            }
            set {
                this.resultRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSQueryResultRow {
        
        private WSAccessMask accessMaskField;
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private string[] indexValuesField;
        
        private long sizeField;
        
        private bool sizeFieldSpecified;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSAccessMask AccessMask {
            get {
                return this.accessMaskField;
            }
            set {
                this.accessMaskField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("IndexValue")]
        public string[] IndexValues {
            get {
                return this.indexValuesField;
            }
            set {
                this.indexValuesField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified {
            get {
                return this.sizeFieldSpecified;
            }
            set {
                this.sizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextMultiQueryRowsParams {
        
        private int queryIDField;
        
        /// <remarks/>
        public int QueryID {
            get {
                return this.queryIDField;
            }
            set {
                this.queryIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncMultiQueryResponse {
        
        private int queryIdField;
        
        private bool queryIdFieldSpecified;
        
        private WSQueryResult[] queryResultsField;
        
        /// <remarks/>
        public int QueryId {
            get {
                return this.queryIdField;
            }
            set {
                this.queryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryIdSpecified {
            get {
                return this.queryIdFieldSpecified;
            }
            set {
                this.queryIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSQueryResult[] QueryResults {
            get {
                return this.queryResultsField;
            }
            set {
                this.queryResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncMultiQueryParams {
        
        private string fullTextField;
        
        private QueryBasicObject[] queriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FullText {
            get {
                return this.fullTextField;
            }
            set {
                this.fullTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public QueryBasicObject[] Queries {
            get {
                return this.queriesField;
            }
            set {
                this.queriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QueryObject))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class QueryBasicObject {
        
        private System.Nullable<int> caseDefinitionNoField;
        
        private bool caseDefinitionNoFieldSpecified;
        
        private System.Nullable<int> categoryNoField;
        
        private bool categoryNoFieldSpecified;
        
        private WSCondition[] conditionsField;
        
        private string fileByColNameField;
        
        private System.Nullable<int> fileByFieldNoField;
        
        private bool fileByFieldNoFieldSpecified;
        
        private int maxRowsField;
        
        private bool maxRowsFieldSpecified;
        
        private System.Nullable<WSQueryMode> modeField;
        
        private bool modeFieldSpecified;
        
        private string[] orderByFieldsNoOrNamesField;
        
        private int rowBlockSizeField;
        
        private bool rowBlockSizeFieldSpecified;
        
        private string[] selectedFieldsNoOrNamesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CaseDefinitionNo {
            get {
                return this.caseDefinitionNoField;
            }
            set {
                this.caseDefinitionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseDefinitionNoSpecified {
            get {
                return this.caseDefinitionNoFieldSpecified;
            }
            set {
                this.caseDefinitionNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryNoSpecified {
            get {
                return this.categoryNoFieldSpecified;
            }
            set {
                this.categoryNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSCondition[] Conditions {
            get {
                return this.conditionsField;
            }
            set {
                this.conditionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileByColName {
            get {
                return this.fileByColNameField;
            }
            set {
                this.fileByColNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FileByFieldNo {
            get {
                return this.fileByFieldNoField;
            }
            set {
                this.fileByFieldNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileByFieldNoSpecified {
            get {
                return this.fileByFieldNoFieldSpecified;
            }
            set {
                this.fileByFieldNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MaxRows {
            get {
                return this.maxRowsField;
            }
            set {
                this.maxRowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxRowsSpecified {
            get {
                return this.maxRowsFieldSpecified;
            }
            set {
                this.maxRowsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<WSQueryMode> Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModeSpecified {
            get {
                return this.modeFieldSpecified;
            }
            set {
                this.modeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("FieldNoOrName")]
        public string[] OrderByFieldsNoOrNames {
            get {
                return this.orderByFieldsNoOrNamesField;
            }
            set {
                this.orderByFieldsNoOrNamesField = value;
            }
        }
        
        /// <remarks/>
        public int RowBlockSize {
            get {
                return this.rowBlockSizeField;
            }
            set {
                this.rowBlockSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowBlockSizeSpecified {
            get {
                return this.rowBlockSizeFieldSpecified;
            }
            set {
                this.rowBlockSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("FieldNoOrName")]
        public string[] SelectedFieldsNoOrNames {
            get {
                return this.selectedFieldsNoOrNamesField;
            }
            set {
                this.selectedFieldsNoOrNamesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCondition {
        
        private string conditionField;
        
        private string fieldNoOrNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FieldNoOrName {
            get {
                return this.fieldNoOrNameField;
            }
            set {
                this.fieldNoOrNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSQueryMode {
        
        /// <remarks/>
        NormalQuery,
        
        /// <remarks/>
        FileQuery,
        
        /// <remarks/>
        WorkflowQuery,
        
        /// <remarks/>
        CaseQuery,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class QueryObject : QueryBasicObject {
        
        private string fullTextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FullText {
            get {
                return this.fullTextField;
            }
            set {
                this.fullTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteMultiQueryResponse {
        
        private WSQueryResult[] queryResultsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSQueryResult[] QueryResults {
            get {
                return this.queryResultsField;
            }
            set {
                this.queryResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteMultiQueryParams {
        
        private string fullTextField;
        
        private QueryObject[] queriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FullText {
            get {
                return this.fullTextField;
            }
            set {
                this.fullTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public QueryObject[] Queries {
            get {
                return this.queriesField;
            }
            set {
                this.queriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseSingleQueryResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ReleaseSingleQueryParams {
        
        private int queryIDField;
        
        /// <remarks/>
        public int QueryID {
            get {
                return this.queryIDField;
            }
            set {
                this.queryIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextSingleQueryRowsResponse {
        
        private bool hasRemainingRowsField;
        
        private bool hasRemainingRowsFieldSpecified;
        
        private WSQueryResult queryResultField;
        
        /// <remarks/>
        public bool HasRemainingRows {
            get {
                return this.hasRemainingRowsField;
            }
            set {
                this.hasRemainingRowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasRemainingRowsSpecified {
            get {
                return this.hasRemainingRowsFieldSpecified;
            }
            set {
                this.hasRemainingRowsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSQueryResult QueryResult {
            get {
                return this.queryResultField;
            }
            set {
                this.queryResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetNextSingleQueryRowsParams {
        
        private int queryIDField;
        
        /// <remarks/>
        public int QueryID {
            get {
                return this.queryIDField;
            }
            set {
                this.queryIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncSingleQueryResponse {
        
        private int queryIdField;
        
        private bool queryIdFieldSpecified;
        
        private WSQueryResult queryResultField;
        
        /// <remarks/>
        public int QueryId {
            get {
                return this.queryIdField;
            }
            set {
                this.queryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryIdSpecified {
            get {
                return this.queryIdFieldSpecified;
            }
            set {
                this.queryIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSQueryResult QueryResult {
            get {
                return this.queryResultField;
            }
            set {
                this.queryResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteAsyncSingleQueryParams {
        
        private string fullTextField;
        
        private QueryObject queryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FullText {
            get {
                return this.fullTextField;
            }
            set {
                this.fullTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public QueryObject Query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteSingleQueryResponse {
        
        private WSQueryResult queryResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSQueryResult QueryResult {
            get {
                return this.queryResultField;
            }
            set {
                this.queryResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteSingleQueryParams {
        
        private string fullTextField;
        
        private QueryObject queryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FullText {
            get {
                return this.fullTextField;
            }
            set {
                this.fullTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public QueryObject Query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSValidOperators {
        
        private string andField;
        
        private string emptyField;
        
        private string greaterThanField;
        
        private string greaterThanOrEqualField;
        
        private string lessThanField;
        
        private string lessThanOrEqualField;
        
        private string notEmptyField;
        
        private string orField;
        
        private string toField;
        
        private string wildcardField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string And {
            get {
                return this.andField;
            }
            set {
                this.andField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Empty {
            get {
                return this.emptyField;
            }
            set {
                this.emptyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GreaterThan {
            get {
                return this.greaterThanField;
            }
            set {
                this.greaterThanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GreaterThanOrEqual {
            get {
                return this.greaterThanOrEqualField;
            }
            set {
                this.greaterThanOrEqualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LessThan {
            get {
                return this.lessThanField;
            }
            set {
                this.lessThanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LessThanOrEqual {
            get {
                return this.lessThanOrEqualField;
            }
            set {
                this.lessThanOrEqualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NotEmpty {
            get {
                return this.notEmptyField;
            }
            set {
                this.notEmptyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Or {
            get {
                return this.orField;
            }
            set {
                this.orField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Wildcard {
            get {
                return this.wildcardField;
            }
            set {
                this.wildcardField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class QuerySpecificationResponse {
        
        private string dateFormatField;
        
        private string numberDecimalSeparatorField;
        
        private string[] validOperandMacrosField;
        
        private WSValidOperators validQueryOperatorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DateFormat {
            get {
                return this.dateFormatField;
            }
            set {
                this.dateFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NumberDecimalSeparator {
            get {
                return this.numberDecimalSeparatorField;
            }
            set {
                this.numberDecimalSeparatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ValidOperandMacros")]
        public string[] ValidOperandMacros {
            get {
                return this.validOperandMacrosField;
            }
            set {
                this.validOperandMacrosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSValidOperators ValidQueryOperators {
            get {
                return this.validQueryOperatorsField;
            }
            set {
                this.validQueryOperatorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class QuerySpecificationParams {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteSimpleQueryResponse {
        
        private WSQueryResult queryResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSQueryResult QueryResult {
            get {
                return this.queryResultField;
            }
            set {
                this.queryResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class ExecuteSimpleQueryParams {
        
        private int categoryNoField;
        
        private string conditionField;
        
        private int fieldNoField;
        
        private int orderByFieldNoField;
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        public int FieldNo {
            get {
                return this.fieldNoField;
            }
            set {
                this.fieldNoField = value;
            }
        }
        
        /// <remarks/>
        public int OrderByFieldNo {
            get {
                return this.orderByFieldNoField;
            }
            set {
                this.orderByFieldNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteDocumentResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class DeleteDocumentParams {
        
        private int docNoField;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSDocumentProperties {
        
        private string checkedOutByField;
        
        private System.DateTime checkedOutOnField;
        
        private bool checkedOutOnFieldSpecified;
        
        private string createdByField;
        
        private System.DateTime createdOnField;
        
        private bool createdOnFieldSpecified;
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private long docSizeField;
        
        private bool docSizeFieldSpecified;
        
        private string extensionField;
        
        private int fileCountField;
        
        private bool fileCountFieldSpecified;
        
        private bool hasOldVersionField;
        
        private bool hasOldVersionFieldSpecified;
        
        private System.DateTime lastModifiedField;
        
        private bool lastModifiedFieldSpecified;
        
        private string modifiedByField;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckedOutBy {
            get {
                return this.checkedOutByField;
            }
            set {
                this.checkedOutByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CheckedOutOn {
            get {
                return this.checkedOutOnField;
            }
            set {
                this.checkedOutOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckedOutOnSpecified {
            get {
                return this.checkedOutOnFieldSpecified;
            }
            set {
                this.checkedOutOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedOnSpecified {
            get {
                return this.createdOnFieldSpecified;
            }
            set {
                this.createdOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long DocSize {
            get {
                return this.docSizeField;
            }
            set {
                this.docSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocSizeSpecified {
            get {
                return this.docSizeFieldSpecified;
            }
            set {
                this.docSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public int FileCount {
            get {
                return this.fileCountField;
            }
            set {
                this.fileCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileCountSpecified {
            get {
                return this.fileCountFieldSpecified;
            }
            set {
                this.fileCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool HasOldVersion {
            get {
                return this.hasOldVersionField;
            }
            set {
                this.hasOldVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasOldVersionSpecified {
            get {
                return this.hasOldVersionFieldSpecified;
            }
            set {
                this.hasOldVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastModifiedSpecified {
            get {
                return this.lastModifiedFieldSpecified;
            }
            set {
                this.lastModifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ModifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentPropertiesResponse {
        
        private WSDocumentProperties documentPropertiesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSDocumentProperties DocumentProperties {
            get {
                return this.documentPropertiesField;
            }
            set {
                this.documentPropertiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentPropertiesParams {
        
        private int docNoField;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetThumbnailResponse {
        
        private bool existsField;
        
        private bool existsFieldSpecified;
        
        private byte[] thumbnailFileDataField;
        
        private string thumbnailFileExtensionField;
        
        /// <remarks/>
        public bool Exists {
            get {
                return this.existsField;
            }
            set {
                this.existsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExistsSpecified {
            get {
                return this.existsFieldSpecified;
            }
            set {
                this.existsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] ThumbnailFileData {
            get {
                return this.thumbnailFileDataField;
            }
            set {
                this.thumbnailFileDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ThumbnailFileExtension {
            get {
                return this.thumbnailFileExtensionField;
            }
            set {
                this.thumbnailFileExtensionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetThumbnailParams {
        
        private int docNoField;
        
        private System.Nullable<int> sizeInPixelsField;
        
        private bool sizeInPixelsFieldSpecified;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SizeInPixels {
            get {
                return this.sizeInPixelsField;
            }
            set {
                this.sizeInPixelsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeInPixelsSpecified {
            get {
                return this.sizeInPixelsFieldSpecified;
            }
            set {
                this.sizeInPixelsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentCheckoutStateResponse {
        
        private WSCheckOutStatus checkOutStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSCheckOutStatus CheckOutStatus {
            get {
                return this.checkOutStatusField;
            }
            set {
                this.checkOutStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSCheckOutStatus {
        
        private WSCheckOutState checkOutStateField;
        
        private bool checkOutStateFieldSpecified;
        
        private string somebodyElseNameField;
        
        /// <remarks/>
        public WSCheckOutState CheckOutState {
            get {
                return this.checkOutStateField;
            }
            set {
                this.checkOutStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckOutStateSpecified {
            get {
                return this.checkOutStateFieldSpecified;
            }
            set {
                this.checkOutStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SomebodyElseName {
            get {
                return this.somebodyElseNameField;
            }
            set {
                this.somebodyElseNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCheckOutState {
        
        /// <remarks/>
        NotCheckedOut,
        
        /// <remarks/>
        CheckedOutByCurrentUser,
        
        /// <remarks/>
        CheckedOutBySomebodyElse,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentCheckoutStateParams {
        
        private int docNoField;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConvertedDocStreamsResponse {
        
        private WSStreamInfoWithData[] streamsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSStreamInfoWithData[] Streams {
            get {
                return this.streamsField;
            }
            set {
                this.streamsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSStreamInfoWithData {
        
        private byte[] fileDataField;
        
        private string fileNameField;
        
        private System.Nullable<int> streamNoField;
        
        private bool streamNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] FileData {
            get {
                return this.fileDataField;
            }
            set {
                this.fileDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> StreamNo {
            get {
                return this.streamNoField;
            }
            set {
                this.streamNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StreamNoSpecified {
            get {
                return this.streamNoFieldSpecified;
            }
            set {
                this.streamNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetConvertedDocStreamsParams {
        
        private WSConversionOptions conversionOptionsField;
        
        private int docNoField;
        
        private int[] streamNosField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSConversionOptions ConversionOptions {
            get {
                return this.conversionOptionsField;
            }
            set {
                this.conversionOptionsField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("StreamNo", IsNullable=false)]
        public int[] StreamNos {
            get {
                return this.streamNosField;
            }
            set {
                this.streamNosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSConversionOptions {
        
        private WSAnnotationMode annotationModeField;
        
        private bool annotationModeFieldSpecified;
        
        private string certificateNameField;
        
        private WSConversionType convertToField;
        
        private bool convertToFieldSpecified;
        
        private WSSignatureMode signatureModeField;
        
        private bool signatureModeFieldSpecified;
        
        private string timeStampPwdField;
        
        private string timeStampServerField;
        
        private string timeStampUserField;
        
        /// <remarks/>
        public WSAnnotationMode AnnotationMode {
            get {
                return this.annotationModeField;
            }
            set {
                this.annotationModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnotationModeSpecified {
            get {
                return this.annotationModeFieldSpecified;
            }
            set {
                this.annotationModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CertificateName {
            get {
                return this.certificateNameField;
            }
            set {
                this.certificateNameField = value;
            }
        }
        
        /// <remarks/>
        public WSConversionType ConvertTo {
            get {
                return this.convertToField;
            }
            set {
                this.convertToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConvertToSpecified {
            get {
                return this.convertToFieldSpecified;
            }
            set {
                this.convertToFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSSignatureMode SignatureMode {
            get {
                return this.signatureModeField;
            }
            set {
                this.signatureModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignatureModeSpecified {
            get {
                return this.signatureModeFieldSpecified;
            }
            set {
                this.signatureModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TimeStampPwd {
            get {
                return this.timeStampPwdField;
            }
            set {
                this.timeStampPwdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TimeStampServer {
            get {
                return this.timeStampServerField;
            }
            set {
                this.timeStampServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TimeStampUser {
            get {
                return this.timeStampUserField;
            }
            set {
                this.timeStampUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSAnnotationMode {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Merge,
        
        /// <remarks/>
        Hide,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSConversionType {
        
        /// <remarks/>
        Original,
        
        /// <remarks/>
        SingleTIFF,
        
        /// <remarks/>
        SinglePDF,
        
        /// <remarks/>
        MultipageTIFF,
        
        /// <remarks/>
        MultipagePDF,
        
        /// <remarks/>
        SearchablePDF,
        
        /// <remarks/>
        SearchablePDFA,
        
        /// <remarks/>
        Jpeg,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSSignatureMode {
        
        /// <remarks/>
        NoSignature,
        
        /// <remarks/>
        SignatureOnly,
        
        /// <remarks/>
        SignatureAndTimestamp,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentStreamResponse {
        
        private byte[] fileDataField;
        
        private string fileNameField;
        
        private int streamNoField;
        
        private bool streamNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] FileData {
            get {
                return this.fileDataField;
            }
            set {
                this.fileDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public int StreamNo {
            get {
                return this.streamNoField;
            }
            set {
                this.streamNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StreamNoSpecified {
            get {
                return this.streamNoFieldSpecified;
            }
            set {
                this.streamNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentStreamParams {
        
        private int docNoField;
        
        private int streamNoField;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        public int StreamNo {
            get {
                return this.streamNoField;
            }
            set {
                this.streamNoField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSStreamInfo {
        
        private int annotationPageField;
        
        private bool annotationPageFieldSpecified;
        
        private string fileNameField;
        
        private byte[] streamDataField;
        
        private int streamNoField;
        
        private bool streamNoFieldSpecified;
        
        /// <remarks/>
        public int AnnotationPage {
            get {
                return this.annotationPageField;
            }
            set {
                this.annotationPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnotationPageSpecified {
            get {
                return this.annotationPageFieldSpecified;
            }
            set {
                this.annotationPageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] StreamData {
            get {
                return this.streamDataField;
            }
            set {
                this.streamDataField = value;
            }
        }
        
        /// <remarks/>
        public int StreamNo {
            get {
                return this.streamNoField;
            }
            set {
                this.streamNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StreamNoSpecified {
            get {
                return this.streamNoFieldSpecified;
            }
            set {
                this.streamNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentResponse {
        
        private WSCheckOutStatus checkOutStatusField;
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private WSIndexDataToGet indexDataField;
        
        private WSStreamInfo[] streamsInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSCheckOutStatus CheckOutStatus {
            get {
                return this.checkOutStatusField;
            }
            set {
                this.checkOutStatusField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataToGet IndexData {
            get {
                return this.indexDataField;
            }
            set {
                this.indexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSStreamInfo[] StreamsInfo {
            get {
                return this.streamsInfoField;
            }
            set {
                this.streamsInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentParams {
        
        private int docNoField;
        
        private bool isCheckOutStatusNeededField;
        
        private bool isCheckOutStatusNeededFieldSpecified;
        
        private bool isIndexDataValuesNeededField;
        
        private bool isIndexDataValuesNeededFieldSpecified;
        
        private bool isStreamsInfoAndDataNeededField;
        
        private bool isStreamsInfoAndDataNeededFieldSpecified;
        
        private bool isStreamsInfoNeededField;
        
        private bool isStreamsInfoNeededFieldSpecified;
        
        private int versionNoField;
        
        private bool versionNoFieldSpecified;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCheckOutStatusNeeded {
            get {
                return this.isCheckOutStatusNeededField;
            }
            set {
                this.isCheckOutStatusNeededField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCheckOutStatusNeededSpecified {
            get {
                return this.isCheckOutStatusNeededFieldSpecified;
            }
            set {
                this.isCheckOutStatusNeededFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsIndexDataValuesNeeded {
            get {
                return this.isIndexDataValuesNeededField;
            }
            set {
                this.isIndexDataValuesNeededField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsIndexDataValuesNeededSpecified {
            get {
                return this.isIndexDataValuesNeededFieldSpecified;
            }
            set {
                this.isIndexDataValuesNeededFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsStreamsInfoAndDataNeeded {
            get {
                return this.isStreamsInfoAndDataNeededField;
            }
            set {
                this.isStreamsInfoAndDataNeededField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsStreamsInfoAndDataNeededSpecified {
            get {
                return this.isStreamsInfoAndDataNeededFieldSpecified;
            }
            set {
                this.isStreamsInfoAndDataNeededFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsStreamsInfoNeeded {
            get {
                return this.isStreamsInfoNeededField;
            }
            set {
                this.isStreamsInfoNeededField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsStreamsInfoNeededSpecified {
            get {
                return this.isStreamsInfoNeededFieldSpecified;
            }
            set {
                this.isStreamsInfoNeededFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionNoSpecified {
            get {
                return this.versionNoFieldSpecified;
            }
            set {
                this.versionNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateLinkFileResponse {
        
        private byte[] linkFileDataField;
        
        private string linkFileExtensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] LinkFileData {
            get {
                return this.linkFileDataField;
            }
            set {
                this.linkFileDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LinkFileExtension {
            get {
                return this.linkFileExtensionField;
            }
            set {
                this.linkFileExtensionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateLinkFileParams {
        
        private int docNoField;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveDocumentIndexDataResponse {
        
        private System.DateTime lastChangeTimeField;
        
        private bool lastChangeTimeFieldSpecified;
        
        /// <remarks/>
        public System.DateTime LastChangeTime {
            get {
                return this.lastChangeTimeField;
            }
            set {
                this.lastChangeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastChangeTimeSpecified {
            get {
                return this.lastChangeTimeFieldSpecified;
            }
            set {
                this.lastChangeTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SaveDocumentIndexDataParams {
        
        private string checkInCommentsField;
        
        private int docNoField;
        
        private WSIndexDataToPut indexDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckInComments {
            get {
                return this.checkInCommentsField;
            }
            set {
                this.checkInCommentsField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataToPut IndexData {
            get {
                return this.indexDataField;
            }
            set {
                this.indexDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentIndexDataResponse {
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private WSIndexDataToGet indexDataField;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataToGet IndexData {
            get {
                return this.indexDataField;
            }
            set {
                this.indexDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetDocumentIndexDataParams {
        
        private int docNoField;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class FillDependentFieldsResponse {
        
        private WSIndexDataItem[] updatedIndexDataItemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSIndexDataItem[] UpdatedIndexDataItems {
            get {
                return this.updatedIndexDataItemsField;
            }
            set {
                this.updatedIndexDataItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class FillDependentFieldsParams {
        
        private int docNoField;
        
        private WSIndexDataItem[] indexDataItemsField;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSIndexDataItem[] IndexDataItems {
            get {
                return this.indexDataItemsField;
            }
            set {
                this.indexDataItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCategoryInfoResponse {
        
        private WSAutoAppendMode autoAppendModeField;
        
        private bool autoAppendModeFieldSpecified;
        
        private int belongsToCaseDefinitionField;
        
        private bool belongsToCaseDefinitionFieldSpecified;
        
        private WSCategoryField[] categoryFieldsField;
        
        private int categoryNoField;
        
        private bool categoryNoFieldSpecified;
        
        private WSCheckInCommentsMode checkInCommentsModeField;
        
        private bool checkInCommentsModeFieldSpecified;
        
        private string descriptionField;
        
        private int documentTitleLengthField;
        
        private bool documentTitleLengthFieldSpecified;
        
        private int fieldCountField;
        
        private bool fieldCountFieldSpecified;
        
        private int folderNoField;
        
        private bool folderNoFieldSpecified;
        
        private string guidField;
        
        private int heightField;
        
        private bool heightFieldSpecified;
        
        private bool isFulltextEnabledField;
        
        private bool isFulltextEnabledFieldSpecified;
        
        private string nameField;
        
        private bool newVersionOnIndexDataChangeField;
        
        private bool newVersionOnIndexDataChangeFieldSpecified;
        
        private int queryTemplateNoField;
        
        private bool queryTemplateNoFieldSpecified;
        
        private int subCtgryFieldIxField;
        
        private bool subCtgryFieldIxFieldSpecified;
        
        private string tableNameField;
        
        private string titleField;
        
        private int versionField;
        
        private bool versionFieldSpecified;
        
        private int watermarkDocNoField;
        
        private bool watermarkDocNoFieldSpecified;
        
        private int watermarkHPosField;
        
        private bool watermarkHPosFieldSpecified;
        
        private int watermarkModeField;
        
        private bool watermarkModeFieldSpecified;
        
        private int watermarkResolutionField;
        
        private bool watermarkResolutionFieldSpecified;
        
        private int watermarkVPosField;
        
        private bool watermarkVPosFieldSpecified;
        
        private int widthField;
        
        private bool widthFieldSpecified;
        
        private string workflowFolderField;
        
        private string workflowFormField;
        
        private int workflowProcessNoField;
        
        private bool workflowProcessNoFieldSpecified;
        
        private int workflowProcessNoUpdateField;
        
        private bool workflowProcessNoUpdateFieldSpecified;
        
        /// <remarks/>
        public WSAutoAppendMode AutoAppendMode {
            get {
                return this.autoAppendModeField;
            }
            set {
                this.autoAppendModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoAppendModeSpecified {
            get {
                return this.autoAppendModeFieldSpecified;
            }
            set {
                this.autoAppendModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int BelongsToCaseDefinition {
            get {
                return this.belongsToCaseDefinitionField;
            }
            set {
                this.belongsToCaseDefinitionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BelongsToCaseDefinitionSpecified {
            get {
                return this.belongsToCaseDefinitionFieldSpecified;
            }
            set {
                this.belongsToCaseDefinitionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSCategoryField[] CategoryFields {
            get {
                return this.categoryFieldsField;
            }
            set {
                this.categoryFieldsField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryNoSpecified {
            get {
                return this.categoryNoFieldSpecified;
            }
            set {
                this.categoryNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WSCheckInCommentsMode CheckInCommentsMode {
            get {
                return this.checkInCommentsModeField;
            }
            set {
                this.checkInCommentsModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckInCommentsModeSpecified {
            get {
                return this.checkInCommentsModeFieldSpecified;
            }
            set {
                this.checkInCommentsModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentTitleLength {
            get {
                return this.documentTitleLengthField;
            }
            set {
                this.documentTitleLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentTitleLengthSpecified {
            get {
                return this.documentTitleLengthFieldSpecified;
            }
            set {
                this.documentTitleLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int FieldCount {
            get {
                return this.fieldCountField;
            }
            set {
                this.fieldCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldCountSpecified {
            get {
                return this.fieldCountFieldSpecified;
            }
            set {
                this.fieldCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int FolderNo {
            get {
                return this.folderNoField;
            }
            set {
                this.folderNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FolderNoSpecified {
            get {
                return this.folderNoFieldSpecified;
            }
            set {
                this.folderNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified {
            get {
                return this.heightFieldSpecified;
            }
            set {
                this.heightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsFulltextEnabled {
            get {
                return this.isFulltextEnabledField;
            }
            set {
                this.isFulltextEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsFulltextEnabledSpecified {
            get {
                return this.isFulltextEnabledFieldSpecified;
            }
            set {
                this.isFulltextEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool NewVersionOnIndexDataChange {
            get {
                return this.newVersionOnIndexDataChangeField;
            }
            set {
                this.newVersionOnIndexDataChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NewVersionOnIndexDataChangeSpecified {
            get {
                return this.newVersionOnIndexDataChangeFieldSpecified;
            }
            set {
                this.newVersionOnIndexDataChangeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int QueryTemplateNo {
            get {
                return this.queryTemplateNoField;
            }
            set {
                this.queryTemplateNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryTemplateNoSpecified {
            get {
                return this.queryTemplateNoFieldSpecified;
            }
            set {
                this.queryTemplateNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SubCtgryFieldIx {
            get {
                return this.subCtgryFieldIxField;
            }
            set {
                this.subCtgryFieldIxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubCtgryFieldIxSpecified {
            get {
                return this.subCtgryFieldIxFieldSpecified;
            }
            set {
                this.subCtgryFieldIxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int WatermarkDocNo {
            get {
                return this.watermarkDocNoField;
            }
            set {
                this.watermarkDocNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WatermarkDocNoSpecified {
            get {
                return this.watermarkDocNoFieldSpecified;
            }
            set {
                this.watermarkDocNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int WatermarkHPos {
            get {
                return this.watermarkHPosField;
            }
            set {
                this.watermarkHPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WatermarkHPosSpecified {
            get {
                return this.watermarkHPosFieldSpecified;
            }
            set {
                this.watermarkHPosFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int WatermarkMode {
            get {
                return this.watermarkModeField;
            }
            set {
                this.watermarkModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WatermarkModeSpecified {
            get {
                return this.watermarkModeFieldSpecified;
            }
            set {
                this.watermarkModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int WatermarkResolution {
            get {
                return this.watermarkResolutionField;
            }
            set {
                this.watermarkResolutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WatermarkResolutionSpecified {
            get {
                return this.watermarkResolutionFieldSpecified;
            }
            set {
                this.watermarkResolutionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int WatermarkVPos {
            get {
                return this.watermarkVPosField;
            }
            set {
                this.watermarkVPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WatermarkVPosSpecified {
            get {
                return this.watermarkVPosFieldSpecified;
            }
            set {
                this.watermarkVPosFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified {
            get {
                return this.widthFieldSpecified;
            }
            set {
                this.widthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WorkflowFolder {
            get {
                return this.workflowFolderField;
            }
            set {
                this.workflowFolderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WorkflowForm {
            get {
                return this.workflowFormField;
            }
            set {
                this.workflowFormField = value;
            }
        }
        
        /// <remarks/>
        public int WorkflowProcessNo {
            get {
                return this.workflowProcessNoField;
            }
            set {
                this.workflowProcessNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowProcessNoSpecified {
            get {
                return this.workflowProcessNoFieldSpecified;
            }
            set {
                this.workflowProcessNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int WorkflowProcessNoUpdate {
            get {
                return this.workflowProcessNoUpdateField;
            }
            set {
                this.workflowProcessNoUpdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkflowProcessNoUpdateSpecified {
            get {
                return this.workflowProcessNoUpdateFieldSpecified;
            }
            set {
                this.workflowProcessNoUpdateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSAutoAppendMode {
        
        /// <remarks/>
        DefaultMode,
        
        /// <remarks/>
        Begin,
        
        /// <remarks/>
        End,
        
        /// <remarks/>
        Replace,
        
        /// <remarks/>
        Disabled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public enum WSCheckInCommentsMode {
        
        /// <remarks/>
        CommentsDisabled,
        
        /// <remarks/>
        CommentsAllowed,
        
        /// <remarks/>
        CommentsMandatory,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class GetCategoryInfoParams {
        
        private int categoryNoField;
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SubmitUpdateDocumentBatchResponse {
        
        private int currentDocVersionField;
        
        private bool currentDocVersionFieldSpecified;
        
        private System.DateTime lastChangeTimeField;
        
        private bool lastChangeTimeFieldSpecified;
        
        /// <remarks/>
        public int CurrentDocVersion {
            get {
                return this.currentDocVersionField;
            }
            set {
                this.currentDocVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrentDocVersionSpecified {
            get {
                return this.currentDocVersionFieldSpecified;
            }
            set {
                this.currentDocVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastChangeTime {
            get {
                return this.lastChangeTimeField;
            }
            set {
                this.lastChangeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastChangeTimeSpecified {
            get {
                return this.lastChangeTimeFieldSpecified;
            }
            set {
                this.lastChangeTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SubmitUpdateDocumentBatchParams {
        
        private string batchIdField;
        
        private string checkInCommentsField;
        
        private int docNoField;
        
        private WSIndexDataToPut indexDataField;
        
        private int[] streamNosToDeleteField;
        
        /// <remarks/>
        public string BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckInComments {
            get {
                return this.checkInCommentsField;
            }
            set {
                this.checkInCommentsField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataToPut IndexData {
            get {
                return this.indexDataField;
            }
            set {
                this.indexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public int[] StreamNosToDelete {
            get {
                return this.streamNosToDeleteField;
            }
            set {
                this.streamNosToDeleteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartUpdateDocumentBatchResponse {
        
        private string batchIdField;
        
        /// <remarks/>
        public string BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartUpdateDocumentBatchParams {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class AddStreamsToDocumentResponse {
        
        private int streamNoField;
        
        private bool streamNoFieldSpecified;
        
        /// <remarks/>
        public int StreamNo {
            get {
                return this.streamNoField;
            }
            set {
                this.streamNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StreamNoSpecified {
            get {
                return this.streamNoFieldSpecified;
            }
            set {
                this.streamNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class AddStreamsToDocumentParams {
        
        private string checkInCommentsField;
        
        private WSConversionOptions conversionOptionsField;
        
        private int docNoField;
        
        private WSStreamInfoWithData[] streamsToUploadField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckInComments {
            get {
                return this.checkInCommentsField;
            }
            set {
                this.checkInCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSConversionOptions ConversionOptions {
            get {
                return this.conversionOptionsField;
            }
            set {
                this.conversionOptionsField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSStreamInfoWithData[] StreamsToUpload {
            get {
                return this.streamsToUploadField;
            }
            set {
                this.streamsToUploadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateDocumentResponse {
        
        private int currentDocVersionField;
        
        private bool currentDocVersionFieldSpecified;
        
        private System.DateTime lastChangeTimeField;
        
        private bool lastChangeTimeFieldSpecified;
        
        /// <remarks/>
        public int CurrentDocVersion {
            get {
                return this.currentDocVersionField;
            }
            set {
                this.currentDocVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrentDocVersionSpecified {
            get {
                return this.currentDocVersionFieldSpecified;
            }
            set {
                this.currentDocVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastChangeTime {
            get {
                return this.lastChangeTimeField;
            }
            set {
                this.lastChangeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastChangeTimeSpecified {
            get {
                return this.lastChangeTimeFieldSpecified;
            }
            set {
                this.lastChangeTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UpdateDocumentParams {
        
        private string checkInCommentsField;
        
        private int docNoField;
        
        private WSIndexDataToPut indexDataField;
        
        private int[] streamNosToDeleteField;
        
        private WSStreamInfoWithData[] streamsToUpdateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckInComments {
            get {
                return this.checkInCommentsField;
            }
            set {
                this.checkInCommentsField = value;
            }
        }
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataToPut IndexData {
            get {
                return this.indexDataField;
            }
            set {
                this.indexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("StreamNo", IsNullable=false)]
        public int[] StreamNosToDelete {
            get {
                return this.streamNosToDeleteField;
            }
            set {
                this.streamNosToDeleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSStreamInfoWithData[] StreamsToUpdate {
            get {
                return this.streamsToUpdateField;
            }
            set {
                this.streamsToUpdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SubmitCreateDocumentBatchResponse {
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private System.DateTime lastChangeTimeField;
        
        private bool lastChangeTimeFieldSpecified;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastChangeTime {
            get {
                return this.lastChangeTimeField;
            }
            set {
                this.lastChangeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastChangeTimeSpecified {
            get {
                return this.lastChangeTimeFieldSpecified;
            }
            set {
                this.lastChangeTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class SubmitCreateDocumentBatchParams {
        
        private string batchIdField;
        
        private int categoryNoField;
        
        private string checkInCommentsField;
        
        private WSIndexDataItem[] indexDataItemsField;
        
        /// <remarks/>
        public string BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryNo {
            get {
                return this.categoryNoField;
            }
            set {
                this.categoryNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckInComments {
            get {
                return this.checkInCommentsField;
            }
            set {
                this.checkInCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSIndexDataItem[] IndexDataItems {
            get {
                return this.indexDataItemsField;
            }
            set {
                this.indexDataItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UploadDocStreamToBatchResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class UploadDocStreamToBatchParams {
        
        private string batchIdField;
        
        private WSStreamInfoWithData streamInfoWithDataField;
        
        /// <remarks/>
        public string BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSStreamInfoWithData StreamInfoWithData {
            get {
                return this.streamInfoWithDataField;
            }
            set {
                this.streamInfoWithDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartCreateDocumentBatchResponse {
        
        private string batchIdField;
        
        /// <remarks/>
        public string BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class StartCreateDocumentBatchParams {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class CreateDocumentResponse {
        
        private int docNoField;
        
        private bool docNoFieldSpecified;
        
        private System.DateTime lastChangeTimeField;
        
        private bool lastChangeTimeFieldSpecified;
        
        /// <remarks/>
        public int DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNoSpecified {
            get {
                return this.docNoFieldSpecified;
            }
            set {
                this.docNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastChangeTime {
            get {
                return this.lastChangeTimeField;
            }
            set {
                this.lastChangeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastChangeTimeSpecified {
            get {
                return this.lastChangeTimeFieldSpecified;
            }
            set {
                this.lastChangeTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTableFieldDataRowItem {
        
        private WSIndexDataDate dateIndexDataField;
        
        private WSIndexDataInt intIndexDataField;
        
        private WSIndexDataLogical logicalIndexDataField;
        
        private WSIndexDataMoney moneyIndexDataField;
        
        private WSIndexDataSingleKeyword singleKeywordDataField;
        
        private WSIndexDataString stringIndexDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataDate DateIndexData {
            get {
                return this.dateIndexDataField;
            }
            set {
                this.dateIndexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataInt IntIndexData {
            get {
                return this.intIndexDataField;
            }
            set {
                this.intIndexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataLogical LogicalIndexData {
            get {
                return this.logicalIndexDataField;
            }
            set {
                this.logicalIndexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataMoney MoneyIndexData {
            get {
                return this.moneyIndexDataField;
            }
            set {
                this.moneyIndexDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataSingleKeyword SingleKeywordData {
            get {
                return this.singleKeywordDataField;
            }
            set {
                this.singleKeywordDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WSIndexDataString StringIndexData {
            get {
                return this.stringIndexDataField;
            }
            set {
                this.stringIndexDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataInt : WSIndexDataBase {
        
        private System.Nullable<int> dataValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DataValue {
            get {
                return this.dataValueField;
            }
            set {
                this.dataValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataLogical : WSIndexDataBase {
        
        private System.Nullable<bool> dataValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> DataValue {
            get {
                return this.dataValueField;
            }
            set {
                this.dataValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataMoney : WSIndexDataBase {
        
        private System.Nullable<double> dataValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> DataValue {
            get {
                return this.dataValueField;
            }
            set {
                this.dataValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataSingleKeyword : WSIndexDataBase {
        
        private string dataValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DataValue {
            get {
                return this.dataValueField;
            }
            set {
                this.dataValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataString : WSIndexDataBase {
        
        private string dataValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DataValue {
            get {
                return this.dataValueField;
            }
            set {
                this.dataValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSTableFieldDataRow {
        
        private WSTableFieldDataRowItem[] dataRowItemsField;
        
        private System.Nullable<int> rowNoField;
        
        private bool rowNoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSTableFieldDataRowItem[] DataRowItems {
            get {
                return this.dataRowItemsField;
            }
            set {
                this.dataRowItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RowNo {
            get {
                return this.rowNoField;
            }
            set {
                this.rowNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowNoSpecified {
            get {
                return this.rowNoFieldSpecified;
            }
            set {
                this.rowNoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataTable : WSIndexDataBase {
        
        private WSTableFieldDataRow[] dataValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WSTableFieldDataRow[] DataValue {
            get {
                return this.dataValueField;
            }
            set {
                this.dataValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.therefore.net/webservices/interop/v0001/types")]
    public partial class WSIndexDataMultipleKeyword : WSIndexDataBase {
        
        private string[] dataValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword")]
        public string[] DataValue {
            get {
                return this.dataValueField;
            }
            set {
                this.dataValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateDocumentCompletedEventHandler(object sender, CreateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateDocumentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateDocumentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void StartCreateDocumentBatchCompletedEventHandler(object sender, StartCreateDocumentBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartCreateDocumentBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartCreateDocumentBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StartCreateDocumentBatchResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StartCreateDocumentBatchResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UploadDocStreamToBatchCompletedEventHandler(object sender, UploadDocStreamToBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocStreamToBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocStreamToBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UploadDocStreamToBatchResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UploadDocStreamToBatchResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SubmitCreateDocumentBatchCompletedEventHandler(object sender, SubmitCreateDocumentBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitCreateDocumentBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitCreateDocumentBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubmitCreateDocumentBatchResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubmitCreateDocumentBatchResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateDocumentCompletedEventHandler(object sender, UpdateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateDocumentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateDocumentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddStreamsToDocumentCompletedEventHandler(object sender, AddStreamsToDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStreamsToDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStreamsToDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddStreamsToDocumentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddStreamsToDocumentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void StartUpdateDocumentBatchCompletedEventHandler(object sender, StartUpdateDocumentBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartUpdateDocumentBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartUpdateDocumentBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StartUpdateDocumentBatchResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StartUpdateDocumentBatchResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SubmitUpdateDocumentBatchCompletedEventHandler(object sender, SubmitUpdateDocumentBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitUpdateDocumentBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitUpdateDocumentBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubmitUpdateDocumentBatchResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubmitUpdateDocumentBatchResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCategoryInfoCompletedEventHandler(object sender, GetCategoryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetCategoryInfoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetCategoryInfoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void FillDependentFieldsCompletedEventHandler(object sender, FillDependentFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FillDependentFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FillDependentFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FillDependentFieldsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FillDependentFieldsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDocumentIndexDataCompletedEventHandler(object sender, GetDocumentIndexDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentIndexDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentIndexDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentIndexDataResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentIndexDataResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveDocumentIndexDataCompletedEventHandler(object sender, SaveDocumentIndexDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDocumentIndexDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDocumentIndexDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SaveDocumentIndexDataResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SaveDocumentIndexDataResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateLinkFileCompletedEventHandler(object sender, CreateLinkFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateLinkFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateLinkFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateLinkFileResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateLinkFileResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDocumentCompletedEventHandler(object sender, GetDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDocumentStreamCompletedEventHandler(object sender, GetDocumentStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentStreamResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentStreamResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetConvertedDocStreamsCompletedEventHandler(object sender, GetConvertedDocStreamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConvertedDocStreamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConvertedDocStreamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetConvertedDocStreamsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetConvertedDocStreamsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDocumentCheckoutStatusCompletedEventHandler(object sender, GetDocumentCheckoutStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentCheckoutStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentCheckoutStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentCheckoutStateResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentCheckoutStateResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetThumbnailCompletedEventHandler(object sender, GetThumbnailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThumbnailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThumbnailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetThumbnailResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetThumbnailResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDocumentPropertiesCompletedEventHandler(object sender, GetDocumentPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentPropertiesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentPropertiesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteDocumentCompletedEventHandler(object sender, DeleteDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteDocumentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteDocumentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteSimpleQueryCompletedEventHandler(object sender, ExecuteSimpleQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSimpleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSimpleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteSimpleQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteSimpleQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetQuerySpecificationCompletedEventHandler(object sender, GetQuerySpecificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuerySpecificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuerySpecificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuerySpecificationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuerySpecificationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteSingleQueryCompletedEventHandler(object sender, ExecuteSingleQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSingleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSingleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteSingleQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteSingleQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteAsyncSingleQueryCompletedEventHandler(object sender, ExecuteAsyncSingleQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteAsyncSingleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteAsyncSingleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteAsyncSingleQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteAsyncSingleQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetNextSingleQueryRowsCompletedEventHandler(object sender, GetNextSingleQueryRowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextSingleQueryRowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextSingleQueryRowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetNextSingleQueryRowsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetNextSingleQueryRowsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ReleaseSingleQueryCompletedEventHandler(object sender, ReleaseSingleQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReleaseSingleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReleaseSingleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReleaseSingleQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReleaseSingleQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteMultiQueryCompletedEventHandler(object sender, ExecuteMultiQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteMultiQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteMultiQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteMultiQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteMultiQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteAsyncMultiQueryCompletedEventHandler(object sender, ExecuteAsyncMultiQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteAsyncMultiQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteAsyncMultiQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteAsyncMultiQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteAsyncMultiQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetNextMultiQueryRowsCompletedEventHandler(object sender, GetNextMultiQueryRowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextMultiQueryRowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextMultiQueryRowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetNextMultiQueryRowsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetNextMultiQueryRowsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ReleaseMultiQueryCompletedEventHandler(object sender, ReleaseMultiQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReleaseMultiQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReleaseMultiQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReleaseMultiQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReleaseMultiQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteFullTextQueryCompletedEventHandler(object sender, ExecuteFullTextQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteFullTextQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteFullTextQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteFullTextQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteFullTextQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteAsyncFullTextQueryCompletedEventHandler(object sender, ExecuteAsyncFullTextQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteAsyncFullTextQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteAsyncFullTextQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteAsyncFullTextQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteAsyncFullTextQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetNextFullTextQueryRowsCompletedEventHandler(object sender, GetNextFullTextQueryRowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextFullTextQueryRowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextFullTextQueryRowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetNextFullTextQueryRowsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetNextFullTextQueryRowsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ReleaseFullTextQueryCompletedEventHandler(object sender, ReleaseFullTextQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReleaseFullTextQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReleaseFullTextQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReleaseFullTextQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReleaseFullTextQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCategoriesTreeCompletedEventHandler(object sender, GetCategoriesTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoriesTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoriesTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetCategoriesTreeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetCategoriesTreeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDomainInfoCompletedEventHandler(object sender, GetDomainInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDomainInfoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDomainInfoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllTreeViewsCompletedEventHandler(object sender, GetAllTreeViewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTreeViewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTreeViewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetAllTreeViewsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetAllTreeViewsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetTreeViewChildNodesCompletedEventHandler(object sender, GetTreeViewChildNodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeViewChildNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeViewChildNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetTreeViewChildNodesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTreeViewChildNodesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetTreeViewNodeDocumentsCompletedEventHandler(object sender, GetTreeViewNodeDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeViewNodeDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeViewNodeDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetTreeViewNodeDocumentsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTreeViewNodeDocumentsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetConnectedUserCompletedEventHandler(object sender, GetConnectedUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectedUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectedUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetConnectedUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetConnectedUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteUsersQueryCompletedEventHandler(object sender, ExecuteUsersQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteUsersQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteUsersQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteUsersQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteUsersQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetWebAPIServerVersionCompletedEventHandler(object sender, GetWebAPIServerVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebAPIServerVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebAPIServerVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetWebAPIServerVersionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetWebAPIServerVersionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void HasPermissionsCompletedEventHandler(object sender, HasPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HasPermissionsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HasPermissionsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetObjectsCompletedEventHandler(object sender, GetObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetObjectsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetObjectsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetObjectRightsCompletedEventHandler(object sender, GetObjectRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetObjectRightsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetObjectRightsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPermissionConstantsCompletedEventHandler(object sender, GetPermissionConstantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermissionConstantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermissionConstantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetPermissionConstantsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetPermissionConstantsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateCaseCompletedEventHandler(object sender, CreateCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateCaseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateCaseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCaseCompletedEventHandler(object sender, GetCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetCaseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetCaseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveCaseIndexDataCompletedEventHandler(object sender, SaveCaseIndexDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCaseIndexDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCaseIndexDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SaveCaseIndexDataResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SaveCaseIndexDataResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteCaseCompletedEventHandler(object sender, DeleteCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteCaseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteCaseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCaseDefinitionCompletedEventHandler(object sender, GetCaseDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetCaseDefinitionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetCaseDefinitionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCaseDocumentsCompletedEventHandler(object sender, GetCaseDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetCaseDocumentsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetCaseDocumentsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCaseHistoryCompletedEventHandler(object sender, GetCaseHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetCaseHistoryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetCaseHistoryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteWorkflowQueryForProcessCompletedEventHandler(object sender, ExecuteWorkflowQueryForProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteWorkflowQueryForProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteWorkflowQueryForProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteWorkflowQueryForProcessResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteWorkflowQueryForProcessResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteWorkflowQueryForAllCompletedEventHandler(object sender, ExecuteWorkflowQueryForAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteWorkflowQueryForAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteWorkflowQueryForAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteWorkflowQueryForAllResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteWorkflowQueryForAllResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetWorkflowProcessCompletedEventHandler(object sender, GetWorkflowProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkflowProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkflowProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetWorkflowProcessResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetWorkflowProcessResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetWorkflowInstanceCompletedEventHandler(object sender, GetWorkflowInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetWorkflowInstanceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetWorkflowInstanceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void StartWorkflowInstanceCompletedEventHandler(object sender, StartWorkflowInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StartWorkflowInstanceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StartWorkflowInstanceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ClaimWorkflowInstanceCompletedEventHandler(object sender, ClaimWorkflowInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClaimWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClaimWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClaimWorkflowInstanceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClaimWorkflowInstanceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DisclaimWorkflowInstanceCompletedEventHandler(object sender, DisclaimWorkflowInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisclaimWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisclaimWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DisclaimWorkflowInstanceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DisclaimWorkflowInstanceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DelegateWorkflowInstanceCompletedEventHandler(object sender, DelegateWorkflowInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelegateWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelegateWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DelegateWorkflowInstanceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DelegateWorkflowInstanceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteWorkflowInstanceCompletedEventHandler(object sender, DeleteWorkflowInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteWorkflowInstanceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteWorkflowInstanceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void FinishCurrentWorkflowTaskCompletedEventHandler(object sender, FinishCurrentWorkflowTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishCurrentWorkflowTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishCurrentWorkflowTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FinishCurrentWorkflowTaskResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FinishCurrentWorkflowTaskResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetChecklistItemWorkflowCompletedEventHandler(object sender, SetChecklistItemWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetChecklistItemWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetChecklistItemWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetChecklistItemWorkflowResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetChecklistItemWorkflowResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetTextInfoWorkflowCompletedEventHandler(object sender, SetTextInfoWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTextInfoWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTextInfoWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetTextInfoWorkflowResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetTextInfoWorkflowResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LinkDocumentsCompletedEventHandler(object sender, LinkDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinkDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LinkDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LinkDocumentsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LinkDocumentsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UnlinkDocumentsCompletedEventHandler(object sender, UnlinkDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlinkDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlinkDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnlinkDocumentsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnlinkDocumentsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LinkDocAndWFInstanceCompletedEventHandler(object sender, LinkDocAndWFInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinkDocAndWFInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LinkDocAndWFInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LinkDocAndWFInstanceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LinkDocAndWFInstanceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UnlinkDocAndWFInstanceCompletedEventHandler(object sender, UnlinkDocAndWFInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlinkDocAndWFInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlinkDocAndWFInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnlinkDocAndWFInstanceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnlinkDocAndWFInstanceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLinkedObjectsCompletedEventHandler(object sender, GetLinkedObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetLinkedObjectsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetLinkedObjectsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLinkedWorkflowsForDocCompletedEventHandler(object sender, GetLinkedWorkflowsForDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedWorkflowsForDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedWorkflowsForDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetLinkedWorkflowsForDocResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetLinkedWorkflowsForDocResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void StartTaskCompletedEventHandler(object sender, StartTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StartTaskResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StartTaskResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetTaskCompletedEventHandler(object sender, GetTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetTaskResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTaskResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetTaskInfoCompletedEventHandler(object sender, GetTaskInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetTaskInfoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTaskInfoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateTaskCompletedEventHandler(object sender, UpdateTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateTaskResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateTaskResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteTaskCompletedEventHandler(object sender, DeleteTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteTaskResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteTaskResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetTaskStatusCompletedEventHandler(object sender, SetTaskStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTaskStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTaskStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetTaskStatusResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetTaskStatusResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateTaskCommentCompletedEventHandler(object sender, UpdateTaskCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTaskCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTaskCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateTaskCommentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateTaskCommentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CompleteTaskCompletedEventHandler(object sender, CompleteTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompleteTaskResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompleteTaskResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteTaskInfoQueryCompletedEventHandler(object sender, ExecuteTaskInfoQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteTaskInfoQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteTaskInfoQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteTaskInfoQueryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteTaskInfoQueryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSettingStringCompletedEventHandler(object sender, GetSettingStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettingStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettingStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetSettingStringResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetSettingStringResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSettingIntCompletedEventHandler(object sender, GetSettingIntCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettingIntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettingIntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetSettingIntResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetSettingIntResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetReportDefinitionCompletedEventHandler(object sender, GetReportDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetReportDefinitionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetReportDefinitionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteReportCompletedEventHandler(object sender, ExecuteReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExecuteReportResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExecuteReportResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetKeywordsByFieldNoCompletedEventHandler(object sender, GetKeywordsByFieldNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeywordsByFieldNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeywordsByFieldNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetKeywordsByFieldNoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetKeywordsByFieldNoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDictionaryInfoCompletedEventHandler(object sender, GetDictionaryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDictionaryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDictionaryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDictionaryInfoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDictionaryInfoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddDictionaryKeywordCompletedEventHandler(object sender, AddDictionaryKeywordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDictionaryKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDictionaryKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddDictionaryKeywordResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddDictionaryKeywordResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteDictionaryKeywordCompletedEventHandler(object sender, DeleteDictionaryKeywordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDictionaryKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDictionaryKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteDictionaryKeywordResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteDictionaryKeywordResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateDictionaryKeywordCompletedEventHandler(object sender, UpdateDictionaryKeywordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDictionaryKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDictionaryKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateDictionaryKeywordResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateDictionaryKeywordResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591